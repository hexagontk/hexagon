{
  "openapi": "3.0.2",
  "info": {
    "title": "Test OpenAPI Spec",
    "description": "This is a test OpenAPI spec for the Hexagon Mock Server project.",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "basic": {
        "type": "http",
        "scheme": "basic"
      },
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "unknown": {
        "type": "http",
        "scheme": "unknown"
      },
      "api_key_query": {
        "type": "apiKey",
        "name": "api-key",
        "in": "query"
      },
      "api_key_header": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header"
      },
      "api_key_cookie": {
        "type": "apiKey",
        "name": "api-key",
        "in": "cookie"
      },
      "api_key_unknown": {
        "type": "apiKey",
        "name": "api-key",
        "in": "unknown"
      }
    }
  },
  "paths": {
    "/ping" : {
      "get": {
        "summary": "A basic ping endpoint",
        "description": "A basic ping endpoint",
        "responses": {
          "200": {
            "description": " Successful operation",
            "content": {
              "application/json": {
                "example": "pong"
              }
            }
          }
        }
      }
    },
    "/get-example-from-schema": {
      "get": {
        "summary": "Another basic endpoint",
        "description": "Another basic endpoint, and the response example is in the mediatype schema",
        "responses": {
          "200": {
            "description": "Successful operation, and the response example is in the mediatype schema",
            "content": {
              "application/json": {
                "schema": {
                  "example": "response"
                }
              }
            }
          }
        }
      }
    },
    "/get-example-from-mediatype": {
      "get": {
        "summary": "Another basic endpoint",
        "description": "Another basic endpoint, and the response example is in the mediatype",
        "responses": {
          "200": {
            "description": "Successful operation, and the response example is in the mediatype",
            "content": {
              "application/json": {
                "example": "response"
              }
            }
          }
        }
      }
    },
    "/get-from-multiple-examples": {
      "get": {
        "summary": "Another basic endpoint",
        "description": "Another basic endpoint, and there are multiple response examples in the mediatype",
        "responses": {
          "200": {
            "description": "Successful operation, and there are multiple response examples in the mediatype",
            "content": {
              "application/json": {
                "examples": {
                  "example1": {
                    "value": "foo"
                  },
                  "example2": {
                    "value": "bar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/get-from-no-examples": {
      "get": {
        "summary": "Another basic endpoint",
        "description": "Another basic endpoint, and there are no examples",
        "responses": {
          "200": {
            "description": "Successful operation, and there are no examples",
            "content": {
              "application/json": {

              }
            }
          }
        }
      }
    },
    "/check-query-param": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly parses query params",
        "description": "An endpoint to check if the mock server correctly parses query params, and returns the correct response if they are missing or not of the required value",
        "parameters": [
          {
            "name": "queryParam",
            "in": "query",
            "description": "A query param that is required",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "enum":[
                "aValidValue",
                "anotherValidValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing query param sent",
            "content": {
              "application/json": {
                "example": "invalid or missing query param"
              }
            }
          }
        }
      }
    },
    "/check-optional-query-param": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly verifies optional query params",
        "description": "An endpoint to check if the mock server correctly verifies optional query params, and returns the correct response if they are missing or not of the required value",
        "parameters": [
          {
            "name": "queryParam",
            "in": "query",
            "description": "A query param that is optional, so the mock server should check this if it is present",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "enum":[
                "aValidValue",
                "anotherValidValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing query param sent",
            "content": {
              "application/json": {
                "example": "invalid or missing query param"
              }
            }
          }
        }
      }
    },
    "/check-path-param/{pathParam}": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly verifies path params",
        "description": "An endpoint to check if the mock server correctly verifies path params, and returns the correct response if they are missing or not of the required value",
        "parameters": [
          {
            "name": "pathParam",
            "in": "path",
            "description": "A path param that is required",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "enum":[
                "aValidValue",
                "anotherValidValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing path param sent",
            "content": {
              "application/json": {
                "example": "invalid or missing path param"
              }
            }
          }
        }
      }
    },
    "/check-header-param": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly verifies header params",
        "description": "An endpoint to check if the mock server correctly verifies header params, and returns the correct response if they are missing or not of the required value",
        "parameters": [
          {
            "name": "header-param",
            "in": "header",
            "description": "A header param that is required",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "enum":[
                "aValidValue",
                "anotherValidValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing header param sent",
            "content": {
              "application/json": {
                "example": "invalid or missing header param"
              }
            }
          }
        }
      }
    },
    "/check-optional-header-param": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly verifies optional header params",
        "description": "An endpoint to check if the mock server correctly verifies optional header params, and returns the correct response if they are missing or not of the required value",
        "parameters": [
          {
            "name": "header-param",
            "in": "header",
            "description": "A header param that is optional, so the mock server should check this if it is present",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "enum":[
                "aValidValue",
                "anotherValidValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing header param sent",
            "content": {
              "application/json": {
                "example": "invalid or missing header param"
              }
            }
          }
        }
      }
    },
    "/check-cookie-param": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly verifies cookie params",
        "description": "An endpoint to check if the mock server correctly verifies cookie params, and returns the correct response if they are missing or not of the required value",
        "parameters": [
          {
            "name": "cookieParam",
            "in": "cookie",
            "description": "A cookie param that is required",
            "required": true,
            "explode": true,
            "schema": {
              "type": "string",
              "enum":[
                "aValidValue",
                "anotherValidValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing cookie param sent",
            "content": {
              "application/json": {
                "example": "invalid or missing cookie param"
              }
            }
          }
        }
      }
    },
    "/check-optional-cookie-param": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly verifies optional cookie params",
        "description": "An endpoint to check if the mock server correctly verifies optional cookie params, and returns the correct response if they are missing or not of the required value",
        "parameters": [
          {
            "name": "cookieParam",
            "in": "cookie",
            "description": "A cookie param that is optional, so the mock server should check this if it is present",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string",
              "enum":[
                "aValidValue",
                "anotherValidValue"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing cookie param sent",
            "content": {
              "application/json": {
                "example": "invalid or missing cookie param"
              }
            }
          }
        }
      }
    },
    "/check-body": {
      "get": {
        "summary": "An endpoint to check if the mock server correctly verifies the request body",
        "description": "An endpoint to check if the mock server correctly verifies the request body, and returns the correct response if they are missing or not of the required value",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "400": {
            "description": "Invalid or missing request body",
            "content": {
              "application/json": {
                "example": "invalid or missing request body"
              }
            }
          }
        }
      }
    },
    "/check-optional-auth": {
      "get": {
        "summary": "An endpoint with optional authentication",
        "description": "An endpoint with optional authentication",
        "security": [
          {
            "basic": [ ]
          },
          { }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-basic-auth": {
      "get": {
        "summary": "An endpoint that requires basic (username/password) authentication",
        "description": "An endpoint that requires basic (username/password) authentication",
        "security": [
          {
            "basic": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-bearer-auth": {
      "get": {
        "summary": "An endpoint that requires bearer JWT authentication",
        "description": "An endpoint that requires bearer JWT authentication",
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-unknown-auth": {
      "get": {
        "summary": "An endpoint that requires authentication of an unknown scheme",
        "description": "An endpoint that requires authentication of an unknown scheme",
        "security": [
          {
            "unknown": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-query-api-auth": {
      "get": {
        "summary": "An endpoint that requires authentication with an API key present in the query params",
        "description": "An endpoint that requires authentication with an API key present in the query params",
        "security": [
          {
            "api_key_query": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-header-api-auth": {
      "get": {
        "summary": "An endpoint that requires authentication with an API key present in the header",
        "description": "An endpoint that requires authentication with an API key present in the header",
        "security": [
          {
            "api_key_header": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-cookie-api-auth": {
      "get": {
        "summary": "An endpoint that requires authentication with an API key present in the cookies",
        "description": "An endpoint that requires authentication with an API key present in the cookies",
        "security": [
          {
            "api_key_cookie": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-unknown-api-auth": {
      "get": {
        "summary": "An endpoint that requires authentication with an API key present in an unknown location",
        "description": "An endpoint that requires authentication with an API key present in an unknown location",
        "security": [
          {
            "api_key_unknown": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-multiple-mechanisms": {
      "get": {
        "summary": "An endpoint that contains multiple security mechanisms",
        "description": "An endpoint that contains multiple security mechanisms, any one of which need to be satisfied",
        "security": [
          {
            "api_key_cookie": [ ]
          },
          {
            "basic": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    },
    "/check-multiple-schemes": {
      "get": {
        "summary": "An endpoint that contains multiple security schemes",
        "description": "An endpoint that contains multiple security schemes, all of which need to be satisfied",
        "security": [
          {
            "api_key_cookie": [ ],
            "basic": [ ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "example": "success"
              }
            }
          },
          "401": {
            "description": "Invalid authorization credentials",
            "content": {
              "application/json": {
                "example": "Invalid authorization credentials"
              }
            }
          }
        }
      }
    }
  }
}

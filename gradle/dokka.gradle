/*
 * Check usage information at: http://hexagontk.com/gradle/#dokka
 */

apply(plugin: "kotlin")
apply(plugin: "maven-publish")
apply(plugin: "org.jetbrains.dokka")
apply(plugin: "org.jetbrains.dokka-javadoc")

tasks.register("dokkaJar", Jar) {
    group = "distribution"
    description = "Create a jar file with the source code documentation in Javadoc format."
    dependsOn("dokkaJavadoc")

    archiveClassifier.set("javadoc")
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(fileTree("${layout.buildDirectory.get().asFile.absolutePath}/dokka/javadoc"))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(dokkaJar)
        }
    }
}

tasks.named("dokkaGenerateModuleJavadoc") {
    dependsOn("dokkaGenerateModuleHtml")
}

tasks.named("dokkaGenerateModuleHtml") {
    dependsOn("dokkaGeneratePublicationHtml")
}

tasks.named("dokkaGeneratePublicationHtml") {
    dependsOn("dokkaGeneratePublicationJavadoc")
}

tasks.named("dokkaGeneratePublicationJavadoc") {
    dependsOn(
        "compileJava",
        "compileKotlin",
        "compileTestKotlin",
        "processResources",
        "processTestResources"
    )
}

dokka {
    moduleName.set(project.name)
    dokkaSourceSets {
        configureEach {
            reportUndocumented.set(false)
            includes.from(fileTree(projectDir) { include("*.md") })
            samples.from(fileTree(projectDir) { include("**/*Test.kt") })
        }
    }
}

[{"name":"class HttpClientTool(adapter: HttpClientPort, url: String? = null, httpContentType: ContentType? = null, httpAccept: List<ContentType> = emptyList(), val httpHeaders: Map<String, *> = emptyMap<String, Any>(), sslSettings: SslSettings? = SslSettings(), val handler: HttpHandler? = serializeHandler, authorization: Authorization? = null, followRedirects: Boolean = false)","description":"com.hexagontk.rest.tools.HttpClientTool","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/index.html","searchKeys":["HttpClientTool","class HttpClientTool(adapter: HttpClientPort, url: String? = null, httpContentType: ContentType? = null, httpAccept: List<ContentType> = emptyList(), val httpHeaders: Map<String, *> = emptyMap<String, Any>(), sslSettings: SslSettings? = SslSettings(), val handler: HttpHandler? = serializeHandler, authorization: Authorization? = null, followRedirects: Boolean = false)","com.hexagontk.rest.tools.HttpClientTool"]},{"name":"class HttpServerTool(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), var path: PathHandler = PathHandler())","description":"com.hexagontk.rest.tools.HttpServerTool","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/index.html","searchKeys":["HttpServerTool","class HttpServerTool(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), var path: PathHandler = PathHandler())","com.hexagontk.rest.tools.HttpServerTool"]},{"name":"class RecordCallback : Function1<HttpContext, HttpContext> ","description":"com.hexagontk.rest.tools.RecordCallback","location":"http/rest_tools/com.hexagontk.rest.tools/-record-callback/index.html","searchKeys":["RecordCallback","class RecordCallback : Function1<HttpContext, HttpContext> ","com.hexagontk.rest.tools.RecordCallback"]},{"name":"class VerifySpecCallback(spec: URL) : HttpCallback","description":"com.hexagontk.rest.tools.openapi.VerifySpecCallback","location":"http/rest_tools/com.hexagontk.rest.tools.openapi/-verify-spec-callback/index.html","searchKeys":["VerifySpecCallback","class VerifySpecCallback(spec: URL) : HttpCallback","com.hexagontk.rest.tools.openapi.VerifySpecCallback"]},{"name":"constructor()","description":"com.hexagontk.rest.tools.RecordCallback.RecordCallback","location":"http/rest_tools/com.hexagontk.rest.tools/-record-callback/-record-callback.html","searchKeys":["RecordCallback","constructor()","com.hexagontk.rest.tools.RecordCallback.RecordCallback"]},{"name":"constructor(adapter: HttpClientPort, url: String? = null, httpContentType: ContentType? = null, httpAccept: List<ContentType> = emptyList(), httpHeaders: Map<String, *> = emptyMap<String, Any>(), sslSettings: SslSettings? = SslSettings(), handler: HttpHandler? = serializeHandler, authorization: Authorization? = null, followRedirects: Boolean = false)","description":"com.hexagontk.rest.tools.HttpClientTool.HttpClientTool","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/-http-client-tool.html","searchKeys":["HttpClientTool","constructor(adapter: HttpClientPort, url: String? = null, httpContentType: ContentType? = null, httpAccept: List<ContentType> = emptyList(), httpHeaders: Map<String, *> = emptyMap<String, Any>(), sslSettings: SslSettings? = SslSettings(), handler: HttpHandler? = serializeHandler, authorization: Authorization? = null, followRedirects: Boolean = false)","com.hexagontk.rest.tools.HttpClientTool.HttpClientTool"]},{"name":"constructor(adapter: HttpClientPort, url: String? = null, mediaType: MediaType, accept: List<MediaType> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), sslSettings: SslSettings? = SslSettings(), handler: HttpHandler? = serializeHandler)","description":"com.hexagontk.rest.tools.HttpClientTool.HttpClientTool","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/-http-client-tool.html","searchKeys":["HttpClientTool","constructor(adapter: HttpClientPort, url: String? = null, mediaType: MediaType, accept: List<MediaType> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), sslSettings: SslSettings? = SslSettings(), handler: HttpHandler? = serializeHandler)","com.hexagontk.rest.tools.HttpClientTool.HttpClientTool"]},{"name":"constructor(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), path: PathHandler = PathHandler())","description":"com.hexagontk.rest.tools.HttpServerTool.HttpServerTool","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/-http-server-tool.html","searchKeys":["HttpServerTool","constructor(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), path: PathHandler = PathHandler())","com.hexagontk.rest.tools.HttpServerTool.HttpServerTool"]},{"name":"constructor(spec: URL)","description":"com.hexagontk.rest.tools.openapi.VerifySpecCallback.VerifySpecCallback","location":"http/rest_tools/com.hexagontk.rest.tools.openapi/-verify-spec-callback/-verify-spec-callback.html","searchKeys":["VerifySpecCallback","constructor(spec: URL)","com.hexagontk.rest.tools.openapi.VerifySpecCallback.VerifySpecCallback"]},{"name":"fun assertBody(body: Any)","description":"com.hexagontk.rest.tools.HttpClientTool.assertBody","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/assert-body.html","searchKeys":["assertBody","fun assertBody(body: Any)","com.hexagontk.rest.tools.HttpClientTool.assertBody"]},{"name":"fun assertBodyContains(vararg texts: String)","description":"com.hexagontk.rest.tools.HttpClientTool.assertBodyContains","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/assert-body-contains.html","searchKeys":["assertBodyContains","fun assertBodyContains(vararg texts: String)","com.hexagontk.rest.tools.HttpClientTool.assertBodyContains"]},{"name":"fun assertContentType(contentType: ContentType)","description":"com.hexagontk.rest.tools.HttpClientTool.assertContentType","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/assert-content-type.html","searchKeys":["assertContentType","fun assertContentType(contentType: ContentType)","com.hexagontk.rest.tools.HttpClientTool.assertContentType"]},{"name":"fun assertContentType(mediaType: MediaType)","description":"com.hexagontk.rest.tools.HttpClientTool.assertContentType","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/assert-content-type.html","searchKeys":["assertContentType","fun assertContentType(mediaType: MediaType)","com.hexagontk.rest.tools.HttpClientTool.assertContentType"]},{"name":"fun assertOk()","description":"com.hexagontk.rest.tools.HttpClientTool.assertOk","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/assert-ok.html","searchKeys":["assertOk","fun assertOk()","com.hexagontk.rest.tools.HttpClientTool.assertOk"]},{"name":"fun assertStatus(status: Int)","description":"com.hexagontk.rest.tools.HttpClientTool.assertStatus","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/assert-status.html","searchKeys":["assertStatus","fun assertStatus(status: Int)","com.hexagontk.rest.tools.HttpClientTool.assertStatus"]},{"name":"fun assertSuccess()","description":"com.hexagontk.rest.tools.HttpClientTool.assertSuccess","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/assert-success.html","searchKeys":["assertSuccess","fun assertSuccess()","com.hexagontk.rest.tools.HttpClientTool.assertSuccess"]},{"name":"fun delete(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.delete","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/delete.html","searchKeys":["delete","fun delete(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.delete"]},{"name":"fun delete(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.delete","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/delete.html","searchKeys":["delete","fun delete(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.delete"]},{"name":"fun get(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.get","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/get.html","searchKeys":["get","fun get(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.get"]},{"name":"fun get(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.get","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/get.html","searchKeys":["get","fun get(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.get"]},{"name":"fun options(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.options","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/options.html","searchKeys":["options","fun options(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.options"]},{"name":"fun options(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.options","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/options.html","searchKeys":["options","fun options(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.options"]},{"name":"fun patch(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.patch","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/patch.html","searchKeys":["patch","fun patch(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.patch"]},{"name":"fun patch(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.patch","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/patch.html","searchKeys":["patch","fun patch(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.patch"]},{"name":"fun path(block: HandlerBuilder.() -> Unit)","description":"com.hexagontk.rest.tools.HttpServerTool.path","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/path.html","searchKeys":["path","fun path(block: HandlerBuilder.() -> Unit)","com.hexagontk.rest.tools.HttpServerTool.path"]},{"name":"fun post(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.post","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/post.html","searchKeys":["post","fun post(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.post"]},{"name":"fun post(path: String = \"/\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.post","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/post.html","searchKeys":["post","fun post(path: String = \"/\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.post"]},{"name":"fun post(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.post","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/post.html","searchKeys":["post","fun post(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.post"]},{"name":"fun post(path: String, pathParameters: Map<String, Any>, formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.post","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/post.html","searchKeys":["post","fun post(path: String, pathParameters: Map<String, Any>, formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.post"]},{"name":"fun put(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.put","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/put.html","searchKeys":["put","fun put(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.put"]},{"name":"fun put(path: String = \"/\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.put","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/put.html","searchKeys":["put","fun put(path: String = \"/\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.put"]},{"name":"fun put(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.put","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/put.html","searchKeys":["put","fun put(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.put"]},{"name":"fun put(path: String, pathParameters: Map<String, Any>, formParameters: List<HttpField> = emptyList(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.put","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/put.html","searchKeys":["put","fun put(path: String, pathParameters: Map<String, Any>, formParameters: List<HttpField> = emptyList(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept, body: () -> Any): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.put"]},{"name":"fun request(block: HttpClientTool.() -> Unit)","description":"com.hexagontk.rest.tools.HttpClientTool.request","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/request.html","searchKeys":["request","fun request(block: HttpClientTool.() -> Unit)","com.hexagontk.rest.tools.HttpClientTool.request"]},{"name":"fun start()","description":"com.hexagontk.rest.tools.HttpClientTool.start","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/start.html","searchKeys":["start","fun start()","com.hexagontk.rest.tools.HttpClientTool.start"]},{"name":"fun start()","description":"com.hexagontk.rest.tools.HttpServerTool.start","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/start.html","searchKeys":["start","fun start()","com.hexagontk.rest.tools.HttpServerTool.start"]},{"name":"fun stop()","description":"com.hexagontk.rest.tools.HttpClientTool.stop","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/stop.html","searchKeys":["stop","fun stop()","com.hexagontk.rest.tools.HttpClientTool.stop"]},{"name":"fun stop()","description":"com.hexagontk.rest.tools.HttpServerTool.stop","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/stop.html","searchKeys":["stop","fun stop()","com.hexagontk.rest.tools.HttpServerTool.stop"]},{"name":"fun trace(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.trace","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/trace.html","searchKeys":["trace","fun trace(path: String = \"/\", body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.trace"]},{"name":"fun trace(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.trace","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/trace.html","searchKeys":["trace","fun trace(path: String, pathParameters: Map<String, Any>, body: Any = \"\", formParameters: List<HttpField> = emptyList(), headers: Map<String, *> = emptyMap<String, Any>(), parts: List<HttpPart> = emptyList(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.trace"]},{"name":"object Companion","description":"com.hexagontk.rest.tools.HttpClientTool.Companion","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/-companion/index.html","searchKeys":["Companion","object Companion","com.hexagontk.rest.tools.HttpClientTool.Companion"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.rest.tools.RecordCallback.invoke","location":"http/rest_tools/com.hexagontk.rest.tools/-record-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.rest.tools.RecordCallback.invoke"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.rest.tools.openapi.VerifySpecCallback.invoke","location":"http/rest_tools/com.hexagontk.rest.tools.openapi/-verify-spec-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.rest.tools.openapi.VerifySpecCallback.invoke"]},{"name":"val binding: URI","description":"com.hexagontk.rest.tools.HttpServerTool.binding","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/binding.html","searchKeys":["binding","val binding: URI","com.hexagontk.rest.tools.HttpServerTool.binding"]},{"name":"val body: Any","description":"com.hexagontk.rest.tools.HttpClientTool.body","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/body.html","searchKeys":["body","val body: Any","com.hexagontk.rest.tools.HttpClientTool.body"]},{"name":"val contentType: ContentType?","description":"com.hexagontk.rest.tools.HttpClientTool.contentType","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/content-type.html","searchKeys":["contentType","val contentType: ContentType?","com.hexagontk.rest.tools.HttpClientTool.contentType"]},{"name":"val cookies: Map<String, Cookie>","description":"com.hexagontk.rest.tools.HttpClientTool.cookies","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/cookies.html","searchKeys":["cookies","val cookies: Map<String, Cookie>","com.hexagontk.rest.tools.HttpClientTool.cookies"]},{"name":"val handler: HttpHandler?","description":"com.hexagontk.rest.tools.HttpClientTool.handler","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/handler.html","searchKeys":["handler","val handler: HttpHandler?","com.hexagontk.rest.tools.HttpClientTool.handler"]},{"name":"val headers: Headers","description":"com.hexagontk.rest.tools.HttpClientTool.headers","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/headers.html","searchKeys":["headers","val headers: Headers","com.hexagontk.rest.tools.HttpClientTool.headers"]},{"name":"val httpHeaders: Map<String, *>","description":"com.hexagontk.rest.tools.HttpClientTool.httpHeaders","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/http-headers.html","searchKeys":["httpHeaders","val httpHeaders: Map<String, *>","com.hexagontk.rest.tools.HttpClientTool.httpHeaders"]},{"name":"val request: HttpRequest","description":"com.hexagontk.rest.tools.HttpClientTool.request","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/request.html","searchKeys":["request","val request: HttpRequest","com.hexagontk.rest.tools.HttpClientTool.request"]},{"name":"val response: HttpResponsePort","description":"com.hexagontk.rest.tools.HttpClientTool.response","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/response.html","searchKeys":["response","val response: HttpResponsePort","com.hexagontk.rest.tools.HttpClientTool.response"]},{"name":"val runtimePort: Int","description":"com.hexagontk.rest.tools.HttpServerTool.runtimePort","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/runtime-port.html","searchKeys":["runtimePort","val runtimePort: Int","com.hexagontk.rest.tools.HttpServerTool.runtimePort"]},{"name":"val serializeHandler: HttpHandler","description":"com.hexagontk.rest.tools.HttpClientTool.Companion.serializeHandler","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/-companion/serialize-handler.html","searchKeys":["serializeHandler","val serializeHandler: HttpHandler","com.hexagontk.rest.tools.HttpClientTool.Companion.serializeHandler"]},{"name":"val status: Int","description":"com.hexagontk.rest.tools.HttpClientTool.status","location":"http/rest_tools/com.hexagontk.rest.tools/-http-client-tool/status.html","searchKeys":["status","val status: Int","com.hexagontk.rest.tools.HttpClientTool.status"]},{"name":"var calls: List<HttpContext>","description":"com.hexagontk.rest.tools.RecordCallback.calls","location":"http/rest_tools/com.hexagontk.rest.tools/-record-callback/calls.html","searchKeys":["calls","var calls: List<HttpContext>","com.hexagontk.rest.tools.RecordCallback.calls"]},{"name":"var path: PathHandler","description":"com.hexagontk.rest.tools.HttpServerTool.path","location":"http/rest_tools/com.hexagontk.rest.tools/-http-server-tool/path.html","searchKeys":["path","var path: PathHandler","com.hexagontk.rest.tools.HttpServerTool.path"]},{"name":"object Csv : SerializationFormat","description":"com.hexagontk.serialization.jackson.csv.Csv","location":"serialization/serialization_jackson_csv/com.hexagontk.serialization.jackson.csv/-csv/index.html","searchKeys":["Csv","object Csv : SerializationFormat","com.hexagontk.serialization.jackson.csv.Csv"]},{"name":"open override fun parse(input: InputStream): Any","description":"com.hexagontk.serialization.jackson.csv.Csv.parse","location":"serialization/serialization_jackson_csv/com.hexagontk.serialization.jackson.csv/-csv/parse.html","searchKeys":["parse","open override fun parse(input: InputStream): Any","com.hexagontk.serialization.jackson.csv.Csv.parse"]},{"name":"open override fun serialize(instance: Any, output: OutputStream)","description":"com.hexagontk.serialization.jackson.csv.Csv.serialize","location":"serialization/serialization_jackson_csv/com.hexagontk.serialization.jackson.csv/-csv/serialize.html","searchKeys":["serialize","open override fun serialize(instance: Any, output: OutputStream)","com.hexagontk.serialization.jackson.csv.Csv.serialize"]},{"name":"open override val mediaType: MediaType","description":"com.hexagontk.serialization.jackson.csv.Csv.mediaType","location":"serialization/serialization_jackson_csv/com.hexagontk.serialization.jackson.csv/-csv/media-type.html","searchKeys":["mediaType","open override val mediaType: MediaType","com.hexagontk.serialization.jackson.csv.Csv.mediaType"]},{"name":"open override val textFormat: Boolean = true","description":"com.hexagontk.serialization.jackson.csv.Csv.textFormat","location":"serialization/serialization_jackson_csv/com.hexagontk.serialization.jackson.csv/-csv/text-format.html","searchKeys":["textFormat","open override val textFormat: Boolean = true","com.hexagontk.serialization.jackson.csv.Csv.textFormat"]},{"name":"abstract class MapResourceBundle(val map: Map<*, *>) : ListResourceBundle","description":"com.hexagontk.helpers.MapResourceBundle","location":"helpers/com.hexagontk.helpers/-map-resource-bundle/index.html","searchKeys":["MapResourceBundle","abstract class MapResourceBundle(val map: Map<*, *>) : ListResourceBundle","com.hexagontk.helpers.MapResourceBundle"]},{"name":"constructor(map: Map<*, *>)","description":"com.hexagontk.helpers.MapResourceBundle.MapResourceBundle","location":"helpers/com.hexagontk.helpers/-map-resource-bundle/-map-resource-bundle.html","searchKeys":["MapResourceBundle","constructor(map: Map<*, *>)","com.hexagontk.helpers.MapResourceBundle.MapResourceBundle"]},{"name":"constructor(vararg pairs: Pair<*, *>)","description":"com.hexagontk.helpers.MapResourceBundle.MapResourceBundle","location":"helpers/com.hexagontk.helpers/-map-resource-bundle/-map-resource-bundle.html","searchKeys":["MapResourceBundle","constructor(vararg pairs: Pair<*, *>)","com.hexagontk.helpers.MapResourceBundle.MapResourceBundle"]},{"name":"fun <T : Any, N> T.requireGreater(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","description":"com.hexagontk.helpers.requireGreater","location":"helpers/com.hexagontk.helpers/require-greater.html","searchKeys":["requireGreater","fun <T : Any, N> T.requireGreater(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","com.hexagontk.helpers.requireGreater"]},{"name":"fun <T : Any, N> T.requireGreater(field: KProperty1<T, Comparable<N>?>, min: N)","description":"com.hexagontk.helpers.requireGreater","location":"helpers/com.hexagontk.helpers/require-greater.html","searchKeys":["requireGreater","fun <T : Any, N> T.requireGreater(field: KProperty1<T, Comparable<N>?>, min: N)","com.hexagontk.helpers.requireGreater"]},{"name":"fun <T : Any, N> T.requireGreaterOrEquals(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","description":"com.hexagontk.helpers.requireGreaterOrEquals","location":"helpers/com.hexagontk.helpers/require-greater-or-equals.html","searchKeys":["requireGreaterOrEquals","fun <T : Any, N> T.requireGreaterOrEquals(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","com.hexagontk.helpers.requireGreaterOrEquals"]},{"name":"fun <T : Any, N> T.requireGreaterOrEquals(field: KProperty1<T, Comparable<N>?>, min: N)","description":"com.hexagontk.helpers.requireGreaterOrEquals","location":"helpers/com.hexagontk.helpers/require-greater-or-equals.html","searchKeys":["requireGreaterOrEquals","fun <T : Any, N> T.requireGreaterOrEquals(field: KProperty1<T, Comparable<N>?>, min: N)","com.hexagontk.helpers.requireGreaterOrEquals"]},{"name":"fun <T : Any, N> T.requireLower(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","description":"com.hexagontk.helpers.requireLower","location":"helpers/com.hexagontk.helpers/require-lower.html","searchKeys":["requireLower","fun <T : Any, N> T.requireLower(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","com.hexagontk.helpers.requireLower"]},{"name":"fun <T : Any, N> T.requireLower(field: KProperty1<T, Comparable<N>?>, min: N)","description":"com.hexagontk.helpers.requireLower","location":"helpers/com.hexagontk.helpers/require-lower.html","searchKeys":["requireLower","fun <T : Any, N> T.requireLower(field: KProperty1<T, Comparable<N>?>, min: N)","com.hexagontk.helpers.requireLower"]},{"name":"fun <T : Any, N> T.requireLowerOrEquals(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","description":"com.hexagontk.helpers.requireLowerOrEquals","location":"helpers/com.hexagontk.helpers/require-lower-or-equals.html","searchKeys":["requireLowerOrEquals","fun <T : Any, N> T.requireLowerOrEquals(field: KProperty1<T, Comparable<N>?>, field2: KProperty1<T, N?>)","com.hexagontk.helpers.requireLowerOrEquals"]},{"name":"fun <T : Any, N> T.requireLowerOrEquals(field: KProperty1<T, Comparable<N>?>, min: N)","description":"com.hexagontk.helpers.requireLowerOrEquals","location":"helpers/com.hexagontk.helpers/require-lower-or-equals.html","searchKeys":["requireLowerOrEquals","fun <T : Any, N> T.requireLowerOrEquals(field: KProperty1<T, Comparable<N>?>, min: N)","com.hexagontk.helpers.requireLowerOrEquals"]},{"name":"fun <T : Any> T.requireNotBlank(field: KProperty1<T, CharSequence?>)","description":"com.hexagontk.helpers.requireNotBlank","location":"helpers/com.hexagontk.helpers/require-not-blank.html","searchKeys":["requireNotBlank","fun <T : Any> T.requireNotBlank(field: KProperty1<T, CharSequence?>)","com.hexagontk.helpers.requireNotBlank"]},{"name":"fun <T : Any> T.requireNotBlanks(field: KProperty1<T, Collection<CharSequence>?>)","description":"com.hexagontk.helpers.requireNotBlanks","location":"helpers/com.hexagontk.helpers/require-not-blanks.html","searchKeys":["requireNotBlanks","fun <T : Any> T.requireNotBlanks(field: KProperty1<T, Collection<CharSequence>?>)","com.hexagontk.helpers.requireNotBlanks"]},{"name":"fun <T : ResourceBundle> resourceBundle(type: KClass<T>, locale: Locale = Locale.getDefault()): ResourceBundle","description":"com.hexagontk.helpers.resourceBundle","location":"helpers/com.hexagontk.helpers/resource-bundle.html","searchKeys":["resourceBundle","fun <T : ResourceBundle> resourceBundle(type: KClass<T>, locale: Locale = Locale.getDefault()): ResourceBundle","com.hexagontk.helpers.resourceBundle"]},{"name":"fun <T> retry(times: Int, delay: Long, block: () -> T): T","description":"com.hexagontk.helpers.retry","location":"helpers/com.hexagontk.helpers/retry.html","searchKeys":["retry","fun <T> retry(times: Int, delay: Long, block: () -> T): T","com.hexagontk.helpers.retry"]},{"name":"fun <Z> Collection<Z>.checkSize(count: IntRange): Collection<Z>","description":"com.hexagontk.helpers.checkSize","location":"helpers/com.hexagontk.helpers/check-size.html","searchKeys":["checkSize","fun <Z> Collection<Z>.checkSize(count: IntRange): Collection<Z>","com.hexagontk.helpers.checkSize"]},{"name":"fun Enum<*>.toWords(): String","description":"com.hexagontk.helpers.text.toWords","location":"helpers/com.hexagontk.helpers.text/to-words.html","searchKeys":["toWords","fun Enum<*>.toWords(): String","com.hexagontk.helpers.text.toWords"]},{"name":"fun List<String>.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = true): String","description":"com.hexagontk.helpers.exec","location":"helpers/com.hexagontk.helpers/exec.html","searchKeys":["exec","fun List<String>.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = true): String","com.hexagontk.helpers.exec"]},{"name":"fun List<String>.toWords(): List<String>","description":"com.hexagontk.helpers.text.toWords","location":"helpers/com.hexagontk.helpers.text/to-words.html","searchKeys":["toWords","fun List<String>.toWords(): List<String>","com.hexagontk.helpers.text.toWords"]},{"name":"fun List<String>.wordsToCamel(): String","description":"com.hexagontk.helpers.text.wordsToCamel","location":"helpers/com.hexagontk.helpers.text/words-to-camel.html","searchKeys":["wordsToCamel","fun List<String>.wordsToCamel(): String","com.hexagontk.helpers.text.wordsToCamel"]},{"name":"fun List<String>.wordsToKebab(): String","description":"com.hexagontk.helpers.text.wordsToKebab","location":"helpers/com.hexagontk.helpers.text/words-to-kebab.html","searchKeys":["wordsToKebab","fun List<String>.wordsToKebab(): String","com.hexagontk.helpers.text.wordsToKebab"]},{"name":"fun List<String>.wordsToPascal(): String","description":"com.hexagontk.helpers.text.wordsToPascal","location":"helpers/com.hexagontk.helpers.text/words-to-pascal.html","searchKeys":["wordsToPascal","fun List<String>.wordsToPascal(): String","com.hexagontk.helpers.text.wordsToPascal"]},{"name":"fun List<String>.wordsToSentence(): String","description":"com.hexagontk.helpers.text.wordsToSentence","location":"helpers/com.hexagontk.helpers.text/words-to-sentence.html","searchKeys":["wordsToSentence","fun List<String>.wordsToSentence(): String","com.hexagontk.helpers.text.wordsToSentence"]},{"name":"fun List<String>.wordsToSnake(): String","description":"com.hexagontk.helpers.text.wordsToSnake","location":"helpers/com.hexagontk.helpers.text/words-to-snake.html","searchKeys":["wordsToSnake","fun List<String>.wordsToSnake(): String","com.hexagontk.helpers.text.wordsToSnake"]},{"name":"fun List<String>.wordsToTitle(): String","description":"com.hexagontk.helpers.text.wordsToTitle","location":"helpers/com.hexagontk.helpers.text/words-to-title.html","searchKeys":["wordsToTitle","fun List<String>.wordsToTitle(): String","com.hexagontk.helpers.text.wordsToTitle"]},{"name":"fun String.camelToSnake(): String","description":"com.hexagontk.helpers.text.camelToSnake","location":"helpers/com.hexagontk.helpers.text/camel-to-snake.html","searchKeys":["camelToSnake","fun String.camelToSnake(): String","com.hexagontk.helpers.text.camelToSnake"]},{"name":"fun String.camelToWords(): List<String>","description":"com.hexagontk.helpers.text.camelToWords","location":"helpers/com.hexagontk.helpers.text/camel-to-words.html","searchKeys":["camelToWords","fun String.camelToWords(): List<String>","com.hexagontk.helpers.text.camelToWords"]},{"name":"fun String.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","description":"com.hexagontk.helpers.exec","location":"helpers/com.hexagontk.helpers/exec.html","searchKeys":["exec","fun String.exec(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","com.hexagontk.helpers.exec"]},{"name":"fun String.kebabToWords(): List<String>","description":"com.hexagontk.helpers.text.kebabToWords","location":"helpers/com.hexagontk.helpers.text/kebab-to-words.html","searchKeys":["kebabToWords","fun String.kebabToWords(): List<String>","com.hexagontk.helpers.text.kebabToWords"]},{"name":"fun String.shell(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","description":"com.hexagontk.helpers.shell","location":"helpers/com.hexagontk.helpers/shell.html","searchKeys":["shell","fun String.shell(workingDirectory: File = File(System.getProperty(\"user.dir\")), timeout: Long = Long.MAX_VALUE, fail: Boolean = false): String","com.hexagontk.helpers.shell"]},{"name":"fun String.snakeToCamel(): String","description":"com.hexagontk.helpers.text.snakeToCamel","location":"helpers/com.hexagontk.helpers.text/snake-to-camel.html","searchKeys":["snakeToCamel","fun String.snakeToCamel(): String","com.hexagontk.helpers.text.snakeToCamel"]},{"name":"fun String.snakeToWords(): List<String>","description":"com.hexagontk.helpers.text.snakeToWords","location":"helpers/com.hexagontk.helpers.text/snake-to-words.html","searchKeys":["snakeToWords","fun String.snakeToWords(): List<String>","com.hexagontk.helpers.text.snakeToWords"]},{"name":"fun UUID.bytes(): ByteArray","description":"com.hexagontk.helpers.bytes","location":"helpers/com.hexagontk.helpers/bytes.html","searchKeys":["bytes","fun UUID.bytes(): ByteArray","com.hexagontk.helpers.bytes"]},{"name":"fun UUID.toBase64(): String","description":"com.hexagontk.helpers.toBase64","location":"helpers/com.hexagontk.helpers/to-base64.html","searchKeys":["toBase64","fun UUID.toBase64(): String","com.hexagontk.helpers.toBase64"]},{"name":"fun check(message: String, vararg blocks: () -> Unit)","description":"com.hexagontk.helpers.check","location":"helpers/com.hexagontk.helpers/check.html","searchKeys":["check","fun check(message: String, vararg blocks: () -> Unit)","com.hexagontk.helpers.check"]},{"name":"fun countryOf(country: String): Locale","description":"com.hexagontk.helpers.countryOf","location":"helpers/com.hexagontk.helpers/country-of.html","searchKeys":["countryOf","fun countryOf(country: String): Locale","com.hexagontk.helpers.countryOf"]},{"name":"fun countryOfOrNull(country: String): Locale?","description":"com.hexagontk.helpers.countryOfOrNull","location":"helpers/com.hexagontk.helpers/country-of-or-null.html","searchKeys":["countryOfOrNull","fun countryOfOrNull(country: String): Locale?","com.hexagontk.helpers.countryOfOrNull"]},{"name":"fun languageOf(language: String): Locale","description":"com.hexagontk.helpers.languageOf","location":"helpers/com.hexagontk.helpers/language-of.html","searchKeys":["languageOf","fun languageOf(language: String): Locale","com.hexagontk.helpers.languageOf"]},{"name":"fun languageOfOrNull(language: String): Locale?","description":"com.hexagontk.helpers.languageOfOrNull","location":"helpers/com.hexagontk.helpers/language-of-or-null.html","searchKeys":["languageOfOrNull","fun languageOfOrNull(language: String): Locale?","com.hexagontk.helpers.languageOfOrNull"]},{"name":"fun localeOf(language: String = \"\", country: String = \"\"): Locale","description":"com.hexagontk.helpers.localeOf","location":"helpers/com.hexagontk.helpers/locale-of.html","searchKeys":["localeOf","fun localeOf(language: String = \"\", country: String = \"\"): Locale","com.hexagontk.helpers.localeOf"]},{"name":"fun localeOfOrNull(language: String = \"\", country: String = \"\"): Locale?","description":"com.hexagontk.helpers.localeOfOrNull","location":"helpers/com.hexagontk.helpers/locale-of-or-null.html","searchKeys":["localeOfOrNull","fun localeOfOrNull(language: String = \"\", country: String = \"\"): Locale?","com.hexagontk.helpers.localeOfOrNull"]},{"name":"fun parseLocale(languageCountry: String): Locale","description":"com.hexagontk.helpers.parseLocale","location":"helpers/com.hexagontk.helpers/parse-locale.html","searchKeys":["parseLocale","fun parseLocale(languageCountry: String): Locale","com.hexagontk.helpers.parseLocale"]},{"name":"fun parseLocaleOrNull(languageCountry: String): Locale?","description":"com.hexagontk.helpers.parseLocaleOrNull","location":"helpers/com.hexagontk.helpers/parse-locale-or-null.html","searchKeys":["parseLocaleOrNull","fun parseLocaleOrNull(languageCountry: String): Locale?","com.hexagontk.helpers.parseLocaleOrNull"]},{"name":"fun properties(url: URL): Map<String, String>","description":"com.hexagontk.helpers.properties","location":"helpers/com.hexagontk.helpers/properties.html","searchKeys":["properties","fun properties(url: URL): Map<String, String>","com.hexagontk.helpers.properties"]},{"name":"fun uuid(bytes: ByteArray): UUID","description":"com.hexagontk.helpers.uuid","location":"helpers/com.hexagontk.helpers/uuid.html","searchKeys":["uuid","fun uuid(bytes: ByteArray): UUID","com.hexagontk.helpers.uuid"]},{"name":"fun uuid(text: String): UUID","description":"com.hexagontk.helpers.uuid","location":"helpers/com.hexagontk.helpers/uuid.html","searchKeys":["uuid","fun uuid(text: String): UUID","com.hexagontk.helpers.uuid"]},{"name":"inline fun <T : ResourceBundle> resourceBundle(locale: Locale = Locale.getDefault()): ResourceBundle","description":"com.hexagontk.helpers.resourceBundle","location":"helpers/com.hexagontk.helpers/resource-bundle.html","searchKeys":["resourceBundle","inline fun <T : ResourceBundle> resourceBundle(locale: Locale = Locale.getDefault()): ResourceBundle","com.hexagontk.helpers.resourceBundle"]},{"name":"val CAMEL_CASE: Regex","description":"com.hexagontk.helpers.text.CAMEL_CASE","location":"helpers/com.hexagontk.helpers.text/-c-a-m-e-l_-c-a-s-e.html","searchKeys":["CAMEL_CASE","val CAMEL_CASE: Regex","com.hexagontk.helpers.text.CAMEL_CASE"]},{"name":"val KEBAB_CASE: Regex","description":"com.hexagontk.helpers.text.KEBAB_CASE","location":"helpers/com.hexagontk.helpers.text/-k-e-b-a-b_-c-a-s-e.html","searchKeys":["KEBAB_CASE","val KEBAB_CASE: Regex","com.hexagontk.helpers.text.KEBAB_CASE"]},{"name":"val PASCAL_CASE: Regex","description":"com.hexagontk.helpers.text.PASCAL_CASE","location":"helpers/com.hexagontk.helpers.text/-p-a-s-c-a-l_-c-a-s-e.html","searchKeys":["PASCAL_CASE","val PASCAL_CASE: Regex","com.hexagontk.helpers.text.PASCAL_CASE"]},{"name":"val SNAKE_CASE: Regex","description":"com.hexagontk.helpers.text.SNAKE_CASE","location":"helpers/com.hexagontk.helpers.text/-s-n-a-k-e_-c-a-s-e.html","searchKeys":["SNAKE_CASE","val SNAKE_CASE: Regex","com.hexagontk.helpers.text.SNAKE_CASE"]},{"name":"val countryCodes: Set<String>","description":"com.hexagontk.helpers.countryCodes","location":"helpers/com.hexagontk.helpers/country-codes.html","searchKeys":["countryCodes","val countryCodes: Set<String>","com.hexagontk.helpers.countryCodes"]},{"name":"val currencyCodes: Set<String>","description":"com.hexagontk.helpers.currencyCodes","location":"helpers/com.hexagontk.helpers/currency-codes.html","searchKeys":["currencyCodes","val currencyCodes: Set<String>","com.hexagontk.helpers.currencyCodes"]},{"name":"val data: Array<Array<Any?>>","description":"com.hexagontk.helpers.MapResourceBundle.data","location":"helpers/com.hexagontk.helpers/-map-resource-bundle/data.html","searchKeys":["data","val data: Array<Array<Any?>>","com.hexagontk.helpers.MapResourceBundle.data"]},{"name":"val languageCodes: Set<String>","description":"com.hexagontk.helpers.languageCodes","location":"helpers/com.hexagontk.helpers/language-codes.html","searchKeys":["languageCodes","val languageCodes: Set<String>","com.hexagontk.helpers.languageCodes"]},{"name":"val map: Map<*, *>","description":"com.hexagontk.helpers.MapResourceBundle.map","location":"helpers/com.hexagontk.helpers/-map-resource-bundle/map.html","searchKeys":["map","val map: Map<*, *>","com.hexagontk.helpers.MapResourceBundle.map"]},{"name":"class Pebble(cache: Boolean = true, maxRenderedSize: Int = -1) : TemplatePort","description":"com.hexagontk.templates.pebble.Pebble","location":"templates/templates_pebble/com.hexagontk.templates.pebble/-pebble/index.html","searchKeys":["Pebble","class Pebble(cache: Boolean = true, maxRenderedSize: Int = -1) : TemplatePort","com.hexagontk.templates.pebble.Pebble"]},{"name":"constructor(cache: Boolean = true, maxRenderedSize: Int = -1)","description":"com.hexagontk.templates.pebble.Pebble.Pebble","location":"templates/templates_pebble/com.hexagontk.templates.pebble/-pebble/-pebble.html","searchKeys":["Pebble","constructor(cache: Boolean = true, maxRenderedSize: Int = -1)","com.hexagontk.templates.pebble.Pebble.Pebble"]},{"name":"open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.pebble.Pebble.render","location":"templates/templates_pebble/com.hexagontk.templates.pebble/-pebble/render.html","searchKeys":["render","open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.pebble.Pebble.render"]},{"name":"open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.pebble.Pebble.render","location":"templates/templates_pebble/com.hexagontk.templates.pebble/-pebble/render.html","searchKeys":["render","open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.pebble.Pebble.render"]},{"name":"constructor()","description":"com.hexagontk.http.client.jetty.JettyHttpClient.JettyHttpClient","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/-jetty-http-client.html","searchKeys":["JettyHttpClient","constructor()","com.hexagontk.http.client.jetty.JettyHttpClient.JettyHttpClient"]},{"name":"open class JettyHttpClient : HttpClientPort","description":"com.hexagontk.http.client.jetty.JettyHttpClient","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/index.html","searchKeys":["JettyHttpClient","open class JettyHttpClient : HttpClientPort","com.hexagontk.http.client.jetty.JettyHttpClient"]},{"name":"open override fun send(request: HttpRequestPort): HttpResponsePort","description":"com.hexagontk.http.client.jetty.JettyHttpClient.send","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/send.html","searchKeys":["send","open override fun send(request: HttpRequestPort): HttpResponsePort","com.hexagontk.http.client.jetty.JettyHttpClient.send"]},{"name":"open override fun shutDown()","description":"com.hexagontk.http.client.jetty.JettyHttpClient.shutDown","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/shut-down.html","searchKeys":["shutDown","open override fun shutDown()","com.hexagontk.http.client.jetty.JettyHttpClient.shutDown"]},{"name":"open override fun sse(request: HttpRequestPort): Flow.Publisher<ServerEvent>","description":"com.hexagontk.http.client.jetty.JettyHttpClient.sse","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/sse.html","searchKeys":["sse","open override fun sse(request: HttpRequestPort): Flow.Publisher<ServerEvent>","com.hexagontk.http.client.jetty.JettyHttpClient.sse"]},{"name":"open override fun startUp(client: HttpClient)","description":"com.hexagontk.http.client.jetty.JettyHttpClient.startUp","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/start-up.html","searchKeys":["startUp","open override fun startUp(client: HttpClient)","com.hexagontk.http.client.jetty.JettyHttpClient.startUp"]},{"name":"open override fun started(): Boolean","description":"com.hexagontk.http.client.jetty.JettyHttpClient.started","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/started.html","searchKeys":["started","open override fun started(): Boolean","com.hexagontk.http.client.jetty.JettyHttpClient.started"]},{"name":"open override fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.client.jetty.JettyHttpClient.supportedFeatures","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.client.jetty.JettyHttpClient.supportedFeatures"]},{"name":"open override fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.client.jetty.JettyHttpClient.supportedProtocols","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/supported-protocols.html","searchKeys":["supportedProtocols","open override fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.client.jetty.JettyHttpClient.supportedProtocols"]},{"name":"open override fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","description":"com.hexagontk.http.client.jetty.JettyHttpClient.ws","location":"http/http_client_jetty/com.hexagontk.http.client.jetty/-jetty-http-client/ws.html","searchKeys":["ws","open override fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","com.hexagontk.http.client.jetty.JettyHttpClient.ws"]},{"name":"class Jte(mediaType: MediaType, resolverBase: URL? = null, precompiled: Boolean = false) : TemplatePort","description":"com.hexagontk.templates.jte.Jte","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte/index.html","searchKeys":["Jte","class Jte(mediaType: MediaType, resolverBase: URL? = null, precompiled: Boolean = false) : TemplatePort","com.hexagontk.templates.jte.Jte"]},{"name":"class JteTemplateAdapterPrecompiledBaseTest","description":"com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledBaseTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-template-adapter-precompiled-base-test/index.html","searchKeys":["JteTemplateAdapterPrecompiledBaseTest","class JteTemplateAdapterPrecompiledBaseTest","com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledBaseTest"]},{"name":"class JteTemplateAdapterPrecompiledTest","description":"com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-template-adapter-precompiled-test/index.html","searchKeys":["JteTemplateAdapterPrecompiledTest","class JteTemplateAdapterPrecompiledTest","com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledTest"]},{"name":"class JteTemplateAdapterTest","description":"com.hexagontk.templates.jte.JteTemplateAdapterTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-template-adapter-test/index.html","searchKeys":["JteTemplateAdapterTest","class JteTemplateAdapterTest","com.hexagontk.templates.jte.JteTemplateAdapterTest"]},{"name":"class JteTest","description":"com.hexagontk.templates.jte.JteTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-test/index.html","searchKeys":["JteTest","class JteTest","com.hexagontk.templates.jte.JteTest"]},{"name":"class JtetestGenerated","description":"gg.jte.generated.precompiled.JtetestGenerated","location":"templates/templates_jte/gg.jte.generated.precompiled/-jtetest-generated/index.html","searchKeys":["JtetestGenerated","class JtetestGenerated","gg.jte.generated.precompiled.JtetestGenerated"]},{"name":"constructor()","description":"com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledBaseTest.JteTemplateAdapterPrecompiledBaseTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-template-adapter-precompiled-base-test/-jte-template-adapter-precompiled-base-test.html","searchKeys":["JteTemplateAdapterPrecompiledBaseTest","constructor()","com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledBaseTest.JteTemplateAdapterPrecompiledBaseTest"]},{"name":"constructor()","description":"com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledTest.JteTemplateAdapterPrecompiledTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-template-adapter-precompiled-test/-jte-template-adapter-precompiled-test.html","searchKeys":["JteTemplateAdapterPrecompiledTest","constructor()","com.hexagontk.templates.jte.JteTemplateAdapterPrecompiledTest.JteTemplateAdapterPrecompiledTest"]},{"name":"constructor()","description":"com.hexagontk.templates.jte.JteTemplateAdapterTest.JteTemplateAdapterTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-template-adapter-test/-jte-template-adapter-test.html","searchKeys":["JteTemplateAdapterTest","constructor()","com.hexagontk.templates.jte.JteTemplateAdapterTest.JteTemplateAdapterTest"]},{"name":"constructor()","description":"com.hexagontk.templates.jte.JteTest.JteTest","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-test/-jte-test.html","searchKeys":["JteTest","constructor()","com.hexagontk.templates.jte.JteTest.JteTest"]},{"name":"constructor()","description":"gg.jte.generated.precompiled.JtetestGenerated.JtetestGenerated","location":"templates/templates_jte/gg.jte.generated.precompiled/-jtetest-generated/-jtetest-generated.html","searchKeys":["JtetestGenerated","constructor()","gg.jte.generated.precompiled.JtetestGenerated.JtetestGenerated"]},{"name":"constructor(mediaType: MediaType, resolverBase: URL? = null, precompiled: Boolean = false)","description":"com.hexagontk.templates.jte.Jte.Jte","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte/-jte.html","searchKeys":["Jte","constructor(mediaType: MediaType, resolverBase: URL? = null, precompiled: Boolean = false)","com.hexagontk.templates.jte.Jte.Jte"]},{"name":"fun Dates are converted properly with precompiled templates()","description":"com.hexagontk.templates.jte.JteTest.Dates are converted properly with precompiled templates","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-test/-dates are converted properly with precompiled templates.html","searchKeys":["Dates are converted properly with precompiled templates","fun Dates are converted properly with precompiled templates()","com.hexagontk.templates.jte.JteTest.Dates are converted properly with precompiled templates"]},{"name":"fun Dates are converted properly()","description":"com.hexagontk.templates.jte.JteTest.Dates are converted properly","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-test/-dates are converted properly.html","searchKeys":["Dates are converted properly","fun Dates are converted properly()","com.hexagontk.templates.jte.JteTest.Dates are converted properly"]},{"name":"fun Invalid jte adapters throw exceptions on creation()","description":"com.hexagontk.templates.jte.JteTest.Invalid jte adapters throw exceptions on creation","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-test/-invalid jte adapters throw exceptions on creation.html","searchKeys":["Invalid jte adapters throw exceptions on creation","fun Invalid jte adapters throw exceptions on creation()","com.hexagontk.templates.jte.JteTest.Invalid jte adapters throw exceptions on creation"]},{"name":"fun Literal templates are not supported()","description":"com.hexagontk.templates.jte.JteTest.Literal templates are not supported","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte-test/-literal templates are not supported.html","searchKeys":["Literal templates are not supported","fun Literal templates are not supported()","com.hexagontk.templates.jte.JteTest.Literal templates are not supported"]},{"name":"open fun render(jteOutput: HtmlTemplateOutput, jteHtmlInterceptor: HtmlInterceptor, key1: String, key2: String, a: String, localDate: LocalDateTime, _template_: URL, _now_: LocalDateTime)","description":"gg.jte.generated.precompiled.JtetestGenerated.render","location":"templates/templates_jte/gg.jte.generated.precompiled/-jtetest-generated/render.html","searchKeys":["render","open fun render(jteOutput: HtmlTemplateOutput, jteHtmlInterceptor: HtmlInterceptor, key1: String, key2: String, a: String, localDate: LocalDateTime, _template_: URL, _now_: LocalDateTime)","gg.jte.generated.precompiled.JtetestGenerated.render"]},{"name":"open fun renderMap(jteOutput: HtmlTemplateOutput, jteHtmlInterceptor: HtmlInterceptor, params: Map<String, Any>)","description":"gg.jte.generated.precompiled.JtetestGenerated.renderMap","location":"templates/templates_jte/gg.jte.generated.precompiled/-jtetest-generated/render-map.html","searchKeys":["renderMap","open fun renderMap(jteOutput: HtmlTemplateOutput, jteHtmlInterceptor: HtmlInterceptor, params: Map<String, Any>)","gg.jte.generated.precompiled.JtetestGenerated.renderMap"]},{"name":"open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.jte.Jte.render","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte/render.html","searchKeys":["render","open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.jte.Jte.render"]},{"name":"open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.jte.Jte.render","location":"templates/templates_jte/com.hexagontk.templates.jte/-jte/render.html","searchKeys":["render","open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.jte.Jte.render"]},{"name":"val JTE_LINE_INFO: Array<Int>","description":"gg.jte.generated.precompiled.JtetestGenerated.JTE_LINE_INFO","location":"templates/templates_jte/gg.jte.generated.precompiled/-jtetest-generated/-j-t-e_-l-i-n-e_-i-n-f-o.html","searchKeys":["JTE_LINE_INFO","val JTE_LINE_INFO: Array<Int>","gg.jte.generated.precompiled.JtetestGenerated.JTE_LINE_INFO"]},{"name":"val JTE_NAME: String = \"test.jte\"","description":"gg.jte.generated.precompiled.JtetestGenerated.JTE_NAME","location":"templates/templates_jte/gg.jte.generated.precompiled/-jtetest-generated/-j-t-e_-n-a-m-e.html","searchKeys":["JTE_NAME","val JTE_NAME: String = \"test.jte\"","gg.jte.generated.precompiled.JtetestGenerated.JTE_NAME"]},{"name":"abstract fun send(request: HttpRequestPort): HttpResponsePort","description":"com.hexagontk.http.client.HttpClientPort.send","location":"http/http_client/com.hexagontk.http.client/-http-client-port/send.html","searchKeys":["send","abstract fun send(request: HttpRequestPort): HttpResponsePort","com.hexagontk.http.client.HttpClientPort.send"]},{"name":"abstract fun shutDown()","description":"com.hexagontk.http.client.HttpClientPort.shutDown","location":"http/http_client/com.hexagontk.http.client/-http-client-port/shut-down.html","searchKeys":["shutDown","abstract fun shutDown()","com.hexagontk.http.client.HttpClientPort.shutDown"]},{"name":"abstract fun sse(request: HttpRequestPort): Flow.Publisher<ServerEvent>","description":"com.hexagontk.http.client.HttpClientPort.sse","location":"http/http_client/com.hexagontk.http.client/-http-client-port/sse.html","searchKeys":["sse","abstract fun sse(request: HttpRequestPort): Flow.Publisher<ServerEvent>","com.hexagontk.http.client.HttpClientPort.sse"]},{"name":"abstract fun startUp(client: HttpClient)","description":"com.hexagontk.http.client.HttpClientPort.startUp","location":"http/http_client/com.hexagontk.http.client/-http-client-port/start-up.html","searchKeys":["startUp","abstract fun startUp(client: HttpClient)","com.hexagontk.http.client.HttpClientPort.startUp"]},{"name":"abstract fun started(): Boolean","description":"com.hexagontk.http.client.HttpClientPort.started","location":"http/http_client/com.hexagontk.http.client/-http-client-port/started.html","searchKeys":["started","abstract fun started(): Boolean","com.hexagontk.http.client.HttpClientPort.started"]},{"name":"abstract fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.client.HttpClientPort.supportedFeatures","location":"http/http_client/com.hexagontk.http.client/-http-client-port/supported-features.html","searchKeys":["supportedFeatures","abstract fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.client.HttpClientPort.supportedFeatures"]},{"name":"abstract fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.client.HttpClientPort.supportedProtocols","location":"http/http_client/com.hexagontk.http.client/-http-client-port/supported-protocols.html","searchKeys":["supportedProtocols","abstract fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.client.HttpClientPort.supportedProtocols"]},{"name":"abstract fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","description":"com.hexagontk.http.client.HttpClientPort.ws","location":"http/http_client/com.hexagontk.http.client/-http-client-port/ws.html","searchKeys":["ws","abstract fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","com.hexagontk.http.client.HttpClientPort.ws"]},{"name":"class HttpClient(adapter: HttpClientPort, val settings: HttpClientSettings = HttpClientSettings(), val handler: HttpHandler? = null) : Closeable","description":"com.hexagontk.http.client.HttpClient","location":"http/http_client/com.hexagontk.http.client/-http-client/index.html","searchKeys":["HttpClient","class HttpClient(adapter: HttpClientPort, val settings: HttpClientSettings = HttpClientSettings(), val handler: HttpHandler? = null) : Closeable","com.hexagontk.http.client.HttpClient"]},{"name":"class HttpClientSettings(val baseUri: URI? = null, val contentType: ContentType? = null, val accept: List<ContentType> = emptyList(), val useCookies: Boolean = true, val headers: Headers = Headers(), val insecure: Boolean = false, val sslSettings: SslSettings? = null, val authorization: Authorization? = null, val followRedirects: Boolean = false)","description":"com.hexagontk.http.client.HttpClientSettings","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/index.html","searchKeys":["HttpClientSettings","class HttpClientSettings(val baseUri: URI? = null, val contentType: ContentType? = null, val accept: List<ContentType> = emptyList(), val useCookies: Boolean = true, val headers: Headers = Headers(), val insecure: Boolean = false, val sslSettings: SslSettings? = null, val authorization: Authorization? = null, val followRedirects: Boolean = false)","com.hexagontk.http.client.HttpClientSettings"]},{"name":"constructor(adapter: HttpClientPort, settings: HttpClientSettings = HttpClientSettings(), handler: HttpHandler? = null)","description":"com.hexagontk.http.client.HttpClient.HttpClient","location":"http/http_client/com.hexagontk.http.client/-http-client/-http-client.html","searchKeys":["HttpClient","constructor(adapter: HttpClientPort, settings: HttpClientSettings = HttpClientSettings(), handler: HttpHandler? = null)","com.hexagontk.http.client.HttpClient.HttpClient"]},{"name":"constructor(baseUri: URI? = null, contentType: ContentType? = null, accept: List<ContentType> = emptyList(), useCookies: Boolean = true, headers: Headers = Headers(), insecure: Boolean = false, sslSettings: SslSettings? = null, authorization: Authorization? = null, followRedirects: Boolean = false)","description":"com.hexagontk.http.client.HttpClientSettings.HttpClientSettings","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/-http-client-settings.html","searchKeys":["HttpClientSettings","constructor(baseUri: URI? = null, contentType: ContentType? = null, accept: List<ContentType> = emptyList(), useCookies: Boolean = true, headers: Headers = Headers(), insecure: Boolean = false, sslSettings: SslSettings? = null, authorization: Authorization? = null, followRedirects: Boolean = false)","com.hexagontk.http.client.HttpClientSettings.HttpClientSettings"]},{"name":"fun cookiesMap(): Map<String, Cookie>","description":"com.hexagontk.http.client.HttpClient.cookiesMap","location":"http/http_client/com.hexagontk.http.client/-http-client/cookies-map.html","searchKeys":["cookiesMap","fun cookiesMap(): Map<String, Cookie>","com.hexagontk.http.client.HttpClient.cookiesMap"]},{"name":"fun delete(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.delete","location":"http/http_client/com.hexagontk.http.client/-http-client/delete.html","searchKeys":["delete","fun delete(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.http.client.HttpClient.delete"]},{"name":"fun get(path: String = \"\", headers: Headers = Headers(), body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.get","location":"http/http_client/com.hexagontk.http.client/-http-client/get.html","searchKeys":["get","fun get(path: String = \"\", headers: Headers = Headers(), body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.http.client.HttpClient.get"]},{"name":"fun head(path: String = \"\", headers: Headers = Headers()): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.head","location":"http/http_client/com.hexagontk.http.client/-http-client/head.html","searchKeys":["head","fun head(path: String = \"\", headers: Headers = Headers()): HttpResponsePort","com.hexagontk.http.client.HttpClient.head"]},{"name":"fun options(path: String = \"\", body: Any? = null, headers: Headers = Headers(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.options","location":"http/http_client/com.hexagontk.http.client/-http-client/options.html","searchKeys":["options","fun options(path: String = \"\", body: Any? = null, headers: Headers = Headers(), contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.http.client.HttpClient.options"]},{"name":"fun patch(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.patch","location":"http/http_client/com.hexagontk.http.client/-http-client/patch.html","searchKeys":["patch","fun patch(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.http.client.HttpClient.patch"]},{"name":"fun post(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.post","location":"http/http_client/com.hexagontk.http.client/-http-client/post.html","searchKeys":["post","fun post(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.http.client.HttpClient.post"]},{"name":"fun put(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.put","location":"http/http_client/com.hexagontk.http.client/-http-client/put.html","searchKeys":["put","fun put(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.http.client.HttpClient.put"]},{"name":"fun request(block: HttpClient.() -> Unit)","description":"com.hexagontk.http.client.HttpClient.request","location":"http/http_client/com.hexagontk.http.client/-http-client/request.html","searchKeys":["request","fun request(block: HttpClient.() -> Unit)","com.hexagontk.http.client.HttpClient.request"]},{"name":"fun send(request: HttpRequest): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.send","location":"http/http_client/com.hexagontk.http.client/-http-client/send.html","searchKeys":["send","fun send(request: HttpRequest): HttpResponsePort","com.hexagontk.http.client.HttpClient.send"]},{"name":"fun sse(path: String): Flow.Publisher<ServerEvent>","description":"com.hexagontk.http.client.HttpClient.sse","location":"http/http_client/com.hexagontk.http.client/-http-client/sse.html","searchKeys":["sse","fun sse(path: String): Flow.Publisher<ServerEvent>","com.hexagontk.http.client.HttpClient.sse"]},{"name":"fun sse(request: HttpRequest): Flow.Publisher<ServerEvent>","description":"com.hexagontk.http.client.HttpClient.sse","location":"http/http_client/com.hexagontk.http.client/-http-client/sse.html","searchKeys":["sse","fun sse(request: HttpRequest): Flow.Publisher<ServerEvent>","com.hexagontk.http.client.HttpClient.sse"]},{"name":"fun start()","description":"com.hexagontk.http.client.HttpClient.start","location":"http/http_client/com.hexagontk.http.client/-http-client/start.html","searchKeys":["start","fun start()","com.hexagontk.http.client.HttpClient.start"]},{"name":"fun started(): Boolean","description":"com.hexagontk.http.client.HttpClient.started","location":"http/http_client/com.hexagontk.http.client/-http-client/started.html","searchKeys":["started","fun started(): Boolean","com.hexagontk.http.client.HttpClient.started"]},{"name":"fun stop()","description":"com.hexagontk.http.client.HttpClient.stop","location":"http/http_client/com.hexagontk.http.client/-http-client/stop.html","searchKeys":["stop","fun stop()","com.hexagontk.http.client.HttpClient.stop"]},{"name":"fun trace(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","description":"com.hexagontk.http.client.HttpClient.trace","location":"http/http_client/com.hexagontk.http.client/-http-client/trace.html","searchKeys":["trace","fun trace(path: String = \"\", body: Any? = null, contentType: ContentType? = settings.contentType, accept: List<ContentType> = settings.accept): HttpResponsePort","com.hexagontk.http.client.HttpClient.trace"]},{"name":"fun with(baseUri: URI? = this.baseUri, contentType: ContentType? = this.contentType, accept: List<ContentType> = this.accept, useCookies: Boolean = this.useCookies, headers: Headers = this.headers, insecure: Boolean = this.insecure, sslSettings: SslSettings? = this.sslSettings, authorization: Authorization? = this.authorization, followRedirects: Boolean = this.followRedirects): HttpClientSettings","description":"com.hexagontk.http.client.HttpClientSettings.with","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/with.html","searchKeys":["with","fun with(baseUri: URI? = this.baseUri, contentType: ContentType? = this.contentType, accept: List<ContentType> = this.accept, useCookies: Boolean = this.useCookies, headers: Headers = this.headers, insecure: Boolean = this.insecure, sslSettings: SslSettings? = this.sslSettings, authorization: Authorization? = this.authorization, followRedirects: Boolean = this.followRedirects): HttpClientSettings","com.hexagontk.http.client.HttpClientSettings.with"]},{"name":"fun ws(path: String, onConnect: WsSession.() -> Unit = {}, onBinary: WsSession.(data: ByteArray) -> Unit = {}, onText: WsSession.(text: String) -> Unit = {}, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> }): WsSession","description":"com.hexagontk.http.client.HttpClient.ws","location":"http/http_client/com.hexagontk.http.client/-http-client/ws.html","searchKeys":["ws","fun ws(path: String, onConnect: WsSession.() -> Unit = {}, onBinary: WsSession.(data: ByteArray) -> Unit = {}, onText: WsSession.(text: String) -> Unit = {}, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> }): WsSession","com.hexagontk.http.client.HttpClient.ws"]},{"name":"interface HttpClientPort","description":"com.hexagontk.http.client.HttpClientPort","location":"http/http_client/com.hexagontk.http.client/-http-client-port/index.html","searchKeys":["HttpClientPort","interface HttpClientPort","com.hexagontk.http.client.HttpClientPort"]},{"name":"open override fun close()","description":"com.hexagontk.http.client.HttpClient.close","location":"http/http_client/com.hexagontk.http.client/-http-client/close.html","searchKeys":["close","open override fun close()","com.hexagontk.http.client.HttpClient.close"]},{"name":"val accept: List<ContentType>","description":"com.hexagontk.http.client.HttpClientSettings.accept","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/accept.html","searchKeys":["accept","val accept: List<ContentType>","com.hexagontk.http.client.HttpClientSettings.accept"]},{"name":"val authorization: Authorization? = null","description":"com.hexagontk.http.client.HttpClientSettings.authorization","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/authorization.html","searchKeys":["authorization","val authorization: Authorization? = null","com.hexagontk.http.client.HttpClientSettings.authorization"]},{"name":"val baseUri: URI? = null","description":"com.hexagontk.http.client.HttpClientSettings.baseUri","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/base-uri.html","searchKeys":["baseUri","val baseUri: URI? = null","com.hexagontk.http.client.HttpClientSettings.baseUri"]},{"name":"val contentType: ContentType? = null","description":"com.hexagontk.http.client.HttpClientSettings.contentType","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/content-type.html","searchKeys":["contentType","val contentType: ContentType? = null","com.hexagontk.http.client.HttpClientSettings.contentType"]},{"name":"val followRedirects: Boolean = false","description":"com.hexagontk.http.client.HttpClientSettings.followRedirects","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/follow-redirects.html","searchKeys":["followRedirects","val followRedirects: Boolean = false","com.hexagontk.http.client.HttpClientSettings.followRedirects"]},{"name":"val handler: HttpHandler? = null","description":"com.hexagontk.http.client.HttpClient.handler","location":"http/http_client/com.hexagontk.http.client/-http-client/handler.html","searchKeys":["handler","val handler: HttpHandler? = null","com.hexagontk.http.client.HttpClient.handler"]},{"name":"val headers: Headers","description":"com.hexagontk.http.client.HttpClientSettings.headers","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/headers.html","searchKeys":["headers","val headers: Headers","com.hexagontk.http.client.HttpClientSettings.headers"]},{"name":"val insecure: Boolean = false","description":"com.hexagontk.http.client.HttpClientSettings.insecure","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/insecure.html","searchKeys":["insecure","val insecure: Boolean = false","com.hexagontk.http.client.HttpClientSettings.insecure"]},{"name":"val settings: HttpClientSettings","description":"com.hexagontk.http.client.HttpClient.settings","location":"http/http_client/com.hexagontk.http.client/-http-client/settings.html","searchKeys":["settings","val settings: HttpClientSettings","com.hexagontk.http.client.HttpClient.settings"]},{"name":"val sslSettings: SslSettings? = null","description":"com.hexagontk.http.client.HttpClientSettings.sslSettings","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/ssl-settings.html","searchKeys":["sslSettings","val sslSettings: SslSettings? = null","com.hexagontk.http.client.HttpClientSettings.sslSettings"]},{"name":"val useCookies: Boolean = true","description":"com.hexagontk.http.client.HttpClientSettings.useCookies","location":"http/http_client/com.hexagontk.http.client/-http-client-settings/use-cookies.html","searchKeys":["useCookies","val useCookies: Boolean = true","com.hexagontk.http.client.HttpClientSettings.useCookies"]},{"name":"var cookies: List<Cookie>","description":"com.hexagontk.http.client.HttpClient.cookies","location":"http/http_client/com.hexagontk.http.client/-http-client/cookies.html","searchKeys":["cookies","var cookies: List<Cookie>","com.hexagontk.http.client.HttpClient.cookies"]},{"name":"fun HttpContext.callContext(): Map<String, *>","description":"com.hexagontk.web.callContext","location":"http/web/com.hexagontk.web/call-context.html","searchKeys":["callContext","fun HttpContext.callContext(): Map<String, *>","com.hexagontk.web.callContext"]},{"name":"fun HttpContext.obtainLocale(): Locale","description":"com.hexagontk.web.obtainLocale","location":"http/web/com.hexagontk.web/obtain-locale.html","searchKeys":["obtainLocale","fun HttpContext.obtainLocale(): Locale","com.hexagontk.web.obtainLocale"]},{"name":"fun HttpContext.template(templateEngine: TemplatePort, url: URL, context: Map<String, *> = emptyMap<String, Any>(), locale: Locale = obtainLocale(), headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.web.template","location":"http/web/com.hexagontk.web/template.html","searchKeys":["template","fun HttpContext.template(templateEngine: TemplatePort, url: URL, context: Map<String, *> = emptyMap<String, Any>(), locale: Locale = obtainLocale(), headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.web.template"]},{"name":"fun HttpContext.template(url: URL, context: Map<String, *> = emptyMap<String, Any>(), locale: Locale = obtainLocale(), headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.web.template","location":"http/web/com.hexagontk.web/template.html","searchKeys":["template","fun HttpContext.template(url: URL, context: Map<String, *> = emptyMap<String, Any>(), locale: Locale = obtainLocale(), headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.web.template"]},{"name":"fun HttpContext.templateType(url: URL): ContentType?","description":"com.hexagontk.web.templateType","location":"http/web/com.hexagontk.web/template-type.html","searchKeys":["templateType","fun HttpContext.templateType(url: URL): ContentType?","com.hexagontk.web.templateType"]},{"name":"class NettyRequestAdapter(methodName: HttpMethod, req: HttpRequest, val certificateChain: List<X509Certificate>, channel: Channel, nettyHeaders: HttpHeaders) : HttpRequestPort","description":"com.hexagontk.http.server.netty.NettyRequestAdapter","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/index.html","searchKeys":["NettyRequestAdapter","class NettyRequestAdapter(methodName: HttpMethod, req: HttpRequest, val certificateChain: List<X509Certificate>, channel: Channel, nettyHeaders: HttpHeaders) : HttpRequestPort","com.hexagontk.http.server.netty.NettyRequestAdapter"]},{"name":"constructor()","description":"com.hexagontk.http.server.netty.NettyHttpServer.NettyHttpServer","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/-netty-http-server.html","searchKeys":["NettyHttpServer","constructor()","com.hexagontk.http.server.netty.NettyHttpServer.NettyHttpServer"]},{"name":"constructor(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true)","description":"com.hexagontk.http.server.netty.NettyHttpServer.NettyHttpServer","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/-netty-http-server.html","searchKeys":["NettyHttpServer","constructor(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true)","com.hexagontk.http.server.netty.NettyHttpServer.NettyHttpServer"]},{"name":"constructor(methodName: HttpMethod, req: HttpRequest, certificateChain: List<X509Certificate>, channel: Channel, nettyHeaders: HttpHeaders)","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.NettyRequestAdapter","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/-netty-request-adapter.html","searchKeys":["NettyRequestAdapter","constructor(methodName: HttpMethod, req: HttpRequest, certificateChain: List<X509Certificate>, channel: Channel, nettyHeaders: HttpHeaders)","com.hexagontk.http.server.netty.NettyRequestAdapter.NettyRequestAdapter"]},{"name":"open class NettyHttpServer(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true) : HttpServerPort","description":"com.hexagontk.http.server.netty.NettyHttpServer","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/index.html","searchKeys":["NettyHttpServer","open class NettyHttpServer(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true) : HttpServerPort","com.hexagontk.http.server.netty.NettyHttpServer"]},{"name":"open fun groupSupplier(it: Int): MultithreadEventLoopGroup","description":"com.hexagontk.http.server.netty.NettyHttpServer.groupSupplier","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/group-supplier.html","searchKeys":["groupSupplier","open fun groupSupplier(it: Int): MultithreadEventLoopGroup","com.hexagontk.http.server.netty.NettyHttpServer.groupSupplier"]},{"name":"open fun serverBootstrapSupplier(bossGroup: MultithreadEventLoopGroup, workerGroup: MultithreadEventLoopGroup): ServerBootstrap","description":"com.hexagontk.http.server.netty.NettyHttpServer.serverBootstrapSupplier","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/server-bootstrap-supplier.html","searchKeys":["serverBootstrapSupplier","open fun serverBootstrapSupplier(bossGroup: MultithreadEventLoopGroup, workerGroup: MultithreadEventLoopGroup): ServerBootstrap","com.hexagontk.http.server.netty.NettyHttpServer.serverBootstrapSupplier"]},{"name":"open override fun options(): Map<String, *>","description":"com.hexagontk.http.server.netty.NettyHttpServer.options","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/options.html","searchKeys":["options","open override fun options(): Map<String, *>","com.hexagontk.http.server.netty.NettyHttpServer.options"]},{"name":"open override fun runtimePort(): Int","description":"com.hexagontk.http.server.netty.NettyHttpServer.runtimePort","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/runtime-port.html","searchKeys":["runtimePort","open override fun runtimePort(): Int","com.hexagontk.http.server.netty.NettyHttpServer.runtimePort"]},{"name":"open override fun shutDown()","description":"com.hexagontk.http.server.netty.NettyHttpServer.shutDown","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/shut-down.html","searchKeys":["shutDown","open override fun shutDown()","com.hexagontk.http.server.netty.NettyHttpServer.shutDown"]},{"name":"open override fun startUp(server: HttpServer)","description":"com.hexagontk.http.server.netty.NettyHttpServer.startUp","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/start-up.html","searchKeys":["startUp","open override fun startUp(server: HttpServer)","com.hexagontk.http.server.netty.NettyHttpServer.startUp"]},{"name":"open override fun started(): Boolean","description":"com.hexagontk.http.server.netty.NettyHttpServer.started","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/started.html","searchKeys":["started","open override fun started(): Boolean","com.hexagontk.http.server.netty.NettyHttpServer.started"]},{"name":"open override fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.server.netty.NettyHttpServer.supportedFeatures","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.server.netty.NettyHttpServer.supportedFeatures"]},{"name":"open override fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.server.netty.NettyHttpServer.supportedProtocols","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-http-server/supported-protocols.html","searchKeys":["supportedProtocols","open override fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.server.netty.NettyHttpServer.supportedProtocols"]},{"name":"open override fun with(body: Any, headers: Headers, contentType: ContentType?, method: HttpMethod, protocol: HttpProtocol, host: String, port: Int, path: String, queryParameters: Parameters, parts: List<HttpPart>, formParameters: Parameters, cookies: List<Cookie>, accept: List<ContentType>, authorization: Authorization?, certificateChain: List<X509Certificate>, pathPattern: PathPattern?, pathParameters: Map<String, Any>): HttpRequestPort","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.with","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/with.html","searchKeys":["with","open override fun with(body: Any, headers: Headers, contentType: ContentType?, method: HttpMethod, protocol: HttpProtocol, host: String, port: Int, path: String, queryParameters: Parameters, parts: List<HttpPart>, formParameters: Parameters, cookies: List<Cookie>, accept: List<ContentType>, authorization: Authorization?, certificateChain: List<X509Certificate>, pathPattern: PathPattern?, pathParameters: Map<String, Any>): HttpRequestPort","com.hexagontk.http.server.netty.NettyRequestAdapter.with"]},{"name":"open override val accept: List<ContentType>","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.accept","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/accept.html","searchKeys":["accept","open override val accept: List<ContentType>","com.hexagontk.http.server.netty.NettyRequestAdapter.accept"]},{"name":"open override val authorization: Authorization?","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.authorization","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/authorization.html","searchKeys":["authorization","open override val authorization: Authorization?","com.hexagontk.http.server.netty.NettyRequestAdapter.authorization"]},{"name":"open override val body: Any","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.body","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/body.html","searchKeys":["body","open override val body: Any","com.hexagontk.http.server.netty.NettyRequestAdapter.body"]},{"name":"open override val certificateChain: List<X509Certificate>","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.certificateChain","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/certificate-chain.html","searchKeys":["certificateChain","open override val certificateChain: List<X509Certificate>","com.hexagontk.http.server.netty.NettyRequestAdapter.certificateChain"]},{"name":"open override val contentLength: Long","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.contentLength","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.hexagontk.http.server.netty.NettyRequestAdapter.contentLength"]},{"name":"open override val contentType: ContentType?","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.contentType","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/content-type.html","searchKeys":["contentType","open override val contentType: ContentType?","com.hexagontk.http.server.netty.NettyRequestAdapter.contentType"]},{"name":"open override val cookies: List<Cookie>","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.cookies","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/cookies.html","searchKeys":["cookies","open override val cookies: List<Cookie>","com.hexagontk.http.server.netty.NettyRequestAdapter.cookies"]},{"name":"open override val formParameters: Parameters","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.formParameters","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/form-parameters.html","searchKeys":["formParameters","open override val formParameters: Parameters","com.hexagontk.http.server.netty.NettyRequestAdapter.formParameters"]},{"name":"open override val headers: Headers","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.headers","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/headers.html","searchKeys":["headers","open override val headers: Headers","com.hexagontk.http.server.netty.NettyRequestAdapter.headers"]},{"name":"open override val host: String","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.host","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/host.html","searchKeys":["host","open override val host: String","com.hexagontk.http.server.netty.NettyRequestAdapter.host"]},{"name":"open override val method: HttpMethod","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.method","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/method.html","searchKeys":["method","open override val method: HttpMethod","com.hexagontk.http.server.netty.NettyRequestAdapter.method"]},{"name":"open override val parts: List<HttpPart>","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.parts","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/parts.html","searchKeys":["parts","open override val parts: List<HttpPart>","com.hexagontk.http.server.netty.NettyRequestAdapter.parts"]},{"name":"open override val path: String","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.path","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/path.html","searchKeys":["path","open override val path: String","com.hexagontk.http.server.netty.NettyRequestAdapter.path"]},{"name":"open override val pathParameters: Map<String, Any>","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.pathParameters","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/path-parameters.html","searchKeys":["pathParameters","open override val pathParameters: Map<String, Any>","com.hexagontk.http.server.netty.NettyRequestAdapter.pathParameters"]},{"name":"open override val pathPattern: PathPattern? = null","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.pathPattern","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/path-pattern.html","searchKeys":["pathPattern","open override val pathPattern: PathPattern? = null","com.hexagontk.http.server.netty.NettyRequestAdapter.pathPattern"]},{"name":"open override val port: Int","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.port","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/port.html","searchKeys":["port","open override val port: Int","com.hexagontk.http.server.netty.NettyRequestAdapter.port"]},{"name":"open override val protocol: HttpProtocol","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.protocol","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/protocol.html","searchKeys":["protocol","open override val protocol: HttpProtocol","com.hexagontk.http.server.netty.NettyRequestAdapter.protocol"]},{"name":"open override val queryParameters: Parameters","description":"com.hexagontk.http.server.netty.NettyRequestAdapter.queryParameters","location":"http/http_server_netty/com.hexagontk.http.server.netty/-netty-request-adapter/query-parameters.html","searchKeys":["queryParameters","open override val queryParameters: Parameters","com.hexagontk.http.server.netty.NettyRequestAdapter.queryParameters"]},{"name":"constructor(prettyPrint: Boolean = true, relaxed: Boolean = false)","description":"com.hexagontk.serialization.jackson.json.JsonFormat.JsonFormat","location":"serialization/serialization_jackson_json/com.hexagontk.serialization.jackson.json/-json-format/-json-format.html","searchKeys":["JsonFormat","constructor(prettyPrint: Boolean = true, relaxed: Boolean = false)","com.hexagontk.serialization.jackson.json.JsonFormat.JsonFormat"]},{"name":"object Json : JsonFormat","description":"com.hexagontk.serialization.jackson.json.Json","location":"serialization/serialization_jackson_json/com.hexagontk.serialization.jackson.json/-json/index.html","searchKeys":["Json","object Json : JsonFormat","com.hexagontk.serialization.jackson.json.Json"]},{"name":"object Json5 : JsonFormat","description":"com.hexagontk.serialization.jackson.json.Json5","location":"serialization/serialization_jackson_json/com.hexagontk.serialization.jackson.json/-json5/index.html","searchKeys":["Json5","object Json5 : JsonFormat","com.hexagontk.serialization.jackson.json.Json5"]},{"name":"open class JsonFormat(prettyPrint: Boolean = true, relaxed: Boolean = false) : JacksonTextFormat","description":"com.hexagontk.serialization.jackson.json.JsonFormat","location":"serialization/serialization_jackson_json/com.hexagontk.serialization.jackson.json/-json-format/index.html","searchKeys":["JsonFormat","open class JsonFormat(prettyPrint: Boolean = true, relaxed: Boolean = false) : JacksonTextFormat","com.hexagontk.serialization.jackson.json.JsonFormat"]},{"name":"open override val mediaType: MediaType","description":"com.hexagontk.serialization.jackson.json.JsonFormat.mediaType","location":"serialization/serialization_jackson_json/com.hexagontk.serialization.jackson.json/-json-format/media-type.html","searchKeys":["mediaType","open override val mediaType: MediaType","com.hexagontk.serialization.jackson.json.JsonFormat.mediaType"]},{"name":"val raw: JsonFormat","description":"com.hexagontk.serialization.jackson.json.Json.raw","location":"serialization/serialization_jackson_json/com.hexagontk.serialization.jackson.json/-json/raw.html","searchKeys":["raw","val raw: JsonFormat","com.hexagontk.serialization.jackson.json.Json.raw"]},{"name":"val raw: JsonFormat","description":"com.hexagontk.serialization.jackson.json.Json5.raw","location":"serialization/serialization_jackson_json/com.hexagontk.serialization.jackson.json/-json5/raw.html","searchKeys":["raw","val raw: JsonFormat","com.hexagontk.serialization.jackson.json.Json5.raw"]},{"name":"abstract class TemplateAdapterTest(url: URL, adapter: TemplatePort)","description":"com.hexagontk.templates.test.TemplateAdapterTest","location":"templates/templates_test/com.hexagontk.templates.test/-template-adapter-test/index.html","searchKeys":["TemplateAdapterTest","abstract class TemplateAdapterTest(url: URL, adapter: TemplatePort)","com.hexagontk.templates.test.TemplateAdapterTest"]},{"name":"constructor(url: URL, adapter: TemplatePort)","description":"com.hexagontk.templates.test.TemplateAdapterTest.TemplateAdapterTest","location":"templates/templates_test/com.hexagontk.templates.test/-template-adapter-test/-template-adapter-test.html","searchKeys":["TemplateAdapterTest","constructor(url: URL, adapter: TemplatePort)","com.hexagontk.templates.test.TemplateAdapterTest.TemplateAdapterTest"]},{"name":"fun A static template is rendered properly()","description":"com.hexagontk.templates.test.TemplateAdapterTest.A static template is rendered properly","location":"templates/templates_test/com.hexagontk.templates.test/-template-adapter-test/-a static template is rendered properly.html","searchKeys":["A static template is rendered properly","fun A static template is rendered properly()","com.hexagontk.templates.test.TemplateAdapterTest.A static template is rendered properly"]},{"name":"fun A static template with missing properties is rendered properly()","description":"com.hexagontk.templates.test.TemplateAdapterTest.A static template with missing properties is rendered properly","location":"templates/templates_test/com.hexagontk.templates.test/-template-adapter-test/-a static template with missing properties is rendered properly.html","searchKeys":["A static template with missing properties is rendered properly","fun A static template with missing properties is rendered properly()","com.hexagontk.templates.test.TemplateAdapterTest.A static template with missing properties is rendered properly"]},{"name":"fun Invalid resource path will return empty map()","description":"com.hexagontk.templates.test.TemplateAdapterTest.Invalid resource path will return empty map","location":"templates/templates_test/com.hexagontk.templates.test/-template-adapter-test/-invalid resource path will return empty map.html","searchKeys":["Invalid resource path will return empty map","fun Invalid resource path will return empty map()","com.hexagontk.templates.test.TemplateAdapterTest.Invalid resource path will return empty map"]},{"name":"fun Set up adapter()","description":"com.hexagontk.templates.test.TemplateAdapterTest.Set up adapter","location":"templates/templates_test/com.hexagontk.templates.test/-template-adapter-test/-set up adapter.html","searchKeys":["Set up adapter","fun Set up adapter()","com.hexagontk.templates.test.TemplateAdapterTest.Set up adapter"]},{"name":"fun Template with not proper properties is rendered()","description":"com.hexagontk.templates.test.TemplateAdapterTest.Template with not proper properties is rendered","location":"templates/templates_test/com.hexagontk.templates.test/-template-adapter-test/-template with not proper properties is rendered.html","searchKeys":["Template with not proper properties is rendered","fun Template with not proper properties is rendered()","com.hexagontk.templates.test.TemplateAdapterTest.Template with not proper properties is rendered"]},{"name":"object Xml : SerializationFormat","description":"com.hexagontk.serialization.jackson.xml.Xml","location":"serialization/serialization_jackson_xml/com.hexagontk.serialization.jackson.xml/-xml/index.html","searchKeys":["Xml","object Xml : SerializationFormat","com.hexagontk.serialization.jackson.xml.Xml"]},{"name":"open override fun parse(input: InputStream): Any","description":"com.hexagontk.serialization.jackson.xml.Xml.parse","location":"serialization/serialization_jackson_xml/com.hexagontk.serialization.jackson.xml/-xml/parse.html","searchKeys":["parse","open override fun parse(input: InputStream): Any","com.hexagontk.serialization.jackson.xml.Xml.parse"]},{"name":"open override fun serialize(instance: Any): String","description":"com.hexagontk.serialization.jackson.xml.Xml.serialize","location":"serialization/serialization_jackson_xml/com.hexagontk.serialization.jackson.xml/-xml/serialize.html","searchKeys":["serialize","open override fun serialize(instance: Any): String","com.hexagontk.serialization.jackson.xml.Xml.serialize"]},{"name":"open override fun serialize(instance: Any, output: OutputStream)","description":"com.hexagontk.serialization.jackson.xml.Xml.serialize","location":"serialization/serialization_jackson_xml/com.hexagontk.serialization.jackson.xml/-xml/serialize.html","searchKeys":["serialize","open override fun serialize(instance: Any, output: OutputStream)","com.hexagontk.serialization.jackson.xml.Xml.serialize"]},{"name":"open override val mediaType: MediaType","description":"com.hexagontk.serialization.jackson.xml.Xml.mediaType","location":"serialization/serialization_jackson_xml/com.hexagontk.serialization.jackson.xml/-xml/media-type.html","searchKeys":["mediaType","open override val mediaType: MediaType","com.hexagontk.serialization.jackson.xml.Xml.mediaType"]},{"name":"open override val textFormat: Boolean = true","description":"com.hexagontk.serialization.jackson.xml.Xml.textFormat","location":"serialization/serialization_jackson_xml/com.hexagontk.serialization.jackson.xml/-xml/text-format.html","searchKeys":["textFormat","open override val textFormat: Boolean = true","com.hexagontk.serialization.jackson.xml.Xml.textFormat"]},{"name":"abstract fun options(): Map<String, *>","description":"com.hexagontk.http.server.HttpServerPort.options","location":"http/http_server/com.hexagontk.http.server/-http-server-port/options.html","searchKeys":["options","abstract fun options(): Map<String, *>","com.hexagontk.http.server.HttpServerPort.options"]},{"name":"abstract fun runtimePort(): Int","description":"com.hexagontk.http.server.HttpServerPort.runtimePort","location":"http/http_server/com.hexagontk.http.server/-http-server-port/runtime-port.html","searchKeys":["runtimePort","abstract fun runtimePort(): Int","com.hexagontk.http.server.HttpServerPort.runtimePort"]},{"name":"abstract fun shutDown()","description":"com.hexagontk.http.server.HttpServerPort.shutDown","location":"http/http_server/com.hexagontk.http.server/-http-server-port/shut-down.html","searchKeys":["shutDown","abstract fun shutDown()","com.hexagontk.http.server.HttpServerPort.shutDown"]},{"name":"abstract fun startUp(server: HttpServer)","description":"com.hexagontk.http.server.HttpServerPort.startUp","location":"http/http_server/com.hexagontk.http.server/-http-server-port/start-up.html","searchKeys":["startUp","abstract fun startUp(server: HttpServer)","com.hexagontk.http.server.HttpServerPort.startUp"]},{"name":"abstract fun started(): Boolean","description":"com.hexagontk.http.server.HttpServerPort.started","location":"http/http_server/com.hexagontk.http.server/-http-server-port/started.html","searchKeys":["started","abstract fun started(): Boolean","com.hexagontk.http.server.HttpServerPort.started"]},{"name":"abstract fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.server.HttpServerPort.supportedFeatures","location":"http/http_server/com.hexagontk.http.server/-http-server-port/supported-features.html","searchKeys":["supportedFeatures","abstract fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.server.HttpServerPort.supportedFeatures"]},{"name":"abstract fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.server.HttpServerPort.supportedProtocols","location":"http/http_server/com.hexagontk.http.server/-http-server-port/supported-protocols.html","searchKeys":["supportedProtocols","abstract fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.server.HttpServerPort.supportedProtocols"]},{"name":"class CorsCallback(allowedOrigin: Regex, allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0) : Function1<HttpContext, HttpContext> ","description":"com.hexagontk.http.server.callbacks.CorsCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-cors-callback/index.html","searchKeys":["CorsCallback","class CorsCallback(allowedOrigin: Regex, allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0) : Function1<HttpContext, HttpContext> ","com.hexagontk.http.server.callbacks.CorsCallback"]},{"name":"class CorsHandler(pattern: String, cors: CorsCallback) : HttpHandler","description":"com.hexagontk.http.server.handlers.CorsHandler","location":"http/http_server/com.hexagontk.http.server.handlers/-cors-handler/index.html","searchKeys":["CorsHandler","class CorsHandler(pattern: String, cors: CorsCallback) : HttpHandler","com.hexagontk.http.server.handlers.CorsHandler"]},{"name":"class DateCallback(name: String = \"date\") : Function1<HttpContext, HttpContext> ","description":"com.hexagontk.http.server.callbacks.DateCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-date-callback/index.html","searchKeys":["DateCallback","class DateCallback(name: String = \"date\") : Function1<HttpContext, HttpContext> ","com.hexagontk.http.server.callbacks.DateCallback"]},{"name":"class FileCallback(file: File) : Function1<HttpContext, HttpContext> ","description":"com.hexagontk.http.server.callbacks.FileCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-file-callback/index.html","searchKeys":["FileCallback","class FileCallback(file: File) : Function1<HttpContext, HttpContext> ","com.hexagontk.http.server.callbacks.FileCallback"]},{"name":"class HttpServer(adapter: HttpServerPort, val handler: HttpHandler, val settings: HttpServerSettings = HttpServerSettings()) : Closeable","description":"com.hexagontk.http.server.HttpServer","location":"http/http_server/com.hexagontk.http.server/-http-server/index.html","searchKeys":["HttpServer","class HttpServer(adapter: HttpServerPort, val handler: HttpHandler, val settings: HttpServerSettings = HttpServerSettings()) : Closeable","com.hexagontk.http.server.HttpServer"]},{"name":"class HttpServerSettings(val bindAddress: InetAddress = InetAddress.getLoopbackAddress(), val bindPort: Int = 2010, val protocol: HttpProtocol = HTTP, val sslSettings: SslSettings? = null, val zip: Boolean = false)","description":"com.hexagontk.http.server.HttpServerSettings","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/index.html","searchKeys":["HttpServerSettings","class HttpServerSettings(val bindAddress: InetAddress = InetAddress.getLoopbackAddress(), val bindPort: Int = 2010, val protocol: HttpProtocol = HTTP, val sslSettings: SslSettings? = null, val zip: Boolean = false)","com.hexagontk.http.server.HttpServerSettings"]},{"name":"class LoggingCallback(level: System.Logger.Level = Level.INFO, logger: System.Logger = loggerOf(LoggingCallback::class), includeHeaders: Boolean = false, includeBody: Boolean = true) : Function1<HttpContext, HttpContext> ","description":"com.hexagontk.http.server.callbacks.LoggingCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-logging-callback/index.html","searchKeys":["LoggingCallback","class LoggingCallback(level: System.Logger.Level = Level.INFO, logger: System.Logger = loggerOf(LoggingCallback::class), includeHeaders: Boolean = false, includeBody: Boolean = true) : Function1<HttpContext, HttpContext> ","com.hexagontk.http.server.callbacks.LoggingCallback"]},{"name":"class UrlCallback(url: URL) : Function1<HttpContext, HttpContext> ","description":"com.hexagontk.http.server.callbacks.UrlCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-url-callback/index.html","searchKeys":["UrlCallback","class UrlCallback(url: URL) : Function1<HttpContext, HttpContext> ","com.hexagontk.http.server.callbacks.UrlCallback"]},{"name":"constructor(adapter: HttpServerPort, handler: HttpHandler, settings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.server.HttpServer.HttpServer","location":"http/http_server/com.hexagontk.http.server/-http-server/-http-server.html","searchKeys":["HttpServer","constructor(adapter: HttpServerPort, handler: HttpHandler, settings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.server.HttpServer.HttpServer"]},{"name":"constructor(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), block: HandlerBuilder.() -> Unit)","description":"com.hexagontk.http.server.HttpServer.HttpServer","location":"http/http_server/com.hexagontk.http.server/-http-server/-http-server.html","searchKeys":["HttpServer","constructor(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), block: HandlerBuilder.() -> Unit)","com.hexagontk.http.server.HttpServer.HttpServer"]},{"name":"constructor(allowedOrigin: Regex, allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0)","description":"com.hexagontk.http.server.callbacks.CorsCallback.CorsCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-cors-callback/-cors-callback.html","searchKeys":["CorsCallback","constructor(allowedOrigin: Regex, allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0)","com.hexagontk.http.server.callbacks.CorsCallback.CorsCallback"]},{"name":"constructor(allowedOrigin: String = \"*\", allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0)","description":"com.hexagontk.http.server.callbacks.CorsCallback.CorsCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-cors-callback/-cors-callback.html","searchKeys":["CorsCallback","constructor(allowedOrigin: String = \"*\", allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0)","com.hexagontk.http.server.callbacks.CorsCallback.CorsCallback"]},{"name":"constructor(bindAddress: InetAddress = InetAddress.getLoopbackAddress(), bindPort: Int = 2010, protocol: HttpProtocol = HTTP, sslSettings: SslSettings? = null, zip: Boolean = false)","description":"com.hexagontk.http.server.HttpServerSettings.HttpServerSettings","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/-http-server-settings.html","searchKeys":["HttpServerSettings","constructor(bindAddress: InetAddress = InetAddress.getLoopbackAddress(), bindPort: Int = 2010, protocol: HttpProtocol = HTTP, sslSettings: SslSettings? = null, zip: Boolean = false)","com.hexagontk.http.server.HttpServerSettings.HttpServerSettings"]},{"name":"constructor(cors: CorsCallback)","description":"com.hexagontk.http.server.handlers.CorsHandler.CorsHandler","location":"http/http_server/com.hexagontk.http.server.handlers/-cors-handler/-cors-handler.html","searchKeys":["CorsHandler","constructor(cors: CorsCallback)","com.hexagontk.http.server.handlers.CorsHandler.CorsHandler"]},{"name":"constructor(file: File)","description":"com.hexagontk.http.server.callbacks.FileCallback.FileCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-file-callback/-file-callback.html","searchKeys":["FileCallback","constructor(file: File)","com.hexagontk.http.server.callbacks.FileCallback.FileCallback"]},{"name":"constructor(file: String)","description":"com.hexagontk.http.server.callbacks.FileCallback.FileCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-file-callback/-file-callback.html","searchKeys":["FileCallback","constructor(file: String)","com.hexagontk.http.server.callbacks.FileCallback.FileCallback"]},{"name":"constructor(level: System.Logger.Level = Level.INFO, logger: System.Logger = loggerOf(LoggingCallback::class), includeHeaders: Boolean = false, includeBody: Boolean = true)","description":"com.hexagontk.http.server.callbacks.LoggingCallback.LoggingCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-logging-callback/-logging-callback.html","searchKeys":["LoggingCallback","constructor(level: System.Logger.Level = Level.INFO, logger: System.Logger = loggerOf(LoggingCallback::class), includeHeaders: Boolean = false, includeBody: Boolean = true)","com.hexagontk.http.server.callbacks.LoggingCallback.LoggingCallback"]},{"name":"constructor(name: String = \"date\")","description":"com.hexagontk.http.server.callbacks.DateCallback.DateCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-date-callback/-date-callback.html","searchKeys":["DateCallback","constructor(name: String = \"date\")","com.hexagontk.http.server.callbacks.DateCallback.DateCallback"]},{"name":"constructor(pattern: String = \"*\", allowedOrigin: String = \"*\", allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0)","description":"com.hexagontk.http.server.handlers.CorsHandler.CorsHandler","location":"http/http_server/com.hexagontk.http.server.handlers/-cors-handler/-cors-handler.html","searchKeys":["CorsHandler","constructor(pattern: String = \"*\", allowedOrigin: String = \"*\", allowedMethods: Set<HttpMethod> = ALL, allowedHeaders: Set<String> = emptySet(), exposedHeaders: Set<String> = emptySet(), supportCredentials: Boolean = true, preFlightStatus: Int = NO_CONTENT_204, preFlightMaxAge: Long = 0)","com.hexagontk.http.server.handlers.CorsHandler.CorsHandler"]},{"name":"constructor(pattern: String, cors: CorsCallback)","description":"com.hexagontk.http.server.handlers.CorsHandler.CorsHandler","location":"http/http_server/com.hexagontk.http.server.handlers/-cors-handler/-cors-handler.html","searchKeys":["CorsHandler","constructor(pattern: String, cors: CorsCallback)","com.hexagontk.http.server.handlers.CorsHandler.CorsHandler"]},{"name":"constructor(url: String)","description":"com.hexagontk.http.server.callbacks.UrlCallback.UrlCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-url-callback/-url-callback.html","searchKeys":["UrlCallback","constructor(url: String)","com.hexagontk.http.server.callbacks.UrlCallback.UrlCallback"]},{"name":"constructor(url: URL)","description":"com.hexagontk.http.server.callbacks.UrlCallback.UrlCallback","location":"http/http_server/com.hexagontk.http.server.callbacks/-url-callback/-url-callback.html","searchKeys":["UrlCallback","constructor(url: URL)","com.hexagontk.http.server.callbacks.UrlCallback.UrlCallback"]},{"name":"fun createBanner(startUpTimestamp: Long = -1, banner: String = serverBanner, detailed: Boolean = false): String","description":"com.hexagontk.http.server.HttpServer.createBanner","location":"http/http_server/com.hexagontk.http.server/-http-server/create-banner.html","searchKeys":["createBanner","fun createBanner(startUpTimestamp: Long = -1, banner: String = serverBanner, detailed: Boolean = false): String","com.hexagontk.http.server.HttpServer.createBanner"]},{"name":"fun serve(adapter: HttpServerPort, handler: HttpHandler, settings: HttpServerSettings = HttpServerSettings()): HttpServer","description":"com.hexagontk.http.server.serve","location":"http/http_server/com.hexagontk.http.server/serve.html","searchKeys":["serve","fun serve(adapter: HttpServerPort, handler: HttpHandler, settings: HttpServerSettings = HttpServerSettings()): HttpServer","com.hexagontk.http.server.serve"]},{"name":"fun serve(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), block: HandlerBuilder.() -> Unit): HttpServer","description":"com.hexagontk.http.server.serve","location":"http/http_server/com.hexagontk.http.server/serve.html","searchKeys":["serve","fun serve(adapter: HttpServerPort, settings: HttpServerSettings = HttpServerSettings(), block: HandlerBuilder.() -> Unit): HttpServer","com.hexagontk.http.server.serve"]},{"name":"fun start()","description":"com.hexagontk.http.server.HttpServer.start","location":"http/http_server/com.hexagontk.http.server/-http-server/start.html","searchKeys":["start","fun start()","com.hexagontk.http.server.HttpServer.start"]},{"name":"fun started(): Boolean","description":"com.hexagontk.http.server.HttpServer.started","location":"http/http_server/com.hexagontk.http.server/-http-server/started.html","searchKeys":["started","fun started(): Boolean","com.hexagontk.http.server.HttpServer.started"]},{"name":"fun stop()","description":"com.hexagontk.http.server.HttpServer.stop","location":"http/http_server/com.hexagontk.http.server/-http-server/stop.html","searchKeys":["stop","fun stop()","com.hexagontk.http.server.HttpServer.stop"]},{"name":"fun with(bindAddress: InetAddress = this.bindAddress, bindPort: Int = this.bindPort, protocol: HttpProtocol = this.protocol, sslSettings: SslSettings? = this.sslSettings, zip: Boolean = this.zip): HttpServerSettings","description":"com.hexagontk.http.server.HttpServerSettings.with","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/with.html","searchKeys":["with","fun with(bindAddress: InetAddress = this.bindAddress, bindPort: Int = this.bindPort, protocol: HttpProtocol = this.protocol, sslSettings: SslSettings? = this.sslSettings, zip: Boolean = this.zip): HttpServerSettings","com.hexagontk.http.server.HttpServerSettings.with"]},{"name":"interface HttpServerPort","description":"com.hexagontk.http.server.HttpServerPort","location":"http/http_server/com.hexagontk.http.server/-http-server-port/index.html","searchKeys":["HttpServerPort","interface HttpServerPort","com.hexagontk.http.server.HttpServerPort"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.http.server.callbacks.CorsCallback.invoke","location":"http/http_server/com.hexagontk.http.server.callbacks/-cors-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.http.server.callbacks.CorsCallback.invoke"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.http.server.callbacks.DateCallback.invoke","location":"http/http_server/com.hexagontk.http.server.callbacks/-date-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.http.server.callbacks.DateCallback.invoke"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.http.server.callbacks.FileCallback.invoke","location":"http/http_server/com.hexagontk.http.server.callbacks/-file-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.http.server.callbacks.FileCallback.invoke"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.http.server.callbacks.LoggingCallback.invoke","location":"http/http_server/com.hexagontk.http.server.callbacks/-logging-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.http.server.callbacks.LoggingCallback.invoke"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.http.server.callbacks.UrlCallback.invoke","location":"http/http_server/com.hexagontk.http.server.callbacks/-url-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.http.server.callbacks.UrlCallback.invoke"]},{"name":"open override fun close()","description":"com.hexagontk.http.server.HttpServer.close","location":"http/http_server/com.hexagontk.http.server/-http-server/close.html","searchKeys":["close","open override fun close()","com.hexagontk.http.server.HttpServer.close"]},{"name":"val bindAddress: InetAddress","description":"com.hexagontk.http.server.HttpServerSettings.bindAddress","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/bind-address.html","searchKeys":["bindAddress","val bindAddress: InetAddress","com.hexagontk.http.server.HttpServerSettings.bindAddress"]},{"name":"val bindPort: Int = 2010","description":"com.hexagontk.http.server.HttpServerSettings.bindPort","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/bind-port.html","searchKeys":["bindPort","val bindPort: Int = 2010","com.hexagontk.http.server.HttpServerSettings.bindPort"]},{"name":"val bindUrl: URI","description":"com.hexagontk.http.server.HttpServerSettings.bindUrl","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/bind-url.html","searchKeys":["bindUrl","val bindUrl: URI","com.hexagontk.http.server.HttpServerSettings.bindUrl"]},{"name":"val binding: URI","description":"com.hexagontk.http.server.HttpServer.binding","location":"http/http_server/com.hexagontk.http.server/-http-server/binding.html","searchKeys":["binding","val binding: URI","com.hexagontk.http.server.HttpServer.binding"]},{"name":"val handler: HttpHandler","description":"com.hexagontk.http.server.HttpServer.handler","location":"http/http_server/com.hexagontk.http.server/-http-server/handler.html","searchKeys":["handler","val handler: HttpHandler","com.hexagontk.http.server.HttpServer.handler"]},{"name":"val portName: String","description":"com.hexagontk.http.server.HttpServer.portName","location":"http/http_server/com.hexagontk.http.server/-http-server/port-name.html","searchKeys":["portName","val portName: String","com.hexagontk.http.server.HttpServer.portName"]},{"name":"val protocol: HttpProtocol","description":"com.hexagontk.http.server.HttpServerSettings.protocol","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/protocol.html","searchKeys":["protocol","val protocol: HttpProtocol","com.hexagontk.http.server.HttpServerSettings.protocol"]},{"name":"val runtimePort: Int","description":"com.hexagontk.http.server.HttpServer.runtimePort","location":"http/http_server/com.hexagontk.http.server/-http-server/runtime-port.html","searchKeys":["runtimePort","val runtimePort: Int","com.hexagontk.http.server.HttpServer.runtimePort"]},{"name":"val serverBanner: String","description":"com.hexagontk.http.server.serverBanner","location":"http/http_server/com.hexagontk.http.server/server-banner.html","searchKeys":["serverBanner","val serverBanner: String","com.hexagontk.http.server.serverBanner"]},{"name":"val settings: HttpServerSettings","description":"com.hexagontk.http.server.HttpServer.settings","location":"http/http_server/com.hexagontk.http.server/-http-server/settings.html","searchKeys":["settings","val settings: HttpServerSettings","com.hexagontk.http.server.HttpServer.settings"]},{"name":"val sslSettings: SslSettings? = null","description":"com.hexagontk.http.server.HttpServerSettings.sslSettings","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/ssl-settings.html","searchKeys":["sslSettings","val sslSettings: SslSettings? = null","com.hexagontk.http.server.HttpServerSettings.sslSettings"]},{"name":"val zip: Boolean = false","description":"com.hexagontk.http.server.HttpServerSettings.zip","location":"http/http_server/com.hexagontk.http.server/-http-server-settings/zip.html","searchKeys":["zip","val zip: Boolean = false","com.hexagontk.http.server.HttpServerSettings.zip"]},{"name":"constructor(prettyPrint: Boolean = true)","description":"com.hexagontk.serialization.jackson.yaml.YamlFormat.YamlFormat","location":"serialization/serialization_jackson_yaml/com.hexagontk.serialization.jackson.yaml/-yaml-format/-yaml-format.html","searchKeys":["YamlFormat","constructor(prettyPrint: Boolean = true)","com.hexagontk.serialization.jackson.yaml.YamlFormat.YamlFormat"]},{"name":"object Yaml : YamlFormat","description":"com.hexagontk.serialization.jackson.yaml.Yaml","location":"serialization/serialization_jackson_yaml/com.hexagontk.serialization.jackson.yaml/-yaml/index.html","searchKeys":["Yaml","object Yaml : YamlFormat","com.hexagontk.serialization.jackson.yaml.Yaml"]},{"name":"open class YamlFormat(prettyPrint: Boolean = true) : JacksonTextFormat","description":"com.hexagontk.serialization.jackson.yaml.YamlFormat","location":"serialization/serialization_jackson_yaml/com.hexagontk.serialization.jackson.yaml/-yaml-format/index.html","searchKeys":["YamlFormat","open class YamlFormat(prettyPrint: Boolean = true) : JacksonTextFormat","com.hexagontk.serialization.jackson.yaml.YamlFormat"]},{"name":"open override val mediaType: MediaType","description":"com.hexagontk.serialization.jackson.yaml.YamlFormat.mediaType","location":"serialization/serialization_jackson_yaml/com.hexagontk.serialization.jackson.yaml/-yaml-format/media-type.html","searchKeys":["mediaType","open override val mediaType: MediaType","com.hexagontk.serialization.jackson.yaml.YamlFormat.mediaType"]},{"name":"val raw: YamlFormat","description":"com.hexagontk.serialization.jackson.yaml.Yaml.raw","location":"serialization/serialization_jackson_yaml/com.hexagontk.serialization.jackson.yaml/-yaml/raw.html","searchKeys":["raw","val raw: YamlFormat","com.hexagontk.serialization.jackson.yaml.Yaml.raw"]},{"name":"abstract class BaseTest","description":"com.hexagontk.http.test.BaseTest","location":"http/http_test/com.hexagontk.http.test/-base-test/index.html","searchKeys":["BaseTest","abstract class BaseTest","com.hexagontk.http.test.BaseTest"]},{"name":"abstract class BooksTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.BooksTest","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/index.html","searchKeys":["BooksTest","abstract class BooksTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.BooksTest"]},{"name":"abstract class ClientCookiesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.ClientCookiesTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-cookies-test/index.html","searchKeys":["ClientCookiesTest","abstract class ClientCookiesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.ClientCookiesTest"]},{"name":"abstract class ClientHttp2Test(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.ClientHttp2Test","location":"http/http_test/com.hexagontk.http.test.examples/-client-http2-test/index.html","searchKeys":["ClientHttp2Test","abstract class ClientHttp2Test(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.ClientHttp2Test"]},{"name":"abstract class ClientHttpsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.ClientHttpsTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-https-test/index.html","searchKeys":["ClientHttpsTest","abstract class ClientHttpsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.ClientHttpsTest"]},{"name":"abstract class ClientMultipartTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.ClientMultipartTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-multipart-test/index.html","searchKeys":["ClientMultipartTest","abstract class ClientMultipartTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.ClientMultipartTest"]},{"name":"abstract class ClientTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.ClientTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/index.html","searchKeys":["ClientTest","abstract class ClientTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.ClientTest"]},{"name":"abstract class CookiesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.CookiesTest","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/index.html","searchKeys":["CookiesTest","abstract class CookiesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.CookiesTest"]},{"name":"abstract class CorsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.CorsTest","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/index.html","searchKeys":["CorsTest","abstract class CorsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.CorsTest"]},{"name":"abstract class ErrorsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.ErrorsTest","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/index.html","searchKeys":["ErrorsTest","abstract class ErrorsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.ErrorsTest"]},{"name":"abstract class FilesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.FilesTest","location":"http/http_test/com.hexagontk.http.test.examples/-files-test/index.html","searchKeys":["FilesTest","abstract class FilesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.FilesTest"]},{"name":"abstract class FiltersTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.FiltersTest","location":"http/http_test/com.hexagontk.http.test.examples/-filters-test/index.html","searchKeys":["FiltersTest","abstract class FiltersTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.FiltersTest"]},{"name":"abstract class Http2Test(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.Http2Test","location":"http/http_test/com.hexagontk.http.test.examples/-http2-test/index.html","searchKeys":["Http2Test","abstract class Http2Test(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.Http2Test"]},{"name":"abstract class HttpsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.HttpsTest","location":"http/http_test/com.hexagontk.http.test.examples/-https-test/index.html","searchKeys":["HttpsTest","abstract class HttpsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.HttpsTest"]},{"name":"abstract class MultipartSamplesTest(val clientAdapter: () -> HttpClientPort, val serverAdapter: () -> HttpServerPort, val serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.MultipartSamplesTest","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-samples-test/index.html","searchKeys":["MultipartSamplesTest","abstract class MultipartSamplesTest(val clientAdapter: () -> HttpClientPort, val serverAdapter: () -> HttpServerPort, val serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.MultipartSamplesTest"]},{"name":"abstract class MultipartTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.MultipartTest","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-test/index.html","searchKeys":["MultipartTest","abstract class MultipartTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.MultipartTest"]},{"name":"abstract class SamplesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() }) : BaseTest","description":"com.hexagontk.http.test.examples.SamplesTest","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/index.html","searchKeys":["SamplesTest","abstract class SamplesTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() }) : BaseTest","com.hexagontk.http.test.examples.SamplesTest"]},{"name":"abstract class ServerTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() }, options: Collection<String>, features: Set<HttpFeature>) : BaseTest","description":"com.hexagontk.http.test.examples.examples.ServerTest","location":"http/http_test/com.hexagontk.http.test.examples.examples/-server-test/index.html","searchKeys":["ServerTest","abstract class ServerTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() }, options: Collection<String>, features: Set<HttpFeature>) : BaseTest","com.hexagontk.http.test.examples.examples.ServerTest"]},{"name":"abstract class SseTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.SseTest","location":"http/http_test/com.hexagontk.http.test.examples/-sse-test/index.html","searchKeys":["SseTest","abstract class SseTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.SseTest"]},{"name":"abstract class WebSocketsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.WebSocketsTest","location":"http/http_test/com.hexagontk.http.test.examples/-web-sockets-test/index.html","searchKeys":["WebSocketsTest","abstract class WebSocketsTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.WebSocketsTest"]},{"name":"abstract class ZipTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","description":"com.hexagontk.http.test.examples.ZipTest","location":"http/http_test/com.hexagontk.http.test.examples/-zip-test/index.html","searchKeys":["ZipTest","abstract class ZipTest(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings()) : BaseTest","com.hexagontk.http.test.examples.ZipTest"]},{"name":"class CustomException : IllegalArgumentException","description":"com.hexagontk.http.test.examples.ErrorsTest.CustomException","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-custom-exception/index.html","searchKeys":["CustomException","class CustomException : IllegalArgumentException","com.hexagontk.http.test.examples.ErrorsTest.CustomException"]},{"name":"constructor()","description":"com.hexagontk.http.test.BaseTest.BaseTest","location":"http/http_test/com.hexagontk.http.test/-base-test/-base-test.html","searchKeys":["BaseTest","constructor()","com.hexagontk.http.test.BaseTest.BaseTest"]},{"name":"constructor()","description":"com.hexagontk.http.test.examples.ErrorsTest.CustomException.CustomException","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-custom-exception/-custom-exception.html","searchKeys":["CustomException","constructor()","com.hexagontk.http.test.examples.ErrorsTest.CustomException.CustomException"]},{"name":"constructor(author: String, title: String)","description":"com.hexagontk.http.test.examples.BooksTest.Book.Book","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-book/-book.html","searchKeys":["Book","constructor(author: String, title: String)","com.hexagontk.http.test.examples.BooksTest.Book.Book"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.ClientCookiesTest.ClientCookiesTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-cookies-test/-client-cookies-test.html","searchKeys":["ClientCookiesTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.ClientCookiesTest.ClientCookiesTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.ClientHttp2Test.ClientHttp2Test","location":"http/http_test/com.hexagontk.http.test.examples/-client-http2-test/-client-http2-test.html","searchKeys":["ClientHttp2Test","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.ClientHttp2Test.ClientHttp2Test"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.ClientHttpsTest.ClientHttpsTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-https-test/-client-https-test.html","searchKeys":["ClientHttpsTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.ClientHttpsTest.ClientHttpsTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.ClientMultipartTest.ClientMultipartTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-multipart-test/-client-multipart-test.html","searchKeys":["ClientMultipartTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.ClientMultipartTest.ClientMultipartTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.ClientTest.ClientTest","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-client-test.html","searchKeys":["ClientTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serializationFormats: List<SerializationFormat>, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.ClientTest.ClientTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.BooksTest.BooksTest","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-books-test.html","searchKeys":["BooksTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.BooksTest.BooksTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.CookiesTest.CookiesTest","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/-cookies-test.html","searchKeys":["CookiesTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.CookiesTest.CookiesTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.CorsTest.CorsTest","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-cors-test.html","searchKeys":["CorsTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.CorsTest.CorsTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.ErrorsTest.ErrorsTest","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-errors-test.html","searchKeys":["ErrorsTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.ErrorsTest.ErrorsTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.FilesTest.FilesTest","location":"http/http_test/com.hexagontk.http.test.examples/-files-test/-files-test.html","searchKeys":["FilesTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.FilesTest.FilesTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.FiltersTest.FiltersTest","location":"http/http_test/com.hexagontk.http.test.examples/-filters-test/-filters-test.html","searchKeys":["FiltersTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.FiltersTest.FiltersTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.Http2Test.Http2Test","location":"http/http_test/com.hexagontk.http.test.examples/-http2-test/-http2-test.html","searchKeys":["Http2Test","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.Http2Test.Http2Test"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.HttpsTest.HttpsTest","location":"http/http_test/com.hexagontk.http.test.examples/-https-test/-https-test.html","searchKeys":["HttpsTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.HttpsTest.HttpsTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.MultipartSamplesTest.MultipartSamplesTest","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-samples-test/-multipart-samples-test.html","searchKeys":["MultipartSamplesTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.MultipartSamplesTest.MultipartSamplesTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.MultipartTest.MultipartTest","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-test/-multipart-test.html","searchKeys":["MultipartTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.MultipartTest.MultipartTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.SseTest.SseTest","location":"http/http_test/com.hexagontk.http.test.examples/-sse-test/-sse-test.html","searchKeys":["SseTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.SseTest.SseTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.WebSocketsTest.WebSocketsTest","location":"http/http_test/com.hexagontk.http.test.examples/-web-sockets-test/-web-sockets-test.html","searchKeys":["WebSocketsTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.WebSocketsTest.WebSocketsTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","description":"com.hexagontk.http.test.examples.ZipTest.ZipTest","location":"http/http_test/com.hexagontk.http.test.examples/-zip-test/-zip-test.html","searchKeys":["ZipTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings())","com.hexagontk.http.test.examples.ZipTest.ZipTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() })","description":"com.hexagontk.http.test.examples.SamplesTest.SamplesTest","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/-samples-test.html","searchKeys":["SamplesTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() })","com.hexagontk.http.test.examples.SamplesTest.SamplesTest"]},{"name":"constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() }, options: Collection<String>, features: Set<HttpFeature>)","description":"com.hexagontk.http.test.examples.examples.ServerTest.ServerTest","location":"http/http_test/com.hexagontk.http.test.examples.examples/-server-test/-server-test.html","searchKeys":["ServerTest","constructor(clientAdapter: () -> HttpClientPort, serverAdapter: () -> HttpServerPort, serverSettings: HttpServerSettings = HttpServerSettings(), handler: HttpHandler = Get { ok() }, options: Collection<String>, features: Set<HttpFeature>)","com.hexagontk.http.test.examples.examples.ServerTest.ServerTest"]},{"name":"data class Book(val author: String, val title: String)","description":"com.hexagontk.http.test.examples.BooksTest.Book","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-book/index.html","searchKeys":["Book","data class Book(val author: String, val title: String)","com.hexagontk.http.test.examples.BooksTest.Book"]},{"name":"fun A runtime exception returns a 500 code()","description":"com.hexagontk.http.test.examples.ErrorsTest.A runtime exception returns a 500 code","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-a runtime exception returns a 500 code.html","searchKeys":["A runtime exception returns a 500 code","fun A runtime exception returns a 500 code()","com.hexagontk.http.test.examples.ErrorsTest.A runtime exception returns a 500 code"]},{"name":"fun After handlers can be chained()","description":"com.hexagontk.http.test.examples.FiltersTest.After handlers can be chained","location":"http/http_test/com.hexagontk.http.test.examples/-filters-test/-after handlers can be chained.html","searchKeys":["After handlers can be chained","fun After handlers can be chained()","com.hexagontk.http.test.examples.FiltersTest.After handlers can be chained"]},{"name":"fun Allowed CORS pre-flight without origin()","description":"com.hexagontk.http.test.examples.CorsTest.Allowed CORS pre-flight without origin","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-allowed -c-o-r-s pre-flight without origin.html","searchKeys":["Allowed CORS pre-flight without origin","fun Allowed CORS pre-flight without origin()","com.hexagontk.http.test.examples.CorsTest.Allowed CORS pre-flight without origin"]},{"name":"fun Allowed origin is returned properly()","description":"com.hexagontk.http.test.examples.CorsTest.Allowed origin is returned properly","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-allowed origin is returned properly.html","searchKeys":["Allowed origin is returned properly","fun Allowed origin is returned properly()","com.hexagontk.http.test.examples.CorsTest.Allowed origin is returned properly"]},{"name":"fun An static file from resources can be fetched()","description":"com.hexagontk.http.test.examples.FilesTest.An static file from resources can be fetched","location":"http/http_test/com.hexagontk.http.test.examples/-files-test/-an static file from resources can be fetched.html","searchKeys":["An static file from resources can be fetched","fun An static file from resources can be fetched()","com.hexagontk.http.test.examples.FilesTest.An static file from resources can be fetched"]},{"name":"fun Base error handler catch all exceptions that subclass a given one()","description":"com.hexagontk.http.test.examples.ErrorsTest.Base error handler catch all exceptions that subclass a given one","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-base error handler catch all exceptions that subclass a given one.html","searchKeys":["Base error handler catch all exceptions that subclass a given one","fun Base error handler catch all exceptions that subclass a given one()","com.hexagontk.http.test.examples.ErrorsTest.Base error handler catch all exceptions that subclass a given one"]},{"name":"fun Book not found returns a 404()","description":"com.hexagontk.http.test.examples.BooksTest.Book not found returns a 404","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-book not found returns a 404.html","searchKeys":["Book not found returns a 404","fun Book not found returns a 404()","com.hexagontk.http.test.examples.BooksTest.Book not found returns a 404"]},{"name":"fun CORS full pre-flight()","description":"com.hexagontk.http.test.examples.CorsTest.CORS full pre-flight","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s full pre-flight.html","searchKeys":["CORS full pre-flight","fun CORS full pre-flight()","com.hexagontk.http.test.examples.CorsTest.CORS full pre-flight"]},{"name":"fun CORS pre-flight with allowed headers()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with allowed headers","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight with allowed headers.html","searchKeys":["CORS pre-flight with allowed headers","fun CORS pre-flight with allowed headers()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with allowed headers"]},{"name":"fun CORS pre-flight with empty request method()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with empty request method","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight with empty request method.html","searchKeys":["CORS pre-flight with empty request method","fun CORS pre-flight with empty request method()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with empty request method"]},{"name":"fun CORS pre-flight with mismatched origin()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with mismatched origin","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight with mismatched origin.html","searchKeys":["CORS pre-flight with mismatched origin","fun CORS pre-flight with mismatched origin()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with mismatched origin"]},{"name":"fun CORS pre-flight with not allowed headers()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with not allowed headers","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight with not allowed headers.html","searchKeys":["CORS pre-flight with not allowed headers","fun CORS pre-flight with not allowed headers()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with not allowed headers"]},{"name":"fun CORS pre-flight with not allowed method()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with not allowed method","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight with not allowed method.html","searchKeys":["CORS pre-flight with not allowed method","fun CORS pre-flight with not allowed method()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight with not allowed method"]},{"name":"fun CORS pre-flight without origin()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight without origin","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight without origin.html","searchKeys":["CORS pre-flight without origin","fun CORS pre-flight without origin()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight without origin"]},{"name":"fun CORS pre-flight without request method()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight without request method","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight without request method.html","searchKeys":["CORS pre-flight without request method","fun CORS pre-flight without request method()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight without request method"]},{"name":"fun CORS pre-flight()","description":"com.hexagontk.http.test.examples.CorsTest.CORS pre-flight","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-c-o-r-s pre-flight.html","searchKeys":["CORS pre-flight","fun CORS pre-flight()","com.hexagontk.http.test.examples.CorsTest.CORS pre-flight"]},{"name":"fun Cookies are sent correctly()","description":"com.hexagontk.http.test.examples.ClientCookiesTest.Cookies are sent correctly","location":"http/http_test/com.hexagontk.http.test.examples/-client-cookies-test/-cookies are sent correctly.html","searchKeys":["Cookies are sent correctly","fun Cookies are sent correctly()","com.hexagontk.http.test.examples.ClientCookiesTest.Cookies are sent correctly"]},{"name":"fun Cookies contain correct values()","description":"com.hexagontk.http.test.examples.CookiesTest.Cookies contain correct values","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/-cookies contain correct values.html","searchKeys":["Cookies contain correct values","fun Cookies contain correct values()","com.hexagontk.http.test.examples.CookiesTest.Cookies contain correct values"]},{"name":"fun Create HTTP clients()","description":"com.hexagontk.http.test.examples.ClientTest.Create HTTP clients","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-create -h-t-t-p clients.html","searchKeys":["Create HTTP clients","fun Create HTTP clients()","com.hexagontk.http.test.examples.ClientTest.Create HTTP clients"]},{"name":"fun Create book returns 201 and new book ID()","description":"com.hexagontk.http.test.examples.BooksTest.Create book returns 201 and new book ID","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-create book returns 201 and new book -i-d.html","searchKeys":["Create book returns 201 and new book ID","fun Create book returns 201 and new book ID()","com.hexagontk.http.test.examples.BooksTest.Create book returns 201 and new book ID"]},{"name":"fun Create book returns 400 if a parameter is missing()","description":"com.hexagontk.http.test.examples.BooksTest.Create book returns 400 if a parameter is missing","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-create book returns 400 if a parameter is missing.html","searchKeys":["Create book returns 400 if a parameter is missing","fun Create book returns 400 if a parameter is missing()","com.hexagontk.http.test.examples.BooksTest.Create book returns 400 if a parameter is missing"]},{"name":"fun Create cookie adds a new cookie to the request()","description":"com.hexagontk.http.test.examples.CookiesTest.Create cookie adds a new cookie to the request","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/-create cookie adds a new cookie to the request.html","searchKeys":["Create cookie adds a new cookie to the request","fun Create cookie adds a new cookie to the request()","com.hexagontk.http.test.examples.CookiesTest.Create cookie adds a new cookie to the request"]},{"name":"fun Delete book returns the deleted record ID()","description":"com.hexagontk.http.test.examples.BooksTest.Delete book returns the deleted record ID","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-delete book returns the deleted record -i-d.html","searchKeys":["Delete book returns the deleted record ID","fun Delete book returns the deleted record ID()","com.hexagontk.http.test.examples.BooksTest.Delete book returns the deleted record ID"]},{"name":"fun Delete not found book returns a 404()","description":"com.hexagontk.http.test.examples.BooksTest.Delete not found book returns a 404","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-delete not found book returns a 404.html","searchKeys":["Delete not found book returns a 404","fun Delete not found book returns a 404()","com.hexagontk.http.test.examples.BooksTest.Delete not found book returns a 404"]},{"name":"fun Empty cookies assures there is no cookies()","description":"com.hexagontk.http.test.examples.CookiesTest.Empty cookies assures there is no cookies","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/-empty cookies assures there is no cookies.html","searchKeys":["Empty cookies assures there is no cookies","fun Empty cookies assures there is no cookies()","com.hexagontk.http.test.examples.CookiesTest.Empty cookies assures there is no cookies"]},{"name":"fun Exceptions are returned as internal server errors()","description":"com.hexagontk.http.test.examples.ClientTest.Exceptions are returned as internal server errors","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-exceptions are returned as internal server errors.html","searchKeys":["Exceptions are returned as internal server errors","fun Exceptions are returned as internal server errors()","com.hexagontk.http.test.examples.ClientTest.Exceptions are returned as internal server errors"]},{"name":"fun Files content type is returned properly()","description":"com.hexagontk.http.test.examples.FilesTest.Files content type is returned properly","location":"http/http_test/com.hexagontk.http.test.examples/-files-test/-files content type is returned properly.html","searchKeys":["Files content type is returned properly","fun Files content type is returned properly()","com.hexagontk.http.test.examples.FilesTest.Files content type is returned properly"]},{"name":"fun Files mounted on a path are returned properly()","description":"com.hexagontk.http.test.examples.FilesTest.Files mounted on a path are returned properly","location":"http/http_test/com.hexagontk.http.test.examples/-files-test/-files mounted on a path are returned properly.html","searchKeys":["Files mounted on a path are returned properly","fun Files mounted on a path are returned properly()","com.hexagontk.http.test.examples.FilesTest.Files mounted on a path are returned properly"]},{"name":"fun Full cookie lifecycle()","description":"com.hexagontk.http.test.examples.CookiesTest.Full cookie lifecycle","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/-full cookie lifecycle.html","searchKeys":["Full cookie lifecycle","fun Full cookie lifecycle()","com.hexagontk.http.test.examples.CookiesTest.Full cookie lifecycle"]},{"name":"fun Get book returns all book's fields()","description":"com.hexagontk.http.test.examples.BooksTest.Get book returns all book's fields","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-get book returns all book's fields.html","searchKeys":["Get book returns all book's fields","fun Get book returns all book's fields()","com.hexagontk.http.test.examples.BooksTest.Get book returns all book's fields"]},{"name":"fun HTTP generic requests work ok()","description":"com.hexagontk.http.test.examples.ClientTest.HTTP generic requests work ok","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-h-t-t-p generic requests work ok.html","searchKeys":["HTTP generic requests work ok","fun HTTP generic requests work ok()","com.hexagontk.http.test.examples.ClientTest.HTTP generic requests work ok"]},{"name":"fun HTTP methods with body and content type work ok()","description":"com.hexagontk.http.test.examples.ClientTest.HTTP methods with body and content type work ok","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-h-t-t-p methods with body and content type work ok.html","searchKeys":["HTTP methods with body and content type work ok","fun HTTP methods with body and content type work ok()","com.hexagontk.http.test.examples.ClientTest.HTTP methods with body and content type work ok"]},{"name":"fun HTTP methods with body work ok()","description":"com.hexagontk.http.test.examples.ClientTest.HTTP methods with body work ok","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-h-t-t-p methods with body work ok.html","searchKeys":["HTTP methods with body work ok","fun HTTP methods with body work ok()","com.hexagontk.http.test.examples.ClientTest.HTTP methods with body work ok"]},{"name":"fun HTTP methods without body work ok()","description":"com.hexagontk.http.test.examples.ClientTest.HTTP methods without body work ok","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-h-t-t-p methods without body work ok.html","searchKeys":["HTTP methods without body work ok","fun HTTP methods without body work ok()","com.hexagontk.http.test.examples.ClientTest.HTTP methods without body work ok"]},{"name":"fun HTTP request with valid credentials returns valid response()","description":"com.hexagontk.http.test.examples.FiltersTest.HTTP request with valid credentials returns valid response","location":"http/http_test/com.hexagontk.http.test.examples/-filters-test/-h-t-t-p request with valid credentials returns valid response.html","searchKeys":["HTTP request with valid credentials returns valid response","fun HTTP request with valid credentials returns valid response()","com.hexagontk.http.test.examples.FiltersTest.HTTP request with valid credentials returns valid response"]},{"name":"fun Halt stops request with 500 status code()","description":"com.hexagontk.http.test.examples.ErrorsTest.Halt stops request with 500 status code","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-halt stops request with 500 status code.html","searchKeys":["Halt stops request with 500 status code","fun Halt stops request with 500 status code()","com.hexagontk.http.test.examples.ErrorsTest.Halt stops request with 500 status code"]},{"name":"fun Handle exception allows to catch unhandled callback exceptions()","description":"com.hexagontk.http.test.examples.ErrorsTest.Handle exception allows to catch unhandled callback exceptions","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-handle exception allows to catch unhandled callback exceptions.html","searchKeys":["Handle exception allows to catch unhandled callback exceptions","fun Handle exception allows to catch unhandled callback exceptions()","com.hexagontk.http.test.examples.ErrorsTest.Handle exception allows to catch unhandled callback exceptions"]},{"name":"fun Handling status code allows to change the returned code()","description":"com.hexagontk.http.test.examples.ErrorsTest.Handling status code allows to change the returned code","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-handling status code allows to change the returned code.html","searchKeys":["Handling status code allows to change the returned code","fun Handling status code allows to change the returned code()","com.hexagontk.http.test.examples.ErrorsTest.Handling status code allows to change the returned code"]},{"name":"fun Integers are sent properly()","description":"com.hexagontk.http.test.examples.ClientTest.Integers are sent properly","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-integers are sent properly.html","searchKeys":["Integers are sent properly","fun Integers are sent properly()","com.hexagontk.http.test.examples.ClientTest.Integers are sent properly"]},{"name":"fun Invalid body returns 500 status code()","description":"com.hexagontk.http.test.examples.ErrorsTest.Invalid body returns 500 status code","location":"http/http_test/com.hexagontk.http.test.examples/-errors-test/-invalid body returns 500 status code.html","searchKeys":["Invalid body returns 500 status code","fun Invalid body returns 500 status code()","com.hexagontk.http.test.examples.ErrorsTest.Invalid body returns 500 status code"]},{"name":"fun Invalid method returns 405()","description":"com.hexagontk.http.test.examples.BooksTest.Invalid method returns 405","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-invalid method returns 405.html","searchKeys":["Invalid method returns 405","fun Invalid method returns 405()","com.hexagontk.http.test.examples.BooksTest.Invalid method returns 405"]},{"name":"fun JSON requests works as expected()","description":"com.hexagontk.http.test.examples.ClientTest.JSON requests works as expected","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-j-s-o-n requests works as expected.html","searchKeys":["JSON requests works as expected","fun JSON requests works as expected()","com.hexagontk.http.test.examples.ClientTest.JSON requests works as expected"]},{"name":"fun Key stores contains the proper aliases()","description":"com.hexagontk.http.test.examples.HttpsTest.Key stores contains the proper aliases","location":"http/http_test/com.hexagontk.http.test.examples/-https-test/-key stores contains the proper aliases.html","searchKeys":["Key stores contains the proper aliases","fun Key stores contains the proper aliases()","com.hexagontk.http.test.examples.HttpsTest.Key stores contains the proper aliases"]},{"name":"fun List books contains all books IDs()","description":"com.hexagontk.http.test.examples.BooksTest.List books contains all books IDs","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-list books contains all books -i-ds.html","searchKeys":["List books contains all books IDs","fun List books contains all books IDs()","com.hexagontk.http.test.examples.BooksTest.List books contains all books IDs"]},{"name":"fun Not found resources return 404()","description":"com.hexagontk.http.test.examples.FilesTest.Not found resources return 404","location":"http/http_test/com.hexagontk.http.test.examples/-files-test/-not found resources return 404.html","searchKeys":["Not found resources return 404","fun Not found resources return 404()","com.hexagontk.http.test.examples.FilesTest.Not found resources return 404"]},{"name":"fun Not handled method returns 404()","description":"com.hexagontk.http.test.examples.BooksTest.Not handled method returns 404","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-not handled method returns 404.html","searchKeys":["Not handled method returns 404","fun Not handled method returns 404()","com.hexagontk.http.test.examples.BooksTest.Not handled method returns 404"]},{"name":"fun Parameters are separated from each other()","description":"com.hexagontk.http.test.examples.MultipartTest.Parameters are separated from each other","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-test/-parameters are separated from each other.html","searchKeys":["Parameters are separated from each other","fun Parameters are separated from each other()","com.hexagontk.http.test.examples.MultipartTest.Parameters are separated from each other"]},{"name":"fun Parameters are set properly()","description":"com.hexagontk.http.test.examples.ClientTest.Parameters are set properly","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-parameters are set properly.html","searchKeys":["Parameters are set properly","fun Parameters are set properly()","com.hexagontk.http.test.examples.ClientTest.Parameters are set properly"]},{"name":"fun Redirects are handled correctly correctly()","description":"com.hexagontk.http.test.examples.ClientTest.Redirects are handled correctly correctly","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-redirects are handled correctly correctly.html","searchKeys":["Redirects are handled correctly correctly","fun Redirects are handled correctly correctly()","com.hexagontk.http.test.examples.ClientTest.Redirects are handled correctly correctly"]},{"name":"fun Remove cookie deletes the given cookie()","description":"com.hexagontk.http.test.examples.CookiesTest.Remove cookie deletes the given cookie","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/-remove cookie deletes the given cookie.html","searchKeys":["Remove cookie deletes the given cookie","fun Remove cookie deletes the given cookie()","com.hexagontk.http.test.examples.CookiesTest.Remove cookie deletes the given cookie"]},{"name":"fun Remove not available cookie does not fail()","description":"com.hexagontk.http.test.examples.CookiesTest.Remove not available cookie does not fail","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/-remove not available cookie does not fail.html","searchKeys":["Remove not available cookie does not fail","fun Remove not available cookie does not fail()","com.hexagontk.http.test.examples.CookiesTest.Remove not available cookie does not fail"]},{"name":"fun Request HTTPS example()","description":"com.hexagontk.http.test.examples.ClientHttp2Test.Request HTTPS example","location":"http/http_test/com.hexagontk.http.test.examples/-client-http2-test/-request -h-t-t-p-s example.html","searchKeys":["Request HTTPS example","fun Request HTTPS example()","com.hexagontk.http.test.examples.ClientHttp2Test.Request HTTPS example"]},{"name":"fun Request HTTPS example()","description":"com.hexagontk.http.test.examples.ClientHttpsTest.Request HTTPS example","location":"http/http_test/com.hexagontk.http.test.examples/-client-https-test/-request -h-t-t-p-s example.html","searchKeys":["Request HTTPS example","fun Request HTTPS example()","com.hexagontk.http.test.examples.ClientHttpsTest.Request HTTPS example"]},{"name":"fun Request with invalid password returns 403()","description":"com.hexagontk.http.test.examples.FiltersTest.Request with invalid password returns 403","location":"http/http_test/com.hexagontk.http.test.examples/-filters-test/-request with invalid password returns 403.html","searchKeys":["Request with invalid password returns 403","fun Request with invalid password returns 403()","com.hexagontk.http.test.examples.FiltersTest.Request with invalid password returns 403"]},{"name":"fun Request with invalid user returns 403()","description":"com.hexagontk.http.test.examples.FiltersTest.Request with invalid user returns 403","location":"http/http_test/com.hexagontk.http.test.examples/-filters-test/-request with invalid user returns 403.html","searchKeys":["Request with invalid user returns 403","fun Request with invalid user returns 403()","com.hexagontk.http.test.examples.FiltersTest.Request with invalid user returns 403"]},{"name":"fun Request with not allowed origin is forbidden()","description":"com.hexagontk.http.test.examples.CorsTest.Request with not allowed origin is forbidden","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-request with not allowed origin is forbidden.html","searchKeys":["Request with not allowed origin is forbidden","fun Request with not allowed origin is forbidden()","com.hexagontk.http.test.examples.CorsTest.Request with not allowed origin is forbidden"]},{"name":"fun Request without authorization returns 401()","description":"com.hexagontk.http.test.examples.FiltersTest.Request without authorization returns 401","location":"http/http_test/com.hexagontk.http.test.examples/-filters-test/-request without authorization returns 401.html","searchKeys":["Request without authorization returns 401","fun Request without authorization returns 401()","com.hexagontk.http.test.examples.FiltersTest.Request without authorization returns 401"]},{"name":"fun Request without origin continues as non CORS()","description":"com.hexagontk.http.test.examples.CorsTest.Request without origin continues as non CORS","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-request without origin continues as non -c-o-r-s.html","searchKeys":["Request without origin continues as non CORS","fun Request without origin continues as non CORS()","com.hexagontk.http.test.examples.CorsTest.Request without origin continues as non CORS"]},{"name":"fun Requesting a folder with an existing file name returns 404()","description":"com.hexagontk.http.test.examples.FilesTest.Requesting a folder with an existing file name returns 404","location":"http/http_test/com.hexagontk.http.test.examples/-files-test/-requesting a folder with an existing file name returns 404.html","searchKeys":["Requesting a folder with an existing file name returns 404","fun Requesting a folder with an existing file name returns 404()","com.hexagontk.http.test.examples.FilesTest.Requesting a folder with an existing file name returns 404"]},{"name":"fun SSE requests get published events on the server()","description":"com.hexagontk.http.test.examples.SseTest.SSE requests get published events on the server","location":"http/http_test/com.hexagontk.http.test.examples/-sse-test/-s-s-e requests get published events on the server.html","searchKeys":["SSE requests get published events on the server","fun SSE requests get published events on the server()","com.hexagontk.http.test.examples.SseTest.SSE requests get published events on the server"]},{"name":"fun Sending files works properly()","description":"com.hexagontk.http.test.examples.MultipartTest.Sending files works properly","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-test/-sending files works properly.html","searchKeys":["Sending files works properly","fun Sending files works properly()","com.hexagontk.http.test.examples.MultipartTest.Sending files works properly"]},{"name":"fun Sending multi part content works properly()","description":"com.hexagontk.http.test.examples.MultipartTest.Sending multi part content works properly","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-test/-sending multi part content works properly.html","searchKeys":["Sending multi part content works properly","fun Sending multi part content works properly()","com.hexagontk.http.test.examples.MultipartTest.Sending multi part content works properly"]},{"name":"fun Serve HTTP2 works properly()","description":"com.hexagontk.http.test.examples.Http2Test.Serve HTTP2 works properly","location":"http/http_test/com.hexagontk.http.test.examples/-http2-test/-serve -h-t-t-p2 works properly.html","searchKeys":["Serve HTTP2 works properly","fun Serve HTTP2 works properly()","com.hexagontk.http.test.examples.Http2Test.Serve HTTP2 works properly"]},{"name":"fun Serve HTTPS example()","description":"com.hexagontk.http.test.examples.HttpsTest.Serve HTTPS example","location":"http/http_test/com.hexagontk.http.test.examples/-https-test/-serve -h-t-t-p-s example.html","searchKeys":["Serve HTTPS example","fun Serve HTTPS example()","com.hexagontk.http.test.examples.HttpsTest.Serve HTTPS example"]},{"name":"fun Serve HTTPS works properly()","description":"com.hexagontk.http.test.examples.HttpsTest.Serve HTTPS works properly","location":"http/http_test/com.hexagontk.http.test.examples/-https-test/-serve -h-t-t-p-s works properly.html","searchKeys":["Serve HTTPS works properly","fun Serve HTTPS works properly()","com.hexagontk.http.test.examples.HttpsTest.Serve HTTPS works properly"]},{"name":"fun Serve WS works properly()","description":"com.hexagontk.http.test.examples.WebSocketsTest.Serve WS works properly","location":"http/http_test/com.hexagontk.http.test.examples/-web-sockets-test/-serve -w-s works properly.html","searchKeys":["Serve WS works properly","fun Serve WS works properly()","com.hexagontk.http.test.examples.WebSocketsTest.Serve WS works properly"]},{"name":"fun Serve WSS over HTTP2 works properly()","description":"com.hexagontk.http.test.examples.WebSocketsTest.Serve WSS over HTTP2 works properly","location":"http/http_test/com.hexagontk.http.test.examples/-web-sockets-test/-serve -w-s-s over -h-t-t-p2 works properly.html","searchKeys":["Serve WSS over HTTP2 works properly","fun Serve WSS over HTTP2 works properly()","com.hexagontk.http.test.examples.WebSocketsTest.Serve WSS over HTTP2 works properly"]},{"name":"fun Serve WSS works properly()","description":"com.hexagontk.http.test.examples.WebSocketsTest.Serve WSS works properly","location":"http/http_test/com.hexagontk.http.test.examples/-web-sockets-test/-serve -w-s-s works properly.html","searchKeys":["Serve WSS works properly","fun Serve WSS works properly()","com.hexagontk.http.test.examples.WebSocketsTest.Serve WSS works properly"]},{"name":"fun Serve insecure HTTPS example()","description":"com.hexagontk.http.test.examples.HttpsTest.Serve insecure HTTPS example","location":"http/http_test/com.hexagontk.http.test.examples/-https-test/-serve insecure -h-t-t-p-s example.html","searchKeys":["Serve insecure HTTPS example","fun Serve insecure HTTPS example()","com.hexagontk.http.test.examples.HttpsTest.Serve insecure HTTPS example"]},{"name":"fun Simple CORS request with exposed headers()","description":"com.hexagontk.http.test.examples.CorsTest.Simple CORS request with exposed headers","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-simple -c-o-r-s request with exposed headers.html","searchKeys":["Simple CORS request with exposed headers","fun Simple CORS request with exposed headers()","com.hexagontk.http.test.examples.CorsTest.Simple CORS request with exposed headers"]},{"name":"fun Simple CORS request with not allowed method()","description":"com.hexagontk.http.test.examples.CorsTest.Simple CORS request with not allowed method","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-simple -c-o-r-s request with not allowed method.html","searchKeys":["Simple CORS request with not allowed method","fun Simple CORS request with not allowed method()","com.hexagontk.http.test.examples.CorsTest.Simple CORS request with not allowed method"]},{"name":"fun Simple CORS request()","description":"com.hexagontk.http.test.examples.CorsTest.Simple CORS request","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/-simple -c-o-r-s request.html","searchKeys":["Simple CORS request","fun Simple CORS request()","com.hexagontk.http.test.examples.CorsTest.Simple CORS request"]},{"name":"fun Strings are sent properly()","description":"com.hexagontk.http.test.examples.ClientTest.Strings are sent properly","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/-strings are sent properly.html","searchKeys":["Strings are sent properly","fun Strings are sent properly()","com.hexagontk.http.test.examples.ClientTest.Strings are sent properly"]},{"name":"fun Update book overrides existing book data()","description":"com.hexagontk.http.test.examples.BooksTest.Update book overrides existing book data","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-update book overrides existing book data.html","searchKeys":["Update book overrides existing book data","fun Update book overrides existing book data()","com.hexagontk.http.test.examples.BooksTest.Update book overrides existing book data"]},{"name":"fun Update not found book returns a 404()","description":"com.hexagontk.http.test.examples.BooksTest.Update not found book returns a 404","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-update not found book returns a 404.html","searchKeys":["Update not found book returns a 404","fun Update not found book returns a 404()","com.hexagontk.http.test.examples.BooksTest.Update not found book returns a 404"]},{"name":"fun Use ZIP encoding example()","description":"com.hexagontk.http.test.examples.ZipTest.Use ZIP encoding example","location":"http/http_test/com.hexagontk.http.test.examples/-zip-test/-use -z-i-p encoding example.html","searchKeys":["Use ZIP encoding example","fun Use ZIP encoding example()","com.hexagontk.http.test.examples.ZipTest.Use ZIP encoding example"]},{"name":"fun WebSockets client check start and stop states()","description":"com.hexagontk.http.test.examples.WebSocketsTest.WebSockets client check start and stop states","location":"http/http_test/com.hexagontk.http.test.examples/-web-sockets-test/-web-sockets client check start and stop states.html","searchKeys":["WebSockets client check start and stop states","fun WebSockets client check start and stop states()","com.hexagontk.http.test.examples.WebSocketsTest.WebSockets client check start and stop states"]},{"name":"fun WebSockets connections can be checked before session is created()","description":"com.hexagontk.http.test.examples.WebSocketsTest.WebSockets connections can be checked before session is created","location":"http/http_test/com.hexagontk.http.test.examples/-web-sockets-test/-web-sockets connections can be checked before session is created.html","searchKeys":["WebSockets connections can be checked before session is created","fun WebSockets connections can be checked before session is created()","com.hexagontk.http.test.examples.WebSocketsTest.WebSockets connections can be checked before session is created"]},{"name":"fun clearCookies()","description":"com.hexagontk.http.test.examples.CookiesTest.clearCookies","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/clear-cookies.html","searchKeys":["clearCookies","fun clearCookies()","com.hexagontk.http.test.examples.CookiesTest.clearCookies"]},{"name":"fun errors()","description":"com.hexagontk.http.test.examples.SamplesTest.errors","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/errors.html","searchKeys":["errors","fun errors()","com.hexagontk.http.test.examples.SamplesTest.errors"]},{"name":"fun files()","description":"com.hexagontk.http.test.examples.SamplesTest.files","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/files.html","searchKeys":["files","fun files()","com.hexagontk.http.test.examples.SamplesTest.files"]},{"name":"fun filters()","description":"com.hexagontk.http.test.examples.SamplesTest.filters","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/filters.html","searchKeys":["filters","fun filters()","com.hexagontk.http.test.examples.SamplesTest.filters"]},{"name":"fun mockRequest()","description":"com.hexagontk.http.test.examples.SamplesTest.mockRequest","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/mock-request.html","searchKeys":["mockRequest","fun mockRequest()","com.hexagontk.http.test.examples.SamplesTest.mockRequest"]},{"name":"fun nativeMac(): Boolean","description":"com.hexagontk.http.test.examples.ClientHttp2Test.nativeMac","location":"http/http_test/com.hexagontk.http.test.examples/-client-http2-test/native-mac.html","searchKeys":["nativeMac","fun nativeMac(): Boolean","com.hexagontk.http.test.examples.ClientHttp2Test.nativeMac"]},{"name":"fun nativeMac(): Boolean","description":"com.hexagontk.http.test.examples.ClientHttpsTest.nativeMac","location":"http/http_test/com.hexagontk.http.test.examples/-client-https-test/native-mac.html","searchKeys":["nativeMac","fun nativeMac(): Boolean","com.hexagontk.http.test.examples.ClientHttpsTest.nativeMac"]},{"name":"fun nativeMac(): Boolean","description":"com.hexagontk.http.test.examples.Http2Test.nativeMac","location":"http/http_test/com.hexagontk.http.test.examples/-http2-test/native-mac.html","searchKeys":["nativeMac","fun nativeMac(): Boolean","com.hexagontk.http.test.examples.Http2Test.nativeMac"]},{"name":"fun nativeMac(): Boolean","description":"com.hexagontk.http.test.examples.HttpsTest.nativeMac","location":"http/http_test/com.hexagontk.http.test.examples/-https-test/native-mac.html","searchKeys":["nativeMac","fun nativeMac(): Boolean","com.hexagontk.http.test.examples.HttpsTest.nativeMac"]},{"name":"fun resetHandler()","description":"com.hexagontk.http.test.examples.ClientCookiesTest.resetHandler","location":"http/http_test/com.hexagontk.http.test.examples/-client-cookies-test/reset-handler.html","searchKeys":["resetHandler","fun resetHandler()","com.hexagontk.http.test.examples.ClientCookiesTest.resetHandler"]},{"name":"fun resetHandler()","description":"com.hexagontk.http.test.examples.ClientHttp2Test.resetHandler","location":"http/http_test/com.hexagontk.http.test.examples/-client-http2-test/reset-handler.html","searchKeys":["resetHandler","fun resetHandler()","com.hexagontk.http.test.examples.ClientHttp2Test.resetHandler"]},{"name":"fun resetHandler()","description":"com.hexagontk.http.test.examples.ClientHttpsTest.resetHandler","location":"http/http_test/com.hexagontk.http.test.examples/-client-https-test/reset-handler.html","searchKeys":["resetHandler","fun resetHandler()","com.hexagontk.http.test.examples.ClientHttpsTest.resetHandler"]},{"name":"fun resetHandler()","description":"com.hexagontk.http.test.examples.ClientMultipartTest.resetHandler","location":"http/http_test/com.hexagontk.http.test.examples/-client-multipart-test/reset-handler.html","searchKeys":["resetHandler","fun resetHandler()","com.hexagontk.http.test.examples.ClientMultipartTest.resetHandler"]},{"name":"fun resetHandler()","description":"com.hexagontk.http.test.examples.ClientTest.resetHandler","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/reset-handler.html","searchKeys":["resetHandler","fun resetHandler()","com.hexagontk.http.test.examples.ClientTest.resetHandler"]},{"name":"fun routeGroups()","description":"com.hexagontk.http.test.examples.SamplesTest.routeGroups","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/route-groups.html","searchKeys":["routeGroups","fun routeGroups()","com.hexagontk.http.test.examples.SamplesTest.routeGroups"]},{"name":"fun routers()","description":"com.hexagontk.http.test.examples.SamplesTest.routers","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/routers.html","searchKeys":["routers","fun routers()","com.hexagontk.http.test.examples.SamplesTest.routers"]},{"name":"fun routesCreation()","description":"com.hexagontk.http.test.examples.SamplesTest.routesCreation","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/routes-creation.html","searchKeys":["routesCreation","fun routesCreation()","com.hexagontk.http.test.examples.SamplesTest.routesCreation"]},{"name":"fun serverCreation()","description":"com.hexagontk.http.test.examples.SamplesTest.serverCreation","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/server-creation.html","searchKeys":["serverCreation","fun serverCreation()","com.hexagontk.http.test.examples.SamplesTest.serverCreation"]},{"name":"fun serverNotImplemented()","description":"com.hexagontk.http.test.examples.examples.ServerTest.serverNotImplemented","location":"http/http_test/com.hexagontk.http.test.examples.examples/-server-test/server-not-implemented.html","searchKeys":["serverNotImplemented","fun serverNotImplemented()","com.hexagontk.http.test.examples.examples.ServerTest.serverNotImplemented"]},{"name":"fun serverOptions()","description":"com.hexagontk.http.test.examples.examples.ServerTest.serverOptions","location":"http/http_test/com.hexagontk.http.test.examples.examples/-server-test/server-options.html","searchKeys":["serverOptions","fun serverOptions()","com.hexagontk.http.test.examples.examples.ServerTest.serverOptions"]},{"name":"fun setUpSerializationFormats()","description":"com.hexagontk.http.test.examples.ClientCookiesTest.setUpSerializationFormats","location":"http/http_test/com.hexagontk.http.test.examples/-client-cookies-test/set-up-serialization-formats.html","searchKeys":["setUpSerializationFormats","fun setUpSerializationFormats()","com.hexagontk.http.test.examples.ClientCookiesTest.setUpSerializationFormats"]},{"name":"fun setUpSerializationFormats()","description":"com.hexagontk.http.test.examples.ClientHttp2Test.setUpSerializationFormats","location":"http/http_test/com.hexagontk.http.test.examples/-client-http2-test/set-up-serialization-formats.html","searchKeys":["setUpSerializationFormats","fun setUpSerializationFormats()","com.hexagontk.http.test.examples.ClientHttp2Test.setUpSerializationFormats"]},{"name":"fun setUpSerializationFormats()","description":"com.hexagontk.http.test.examples.ClientHttpsTest.setUpSerializationFormats","location":"http/http_test/com.hexagontk.http.test.examples/-client-https-test/set-up-serialization-formats.html","searchKeys":["setUpSerializationFormats","fun setUpSerializationFormats()","com.hexagontk.http.test.examples.ClientHttpsTest.setUpSerializationFormats"]},{"name":"fun setUpSerializationFormats()","description":"com.hexagontk.http.test.examples.ClientMultipartTest.setUpSerializationFormats","location":"http/http_test/com.hexagontk.http.test.examples/-client-multipart-test/set-up-serialization-formats.html","searchKeys":["setUpSerializationFormats","fun setUpSerializationFormats()","com.hexagontk.http.test.examples.ClientMultipartTest.setUpSerializationFormats"]},{"name":"fun setUpSerializationFormats()","description":"com.hexagontk.http.test.examples.ClientTest.setUpSerializationFormats","location":"http/http_test/com.hexagontk.http.test.examples/-client-test/set-up-serialization-formats.html","searchKeys":["setUpSerializationFormats","fun setUpSerializationFormats()","com.hexagontk.http.test.examples.ClientTest.setUpSerializationFormats"]},{"name":"fun startUp()","description":"com.hexagontk.http.test.BaseTest.startUp","location":"http/http_test/com.hexagontk.http.test/-base-test/start-up.html","searchKeys":["startUp","fun startUp()","com.hexagontk.http.test.BaseTest.startUp"]},{"name":"fun stop()","description":"com.hexagontk.http.test.examples.CookiesTest.stop","location":"http/http_test/com.hexagontk.http.test.examples/-cookies-test/stop.html","searchKeys":["stop","fun stop()","com.hexagontk.http.test.examples.CookiesTest.stop"]},{"name":"fun test()","description":"com.hexagontk.http.test.examples.SamplesTest.test","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/test.html","searchKeys":["test","fun test()","com.hexagontk.http.test.examples.SamplesTest.test"]},{"name":"open fun Form parameters are sent correctly()","description":"com.hexagontk.http.test.examples.ClientMultipartTest.Form parameters are sent correctly","location":"http/http_test/com.hexagontk.http.test.examples/-client-multipart-test/-form parameters are sent correctly.html","searchKeys":["Form parameters are sent correctly","open fun Form parameters are sent correctly()","com.hexagontk.http.test.examples.ClientMultipartTest.Form parameters are sent correctly"]},{"name":"open fun Use ZIP encoding without enabling the feature example()","description":"com.hexagontk.http.test.examples.ZipTest.Use ZIP encoding without enabling the feature example","location":"http/http_test/com.hexagontk.http.test.examples/-zip-test/-use -z-i-p encoding without enabling the feature example.html","searchKeys":["Use ZIP encoding without enabling the feature example","open fun Use ZIP encoding without enabling the feature example()","com.hexagontk.http.test.examples.ZipTest.Use ZIP encoding without enabling the feature example"]},{"name":"open fun callbacks()","description":"com.hexagontk.http.test.examples.MultipartSamplesTest.callbacks","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-samples-test/callbacks.html","searchKeys":["callbacks","open fun callbacks()","com.hexagontk.http.test.examples.MultipartSamplesTest.callbacks"]},{"name":"open fun callbacks()","description":"com.hexagontk.http.test.examples.SamplesTest.callbacks","location":"http/http_test/com.hexagontk.http.test.examples/-samples-test/callbacks.html","searchKeys":["callbacks","open fun callbacks()","com.hexagontk.http.test.examples.SamplesTest.callbacks"]},{"name":"val author: String","description":"com.hexagontk.http.test.examples.BooksTest.Book.author","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-book/author.html","searchKeys":["author","val author: String","com.hexagontk.http.test.examples.BooksTest.Book.author"]},{"name":"val clientAdapter: () -> HttpClientPort","description":"com.hexagontk.http.test.examples.MultipartSamplesTest.clientAdapter","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-samples-test/client-adapter.html","searchKeys":["clientAdapter","val clientAdapter: () -> HttpClientPort","com.hexagontk.http.test.examples.MultipartSamplesTest.clientAdapter"]},{"name":"val path: PathHandler","description":"com.hexagontk.http.test.examples.CorsTest.path","location":"http/http_test/com.hexagontk.http.test.examples/-cors-test/path.html","searchKeys":["path","val path: PathHandler","com.hexagontk.http.test.examples.CorsTest.path"]},{"name":"val serverAdapter: () -> HttpServerPort","description":"com.hexagontk.http.test.examples.MultipartSamplesTest.serverAdapter","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-samples-test/server-adapter.html","searchKeys":["serverAdapter","val serverAdapter: () -> HttpServerPort","com.hexagontk.http.test.examples.MultipartSamplesTest.serverAdapter"]},{"name":"val serverSettings: HttpServerSettings","description":"com.hexagontk.http.test.examples.MultipartSamplesTest.serverSettings","location":"http/http_test/com.hexagontk.http.test.examples/-multipart-samples-test/server-settings.html","searchKeys":["serverSettings","val serverSettings: HttpServerSettings","com.hexagontk.http.test.examples.MultipartSamplesTest.serverSettings"]},{"name":"val title: String","description":"com.hexagontk.http.test.examples.BooksTest.Book.title","location":"http/http_test/com.hexagontk.http.test.examples/-books-test/-book/title.html","searchKeys":["title","val title: String","com.hexagontk.http.test.examples.BooksTest.Book.title"]},{"name":"class NettyEpollHttpServer(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true) : NettyHttpServer","description":"com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer","location":"http/http_server_netty_epoll/com.hexagontk.http.server.netty.epoll/-netty-epoll-http-server/index.html","searchKeys":["NettyEpollHttpServer","class NettyEpollHttpServer(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true) : NettyHttpServer","com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer"]},{"name":"constructor()","description":"com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.NettyEpollHttpServer","location":"http/http_server_netty_epoll/com.hexagontk.http.server.netty.epoll/-netty-epoll-http-server/-netty-epoll-http-server.html","searchKeys":["NettyEpollHttpServer","constructor()","com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.NettyEpollHttpServer"]},{"name":"constructor(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true)","description":"com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.NettyEpollHttpServer","location":"http/http_server_netty_epoll/com.hexagontk.http.server.netty.epoll/-netty-epoll-http-server/-netty-epoll-http-server.html","searchKeys":["NettyEpollHttpServer","constructor(bossGroupThreads: Int = 1, workerGroupThreads: Int = 0, executorThreads: Int = Platform.cpuCount * 2, soBacklog: Int = 4 * 1_024, soReuseAddr: Boolean = true, soKeepAlive: Boolean = true, shutdownQuietSeconds: Long = 0, shutdownTimeoutSeconds: Long = 0, keepAliveHandler: Boolean = true, httpAggregatorHandler: Boolean = true, chunkedHandler: Boolean = true, enableWebsockets: Boolean = true)","com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.NettyEpollHttpServer"]},{"name":"open override fun groupSupplier(it: Int): MultithreadEventLoopGroup","description":"com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.groupSupplier","location":"http/http_server_netty_epoll/com.hexagontk.http.server.netty.epoll/-netty-epoll-http-server/group-supplier.html","searchKeys":["groupSupplier","open override fun groupSupplier(it: Int): MultithreadEventLoopGroup","com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.groupSupplier"]},{"name":"open override fun serverBootstrapSupplier(bossGroup: MultithreadEventLoopGroup, workerGroup: MultithreadEventLoopGroup): ServerBootstrap","description":"com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.serverBootstrapSupplier","location":"http/http_server_netty_epoll/com.hexagontk.http.server.netty.epoll/-netty-epoll-http-server/server-bootstrap-supplier.html","searchKeys":["serverBootstrapSupplier","open override fun serverBootstrapSupplier(bossGroup: MultithreadEventLoopGroup, workerGroup: MultithreadEventLoopGroup): ServerBootstrap","com.hexagontk.http.server.netty.epoll.NettyEpollHttpServer.serverBootstrapSupplier"]},{"name":"class FreeMarker : TemplatePort","description":"com.hexagontk.templates.freemarker.FreeMarker","location":"templates/templates_freemarker/com.hexagontk.templates.freemarker/-free-marker/index.html","searchKeys":["FreeMarker","class FreeMarker : TemplatePort","com.hexagontk.templates.freemarker.FreeMarker"]},{"name":"constructor()","description":"com.hexagontk.templates.freemarker.FreeMarker.FreeMarker","location":"templates/templates_freemarker/com.hexagontk.templates.freemarker/-free-marker/-free-marker.html","searchKeys":["FreeMarker","constructor()","com.hexagontk.templates.freemarker.FreeMarker.FreeMarker"]},{"name":"object AdapterTemplateLoader : URLTemplateLoader","description":"com.hexagontk.templates.freemarker.FreeMarker.AdapterTemplateLoader","location":"templates/templates_freemarker/com.hexagontk.templates.freemarker/-free-marker/-adapter-template-loader/index.html","searchKeys":["AdapterTemplateLoader","object AdapterTemplateLoader : URLTemplateLoader","com.hexagontk.templates.freemarker.FreeMarker.AdapterTemplateLoader"]},{"name":"object AdapterTemplateLookupStrategy : TemplateLookupStrategy","description":"com.hexagontk.templates.freemarker.FreeMarker.AdapterTemplateLookupStrategy","location":"templates/templates_freemarker/com.hexagontk.templates.freemarker/-free-marker/-adapter-template-lookup-strategy/index.html","searchKeys":["AdapterTemplateLookupStrategy","object AdapterTemplateLookupStrategy : TemplateLookupStrategy","com.hexagontk.templates.freemarker.FreeMarker.AdapterTemplateLookupStrategy"]},{"name":"open override fun lookup(ctx: TemplateLookupContext): TemplateLookupResult","description":"com.hexagontk.templates.freemarker.FreeMarker.AdapterTemplateLookupStrategy.lookup","location":"templates/templates_freemarker/com.hexagontk.templates.freemarker/-free-marker/-adapter-template-lookup-strategy/lookup.html","searchKeys":["lookup","open override fun lookup(ctx: TemplateLookupContext): TemplateLookupResult","com.hexagontk.templates.freemarker.FreeMarker.AdapterTemplateLookupStrategy.lookup"]},{"name":"open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.freemarker.FreeMarker.render","location":"templates/templates_freemarker/com.hexagontk.templates.freemarker/-free-marker/render.html","searchKeys":["render","open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.freemarker.FreeMarker.render"]},{"name":"open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.freemarker.FreeMarker.render","location":"templates/templates_freemarker/com.hexagontk.templates.freemarker/-free-marker/render.html","searchKeys":["render","open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.freemarker.FreeMarker.render"]},{"name":"abstract class SerializationTest","description":"com.hexagontk.serialization.test.SerializationTest","location":"serialization/serialization_test/com.hexagontk.serialization.test/-serialization-test/index.html","searchKeys":["SerializationTest","abstract class SerializationTest","com.hexagontk.serialization.test.SerializationTest"]},{"name":"abstract val format: SerializationFormat","description":"com.hexagontk.serialization.test.SerializationTest.format","location":"serialization/serialization_test/com.hexagontk.serialization.test/-serialization-test/format.html","searchKeys":["format","abstract val format: SerializationFormat","com.hexagontk.serialization.test.SerializationTest.format"]},{"name":"abstract val urls: List<URL>","description":"com.hexagontk.serialization.test.SerializationTest.urls","location":"serialization/serialization_test/com.hexagontk.serialization.test/-serialization-test/urls.html","searchKeys":["urls","abstract val urls: List<URL>","com.hexagontk.serialization.test.SerializationTest.urls"]},{"name":"constructor()","description":"com.hexagontk.serialization.test.SerializationTest.SerializationTest","location":"serialization/serialization_test/com.hexagontk.serialization.test/-serialization-test/-serialization-test.html","searchKeys":["SerializationTest","constructor()","com.hexagontk.serialization.test.SerializationTest.SerializationTest"]},{"name":"fun Parse URLs works ok()","description":"com.hexagontk.serialization.test.SerializationTest.Parse URLs works ok","location":"serialization/serialization_test/com.hexagontk.serialization.test/-serialization-test/-parse -u-r-ls works ok.html","searchKeys":["Parse URLs works ok","fun Parse URLs works ok()","com.hexagontk.serialization.test.SerializationTest.Parse URLs works ok"]},{"name":"fun nullFields()","description":"com.hexagontk.serialization.test.SerializationTest.nullFields","location":"serialization/serialization_test/com.hexagontk.serialization.test/-serialization-test/null-fields.html","searchKeys":["nullFields","fun nullFields()","com.hexagontk.serialization.test.SerializationTest.nullFields"]},{"name":"fun serializationUsage()","description":"com.hexagontk.serialization.test.SerializationTest.serializationUsage","location":"serialization/serialization_test/com.hexagontk.serialization.test/-serialization-test/serialization-usage.html","searchKeys":["serializationUsage","fun serializationUsage()","com.hexagontk.serialization.test.SerializationTest.serializationUsage"]},{"name":"COOKIES","description":"com.hexagontk.http.HttpFeature.COOKIES","location":"http/http/com.hexagontk.http/-http-feature/-c-o-o-k-i-e-s/index.html","searchKeys":["COOKIES","COOKIES","com.hexagontk.http.HttpFeature.COOKIES"]},{"name":"DELETE","description":"com.hexagontk.http.model.HttpMethod.DELETE","location":"http/http/com.hexagontk.http.model/-http-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","com.hexagontk.http.model.HttpMethod.DELETE"]},{"name":"GET","description":"com.hexagontk.http.model.HttpMethod.GET","location":"http/http/com.hexagontk.http.model/-http-method/-g-e-t/index.html","searchKeys":["GET","GET","com.hexagontk.http.model.HttpMethod.GET"]},{"name":"H2C","description":"com.hexagontk.http.model.HttpProtocol.H2C","location":"http/http/com.hexagontk.http.model/-http-protocol/-h2-c/index.html","searchKeys":["H2C","H2C","com.hexagontk.http.model.HttpProtocol.H2C"]},{"name":"HEAD","description":"com.hexagontk.http.model.HttpMethod.HEAD","location":"http/http/com.hexagontk.http.model/-http-method/-h-e-a-d/index.html","searchKeys":["HEAD","HEAD","com.hexagontk.http.model.HttpMethod.HEAD"]},{"name":"HTTP","description":"com.hexagontk.http.model.HttpProtocol.HTTP","location":"http/http/com.hexagontk.http.model/-http-protocol/-h-t-t-p/index.html","searchKeys":["HTTP","HTTP","com.hexagontk.http.model.HttpProtocol.HTTP"]},{"name":"HTTP2","description":"com.hexagontk.http.model.HttpProtocol.HTTP2","location":"http/http/com.hexagontk.http.model/-http-protocol/-h-t-t-p2/index.html","searchKeys":["HTTP2","HTTP2","com.hexagontk.http.model.HttpProtocol.HTTP2"]},{"name":"HTTPS","description":"com.hexagontk.http.model.HttpProtocol.HTTPS","location":"http/http/com.hexagontk.http.model/-http-protocol/-h-t-t-p-s/index.html","searchKeys":["HTTPS","HTTPS","com.hexagontk.http.model.HttpProtocol.HTTPS"]},{"name":"LAX","description":"com.hexagontk.http.model.CookieSameSite.LAX","location":"http/http/com.hexagontk.http.model/-cookie-same-site/-l-a-x/index.html","searchKeys":["LAX","LAX","com.hexagontk.http.model.CookieSameSite.LAX"]},{"name":"MULTIPART","description":"com.hexagontk.http.HttpFeature.MULTIPART","location":"http/http/com.hexagontk.http/-http-feature/-m-u-l-t-i-p-a-r-t/index.html","searchKeys":["MULTIPART","MULTIPART","com.hexagontk.http.HttpFeature.MULTIPART"]},{"name":"NONE","description":"com.hexagontk.http.model.CookieSameSite.NONE","location":"http/http/com.hexagontk.http.model/-cookie-same-site/-n-o-n-e/index.html","searchKeys":["NONE","NONE","com.hexagontk.http.model.CookieSameSite.NONE"]},{"name":"OPTIONS","description":"com.hexagontk.http.model.HttpMethod.OPTIONS","location":"http/http/com.hexagontk.http.model/-http-method/-o-p-t-i-o-n-s/index.html","searchKeys":["OPTIONS","OPTIONS","com.hexagontk.http.model.HttpMethod.OPTIONS"]},{"name":"PATCH","description":"com.hexagontk.http.model.HttpMethod.PATCH","location":"http/http/com.hexagontk.http.model/-http-method/-p-a-t-c-h/index.html","searchKeys":["PATCH","PATCH","com.hexagontk.http.model.HttpMethod.PATCH"]},{"name":"POST","description":"com.hexagontk.http.model.HttpMethod.POST","location":"http/http/com.hexagontk.http.model/-http-method/-p-o-s-t/index.html","searchKeys":["POST","POST","com.hexagontk.http.model.HttpMethod.POST"]},{"name":"PUT","description":"com.hexagontk.http.model.HttpMethod.PUT","location":"http/http/com.hexagontk.http.model/-http-method/-p-u-t/index.html","searchKeys":["PUT","PUT","com.hexagontk.http.model.HttpMethod.PUT"]},{"name":"SSE","description":"com.hexagontk.http.HttpFeature.SSE","location":"http/http/com.hexagontk.http/-http-feature/-s-s-e/index.html","searchKeys":["SSE","SSE","com.hexagontk.http.HttpFeature.SSE"]},{"name":"STRICT","description":"com.hexagontk.http.model.CookieSameSite.STRICT","location":"http/http/com.hexagontk.http.model/-cookie-same-site/-s-t-r-i-c-t/index.html","searchKeys":["STRICT","STRICT","com.hexagontk.http.model.CookieSameSite.STRICT"]},{"name":"TRACE","description":"com.hexagontk.http.model.HttpMethod.TRACE","location":"http/http/com.hexagontk.http.model/-http-method/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","com.hexagontk.http.model.HttpMethod.TRACE"]},{"name":"UNIX_DOMAIN_SOCKETS","description":"com.hexagontk.http.HttpFeature.UNIX_DOMAIN_SOCKETS","location":"http/http/com.hexagontk.http/-http-feature/-u-n-i-x_-d-o-m-a-i-n_-s-o-c-k-e-t-s/index.html","searchKeys":["UNIX_DOMAIN_SOCKETS","UNIX_DOMAIN_SOCKETS","com.hexagontk.http.HttpFeature.UNIX_DOMAIN_SOCKETS"]},{"name":"WEBSOCKETS","description":"com.hexagontk.http.HttpFeature.WEBSOCKETS","location":"http/http/com.hexagontk.http/-http-feature/-w-e-b-s-o-c-k-e-t-s/index.html","searchKeys":["WEBSOCKETS","WEBSOCKETS","com.hexagontk.http.HttpFeature.WEBSOCKETS"]},{"name":"ZIP","description":"com.hexagontk.http.HttpFeature.ZIP","location":"http/http/com.hexagontk.http/-http-feature/-z-i-p/index.html","searchKeys":["ZIP","ZIP","com.hexagontk.http.HttpFeature.ZIP"]},{"name":"abstract class HttpFields(val fields: List<HttpField>, keyMapper: (String) -> String) : List<HttpField> ","description":"com.hexagontk.http.model.HttpFields","location":"http/http/com.hexagontk.http.model/-http-fields/index.html","searchKeys":["HttpFields","abstract class HttpFields(val fields: List<HttpField>, keyMapper: (String) -> String) : List<HttpField> ","com.hexagontk.http.model.HttpFields"]},{"name":"abstract fun addPrefix(prefix: String?): PathPattern","description":"com.hexagontk.http.patterns.PathPattern.addPrefix","location":"http/http/com.hexagontk.http.patterns/-path-pattern/add-prefix.html","searchKeys":["addPrefix","abstract fun addPrefix(prefix: String?): PathPattern","com.hexagontk.http.patterns.PathPattern.addPrefix"]},{"name":"abstract fun close(status: Int = NORMAL, reason: String = \"\")","description":"com.hexagontk.http.model.ws.WsSession.close","location":"http/http/com.hexagontk.http.model.ws/-ws-session/close.html","searchKeys":["close","abstract fun close(status: Int = NORMAL, reason: String = \"\")","com.hexagontk.http.model.ws.WsSession.close"]},{"name":"abstract fun extractParameters(requestUrl: String): Map<String, String>","description":"com.hexagontk.http.patterns.PathPattern.extractParameters","location":"http/http/com.hexagontk.http.patterns/-path-pattern/extract-parameters.html","searchKeys":["extractParameters","abstract fun extractParameters(requestUrl: String): Map<String, String>","com.hexagontk.http.patterns.PathPattern.extractParameters"]},{"name":"abstract fun matches(requestUri: String): Boolean","description":"com.hexagontk.http.patterns.PathPattern.matches","location":"http/http/com.hexagontk.http.patterns/-path-pattern/matches.html","searchKeys":["matches","abstract fun matches(requestUri: String): Boolean","com.hexagontk.http.patterns.PathPattern.matches"]},{"name":"abstract fun ping(data: ByteArray)","description":"com.hexagontk.http.model.ws.WsSession.ping","location":"http/http/com.hexagontk.http.model.ws/-ws-session/ping.html","searchKeys":["ping","abstract fun ping(data: ByteArray)","com.hexagontk.http.model.ws.WsSession.ping"]},{"name":"abstract fun pong(data: ByteArray)","description":"com.hexagontk.http.model.ws.WsSession.pong","location":"http/http/com.hexagontk.http.model.ws/-ws-session/pong.html","searchKeys":["pong","abstract fun pong(data: ByteArray)","com.hexagontk.http.model.ws.WsSession.pong"]},{"name":"abstract fun send(data: ByteArray)","description":"com.hexagontk.http.model.ws.WsSession.send","location":"http/http/com.hexagontk.http.model.ws/-ws-session/send.html","searchKeys":["send","abstract fun send(data: ByteArray)","com.hexagontk.http.model.ws.WsSession.send"]},{"name":"abstract fun send(text: String)","description":"com.hexagontk.http.model.ws.WsSession.send","location":"http/http/com.hexagontk.http.model.ws/-ws-session/send.html","searchKeys":["send","abstract fun send(text: String)","com.hexagontk.http.model.ws.WsSession.send"]},{"name":"abstract fun with(body: Any = this.body, headers: Headers = this.headers, contentType: ContentType? = this.contentType, method: HttpMethod = this.method, protocol: HttpProtocol = this.protocol, host: String = this.host, port: Int = this.port, path: String = this.path, queryParameters: Parameters = this.queryParameters, parts: List<HttpPart> = this.parts, formParameters: Parameters = this.formParameters, cookies: List<Cookie> = this.cookies, accept: List<ContentType> = this.accept, authorization: Authorization? = this.authorization, certificateChain: List<X509Certificate> = this.certificateChain, pathPattern: PathPattern? = this.pathPattern, pathParameters: Map<String, Any> = this.pathParameters): HttpRequestPort","description":"com.hexagontk.http.model.HttpRequestPort.with","location":"http/http/com.hexagontk.http.model/-http-request-port/with.html","searchKeys":["with","abstract fun with(body: Any = this.body, headers: Headers = this.headers, contentType: ContentType? = this.contentType, method: HttpMethod = this.method, protocol: HttpProtocol = this.protocol, host: String = this.host, port: Int = this.port, path: String = this.path, queryParameters: Parameters = this.queryParameters, parts: List<HttpPart> = this.parts, formParameters: Parameters = this.formParameters, cookies: List<Cookie> = this.cookies, accept: List<ContentType> = this.accept, authorization: Authorization? = this.authorization, certificateChain: List<X509Certificate> = this.certificateChain, pathPattern: PathPattern? = this.pathPattern, pathParameters: Map<String, Any> = this.pathParameters): HttpRequestPort","com.hexagontk.http.model.HttpRequestPort.with"]},{"name":"abstract fun with(status: Int = this.status, body: Any = this.body, headers: Headers = this.headers, contentType: ContentType? = this.contentType, cookies: List<Cookie> = this.cookies, onConnect: WsSession.() -> Unit = this.onConnect, onBinary: WsSession.(data: ByteArray) -> Unit = this.onBinary, onText: WsSession.(text: String) -> Unit = this.onText, onPing: WsSession.(data: ByteArray) -> Unit = this.onPing, onPong: WsSession.(data: ByteArray) -> Unit = this.onPong, onClose: WsSession.(status: Int, reason: String) -> Unit = this.onClose): HttpResponsePort","description":"com.hexagontk.http.model.HttpResponsePort.with","location":"http/http/com.hexagontk.http.model/-http-response-port/with.html","searchKeys":["with","abstract fun with(status: Int = this.status, body: Any = this.body, headers: Headers = this.headers, contentType: ContentType? = this.contentType, cookies: List<Cookie> = this.cookies, onConnect: WsSession.() -> Unit = this.onConnect, onBinary: WsSession.(data: ByteArray) -> Unit = this.onBinary, onText: WsSession.(text: String) -> Unit = this.onText, onPing: WsSession.(data: ByteArray) -> Unit = this.onPing, onPong: WsSession.(data: ByteArray) -> Unit = this.onPong, onClose: WsSession.(status: Int, reason: String) -> Unit = this.onClose): HttpResponsePort","com.hexagontk.http.model.HttpResponsePort.with"]},{"name":"abstract val accept: List<ContentType>","description":"com.hexagontk.http.model.HttpRequestPort.accept","location":"http/http/com.hexagontk.http.model/-http-request-port/accept.html","searchKeys":["accept","abstract val accept: List<ContentType>","com.hexagontk.http.model.HttpRequestPort.accept"]},{"name":"abstract val attributes: Map<*, *>","description":"com.hexagontk.http.model.ws.WsSession.attributes","location":"http/http/com.hexagontk.http.model.ws/-ws-session/attributes.html","searchKeys":["attributes","abstract val attributes: Map<*, *>","com.hexagontk.http.model.ws.WsSession.attributes"]},{"name":"abstract val body: Any","description":"com.hexagontk.http.model.HttpBase.body","location":"http/http/com.hexagontk.http.model/-http-base/body.html","searchKeys":["body","abstract val body: Any","com.hexagontk.http.model.HttpBase.body"]},{"name":"abstract val certificateChain: List<X509Certificate>","description":"com.hexagontk.http.model.HttpRequestPort.certificateChain","location":"http/http/com.hexagontk.http.model/-http-request-port/certificate-chain.html","searchKeys":["certificateChain","abstract val certificateChain: List<X509Certificate>","com.hexagontk.http.model.HttpRequestPort.certificateChain"]},{"name":"abstract val contentLength: Long","description":"com.hexagontk.http.model.HttpRequestPort.contentLength","location":"http/http/com.hexagontk.http.model/-http-request-port/content-length.html","searchKeys":["contentLength","abstract val contentLength: Long","com.hexagontk.http.model.HttpRequestPort.contentLength"]},{"name":"abstract val contentLength: Long","description":"com.hexagontk.http.model.HttpResponsePort.contentLength","location":"http/http/com.hexagontk.http.model/-http-response-port/content-length.html","searchKeys":["contentLength","abstract val contentLength: Long","com.hexagontk.http.model.HttpResponsePort.contentLength"]},{"name":"abstract val contentType: ContentType?","description":"com.hexagontk.http.model.HttpBase.contentType","location":"http/http/com.hexagontk.http.model/-http-base/content-type.html","searchKeys":["contentType","abstract val contentType: ContentType?","com.hexagontk.http.model.HttpBase.contentType"]},{"name":"abstract val cookies: List<Cookie>","description":"com.hexagontk.http.model.HttpMessage.cookies","location":"http/http/com.hexagontk.http.model/-http-message/cookies.html","searchKeys":["cookies","abstract val cookies: List<Cookie>","com.hexagontk.http.model.HttpMessage.cookies"]},{"name":"abstract val exception: Exception?","description":"com.hexagontk.http.model.ws.WsSession.exception","location":"http/http/com.hexagontk.http.model.ws/-ws-session/exception.html","searchKeys":["exception","abstract val exception: Exception?","com.hexagontk.http.model.ws.WsSession.exception"]},{"name":"abstract val formParameters: Parameters","description":"com.hexagontk.http.model.HttpRequestPort.formParameters","location":"http/http/com.hexagontk.http.model/-http-request-port/form-parameters.html","searchKeys":["formParameters","abstract val formParameters: Parameters","com.hexagontk.http.model.HttpRequestPort.formParameters"]},{"name":"abstract val headers: Headers","description":"com.hexagontk.http.model.HttpBase.headers","location":"http/http/com.hexagontk.http.model/-http-base/headers.html","searchKeys":["headers","abstract val headers: Headers","com.hexagontk.http.model.HttpBase.headers"]},{"name":"abstract val host: String","description":"com.hexagontk.http.model.HttpRequestPort.host","location":"http/http/com.hexagontk.http.model/-http-request-port/host.html","searchKeys":["host","abstract val host: String","com.hexagontk.http.model.HttpRequestPort.host"]},{"name":"abstract val method: HttpMethod","description":"com.hexagontk.http.model.HttpRequestPort.method","location":"http/http/com.hexagontk.http.model/-http-request-port/method.html","searchKeys":["method","abstract val method: HttpMethod","com.hexagontk.http.model.HttpRequestPort.method"]},{"name":"abstract val name: String","description":"com.hexagontk.http.model.HttpField.name","location":"http/http/com.hexagontk.http.model/-http-field/name.html","searchKeys":["name","abstract val name: String","com.hexagontk.http.model.HttpField.name"]},{"name":"abstract val onBinary: WsSession.(data: ByteArray) -> Unit","description":"com.hexagontk.http.model.HttpResponsePort.onBinary","location":"http/http/com.hexagontk.http.model/-http-response-port/on-binary.html","searchKeys":["onBinary","abstract val onBinary: WsSession.(data: ByteArray) -> Unit","com.hexagontk.http.model.HttpResponsePort.onBinary"]},{"name":"abstract val onClose: WsSession.(status: Int, reason: String) -> Unit","description":"com.hexagontk.http.model.HttpResponsePort.onClose","location":"http/http/com.hexagontk.http.model/-http-response-port/on-close.html","searchKeys":["onClose","abstract val onClose: WsSession.(status: Int, reason: String) -> Unit","com.hexagontk.http.model.HttpResponsePort.onClose"]},{"name":"abstract val onConnect: WsSession.() -> Unit","description":"com.hexagontk.http.model.HttpResponsePort.onConnect","location":"http/http/com.hexagontk.http.model/-http-response-port/on-connect.html","searchKeys":["onConnect","abstract val onConnect: WsSession.() -> Unit","com.hexagontk.http.model.HttpResponsePort.onConnect"]},{"name":"abstract val onPing: WsSession.(data: ByteArray) -> Unit","description":"com.hexagontk.http.model.HttpResponsePort.onPing","location":"http/http/com.hexagontk.http.model/-http-response-port/on-ping.html","searchKeys":["onPing","abstract val onPing: WsSession.(data: ByteArray) -> Unit","com.hexagontk.http.model.HttpResponsePort.onPing"]},{"name":"abstract val onPong: WsSession.(data: ByteArray) -> Unit","description":"com.hexagontk.http.model.HttpResponsePort.onPong","location":"http/http/com.hexagontk.http.model/-http-response-port/on-pong.html","searchKeys":["onPong","abstract val onPong: WsSession.(data: ByteArray) -> Unit","com.hexagontk.http.model.HttpResponsePort.onPong"]},{"name":"abstract val onText: WsSession.(text: String) -> Unit","description":"com.hexagontk.http.model.HttpResponsePort.onText","location":"http/http/com.hexagontk.http.model/-http-response-port/on-text.html","searchKeys":["onText","abstract val onText: WsSession.(text: String) -> Unit","com.hexagontk.http.model.HttpResponsePort.onText"]},{"name":"abstract val parts: List<HttpPart>","description":"com.hexagontk.http.model.HttpRequestPort.parts","location":"http/http/com.hexagontk.http.model/-http-request-port/parts.html","searchKeys":["parts","abstract val parts: List<HttpPart>","com.hexagontk.http.model.HttpRequestPort.parts"]},{"name":"abstract val path: String","description":"com.hexagontk.http.model.HttpRequestPort.path","location":"http/http/com.hexagontk.http.model/-http-request-port/path.html","searchKeys":["path","abstract val path: String","com.hexagontk.http.model.HttpRequestPort.path"]},{"name":"abstract val pathParameters: Map<String, Any>","description":"com.hexagontk.http.model.HttpRequestPort.pathParameters","location":"http/http/com.hexagontk.http.model/-http-request-port/path-parameters.html","searchKeys":["pathParameters","abstract val pathParameters: Map<String, Any>","com.hexagontk.http.model.HttpRequestPort.pathParameters"]},{"name":"abstract val pathParameters: Map<String, String>","description":"com.hexagontk.http.model.ws.WsSession.pathParameters","location":"http/http/com.hexagontk.http.model.ws/-ws-session/path-parameters.html","searchKeys":["pathParameters","abstract val pathParameters: Map<String, String>","com.hexagontk.http.model.ws.WsSession.pathParameters"]},{"name":"abstract val pathPattern: PathPattern?","description":"com.hexagontk.http.model.HttpRequestPort.pathPattern","location":"http/http/com.hexagontk.http.model/-http-request-port/path-pattern.html","searchKeys":["pathPattern","abstract val pathPattern: PathPattern?","com.hexagontk.http.model.HttpRequestPort.pathPattern"]},{"name":"abstract val pattern: String","description":"com.hexagontk.http.patterns.PathPattern.pattern","location":"http/http/com.hexagontk.http.patterns/-path-pattern/pattern.html","searchKeys":["pattern","abstract val pattern: String","com.hexagontk.http.patterns.PathPattern.pattern"]},{"name":"abstract val port: Int","description":"com.hexagontk.http.model.HttpRequestPort.port","location":"http/http/com.hexagontk.http.model/-http-request-port/port.html","searchKeys":["port","abstract val port: Int","com.hexagontk.http.model.HttpRequestPort.port"]},{"name":"abstract val prefix: Boolean","description":"com.hexagontk.http.patterns.PathPattern.prefix","location":"http/http/com.hexagontk.http.patterns/-path-pattern/prefix.html","searchKeys":["prefix","abstract val prefix: Boolean","com.hexagontk.http.patterns.PathPattern.prefix"]},{"name":"abstract val protocol: HttpProtocol","description":"com.hexagontk.http.model.HttpRequestPort.protocol","location":"http/http/com.hexagontk.http.model/-http-request-port/protocol.html","searchKeys":["protocol","abstract val protocol: HttpProtocol","com.hexagontk.http.model.HttpRequestPort.protocol"]},{"name":"abstract val queryParameters: Parameters","description":"com.hexagontk.http.model.HttpRequestPort.queryParameters","location":"http/http/com.hexagontk.http.model/-http-request-port/query-parameters.html","searchKeys":["queryParameters","abstract val queryParameters: Parameters","com.hexagontk.http.model.HttpRequestPort.queryParameters"]},{"name":"abstract val reason: String","description":"com.hexagontk.http.model.HttpResponsePort.reason","location":"http/http/com.hexagontk.http.model/-http-response-port/reason.html","searchKeys":["reason","abstract val reason: String","com.hexagontk.http.model.HttpResponsePort.reason"]},{"name":"abstract val request: HttpRequestPort","description":"com.hexagontk.http.model.ws.WsSession.request","location":"http/http/com.hexagontk.http.model.ws/-ws-session/request.html","searchKeys":["request","abstract val request: HttpRequestPort","com.hexagontk.http.model.ws.WsSession.request"]},{"name":"abstract val status: Int","description":"com.hexagontk.http.model.HttpResponsePort.status","location":"http/http/com.hexagontk.http.model/-http-response-port/status.html","searchKeys":["status","abstract val status: Int","com.hexagontk.http.model.HttpResponsePort.status"]},{"name":"abstract val text: String","description":"com.hexagontk.http.model.HttpField.text","location":"http/http/com.hexagontk.http.model/-http-field/text.html","searchKeys":["text","abstract val text: String","com.hexagontk.http.model.HttpField.text"]},{"name":"abstract val uri: URI","description":"com.hexagontk.http.model.ws.WsSession.uri","location":"http/http/com.hexagontk.http.model.ws/-ws-session/uri.html","searchKeys":["uri","abstract val uri: URI","com.hexagontk.http.model.ws.WsSession.uri"]},{"name":"abstract val value: Any?","description":"com.hexagontk.http.model.HttpField.value","location":"http/http/com.hexagontk.http.model/-http-field/value.html","searchKeys":["value","abstract val value: Any?","com.hexagontk.http.model.HttpField.value"]},{"name":"class Authorization(val type: String, val body: String) : HttpField","description":"com.hexagontk.http.model.Authorization","location":"http/http/com.hexagontk.http.model/-authorization/index.html","searchKeys":["Authorization","class Authorization(val type: String, val body: String) : HttpField","com.hexagontk.http.model.Authorization"]},{"name":"class ContentType(val mediaType: MediaType, val boundary: String? = null, val charset: Charset? = null, val q: Double? = null) : HttpField","description":"com.hexagontk.http.model.ContentType","location":"http/http/com.hexagontk.http.model/-content-type/index.html","searchKeys":["ContentType","class ContentType(val mediaType: MediaType, val boundary: String? = null, val charset: Charset? = null, val q: Double? = null) : HttpField","com.hexagontk.http.model.ContentType"]},{"name":"class Cookie(val name: String, val value: String = \"\", val maxAge: Long = -1, val secure: Boolean = false, val path: String = \"/\", val httpOnly: Boolean = false, val domain: String? = null, val sameSite: CookieSameSite? = null, val expires: Instant? = null)","description":"com.hexagontk.http.model.Cookie","location":"http/http/com.hexagontk.http.model/-cookie/index.html","searchKeys":["Cookie","class Cookie(val name: String, val value: String = \"\", val maxAge: Long = -1, val secure: Boolean = false, val path: String = \"/\", val httpOnly: Boolean = false, val domain: String? = null, val sameSite: CookieSameSite? = null, val expires: Instant? = null)","com.hexagontk.http.model.Cookie"]},{"name":"class Field(val name: String, val value: Any? = null) : HttpField","description":"com.hexagontk.http.model.Field","location":"http/http/com.hexagontk.http.model/-field/index.html","searchKeys":["Field","class Field(val name: String, val value: Any? = null) : HttpField","com.hexagontk.http.model.Field"]},{"name":"class Headers(val fields: List<HttpField>) : HttpFields","description":"com.hexagontk.http.model.Headers","location":"http/http/com.hexagontk.http.model/-headers/index.html","searchKeys":["Headers","class Headers(val fields: List<HttpField>) : HttpFields","com.hexagontk.http.model.Headers"]},{"name":"class HttpCall(var request: HttpRequestPort = HttpRequest(), var response: HttpResponsePort = HttpResponse())","description":"com.hexagontk.http.model.HttpCall","location":"http/http/com.hexagontk.http.model/-http-call/index.html","searchKeys":["HttpCall","class HttpCall(var request: HttpRequestPort = HttpRequest(), var response: HttpResponsePort = HttpResponse())","com.hexagontk.http.model.HttpCall"]},{"name":"class HttpPart(val name: String, val body: Any, val headers: Headers = Headers(), val contentType: ContentType? = null, val size: Long = -1L, val submittedFileName: String? = null) : HttpBase","description":"com.hexagontk.http.model.HttpPart","location":"http/http/com.hexagontk.http.model/-http-part/index.html","searchKeys":["HttpPart","class HttpPart(val name: String, val body: Any, val headers: Headers = Headers(), val contentType: ContentType? = null, val size: Long = -1L, val submittedFileName: String? = null) : HttpBase","com.hexagontk.http.model.HttpPart"]},{"name":"class HttpRequest(val method: HttpMethod = GET, val protocol: HttpProtocol = HTTP, val host: String = \"localhost\", val port: Int = 80, val path: String = \"\", val queryParameters: Parameters = Parameters(), val headers: Headers = Headers(), val body: Any = \"\", val parts: List<HttpPart> = emptyList(), val formParameters: Parameters = Parameters(), val cookies: List<Cookie> = emptyList(), val contentType: ContentType? = null, val certificateChain: List<X509Certificate> = emptyList(), val accept: List<ContentType> = emptyList(), val contentLength: Long = -1L, val authorization: Authorization? = null, val pathPattern: PathPattern? = null, val pathParameters: Map<String, Any> = emptyMap()) : HttpRequestPort","description":"com.hexagontk.http.model.HttpRequest","location":"http/http/com.hexagontk.http.model/-http-request/index.html","searchKeys":["HttpRequest","class HttpRequest(val method: HttpMethod = GET, val protocol: HttpProtocol = HTTP, val host: String = \"localhost\", val port: Int = 80, val path: String = \"\", val queryParameters: Parameters = Parameters(), val headers: Headers = Headers(), val body: Any = \"\", val parts: List<HttpPart> = emptyList(), val formParameters: Parameters = Parameters(), val cookies: List<Cookie> = emptyList(), val contentType: ContentType? = null, val certificateChain: List<X509Certificate> = emptyList(), val accept: List<ContentType> = emptyList(), val contentLength: Long = -1L, val authorization: Authorization? = null, val pathPattern: PathPattern? = null, val pathParameters: Map<String, Any> = emptyMap()) : HttpRequestPort","com.hexagontk.http.model.HttpRequest"]},{"name":"class HttpResponse(val body: Any = \"\", val headers: Headers = Headers(), val contentType: ContentType? = null, val cookies: List<Cookie> = emptyList(), val status: Int = NOT_FOUND_404, val reason: String = \"\", val contentLength: Long = -1L, val onConnect: WsSession.() -> Unit = {}, val onBinary: WsSession.(data: ByteArray) -> Unit = {}, val onText: WsSession.(text: String) -> Unit = {}, val onPing: WsSession.(data: ByteArray) -> Unit = {}, val onPong: WsSession.(data: ByteArray) -> Unit = {}, val onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> }) : HttpResponsePort","description":"com.hexagontk.http.model.HttpResponse","location":"http/http/com.hexagontk.http.model/-http-response/index.html","searchKeys":["HttpResponse","class HttpResponse(val body: Any = \"\", val headers: Headers = Headers(), val contentType: ContentType? = null, val cookies: List<Cookie> = emptyList(), val status: Int = NOT_FOUND_404, val reason: String = \"\", val contentLength: Long = -1L, val onConnect: WsSession.() -> Unit = {}, val onBinary: WsSession.(data: ByteArray) -> Unit = {}, val onText: WsSession.(text: String) -> Unit = {}, val onPing: WsSession.(data: ByteArray) -> Unit = {}, val onPong: WsSession.(data: ByteArray) -> Unit = {}, val onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> }) : HttpResponsePort","com.hexagontk.http.model.HttpResponse"]},{"name":"class LiteralPathPattern(val pattern: String = \"\", val prefix: Boolean = false) : PathPattern","description":"com.hexagontk.http.patterns.LiteralPathPattern","location":"http/http/com.hexagontk.http.patterns/-literal-path-pattern/index.html","searchKeys":["LiteralPathPattern","class LiteralPathPattern(val pattern: String = \"\", val prefix: Boolean = false) : PathPattern","com.hexagontk.http.patterns.LiteralPathPattern"]},{"name":"class Parameters(val fields: List<HttpField>) : HttpFields","description":"com.hexagontk.http.model.Parameters","location":"http/http/com.hexagontk.http.model/-parameters/index.html","searchKeys":["Parameters","class Parameters(val fields: List<HttpField>) : HttpFields","com.hexagontk.http.model.Parameters"]},{"name":"class RegexPathPattern(regex: Regex) : PathPattern","description":"com.hexagontk.http.patterns.RegexPathPattern","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/index.html","searchKeys":["RegexPathPattern","class RegexPathPattern(regex: Regex) : PathPattern","com.hexagontk.http.patterns.RegexPathPattern"]},{"name":"class ServerEvent(val event: String? = null, val data: String? = null, val id: String? = null, val retry: Long? = null)","description":"com.hexagontk.http.model.ServerEvent","location":"http/http/com.hexagontk.http.model/-server-event/index.html","searchKeys":["ServerEvent","class ServerEvent(val event: String? = null, val data: String? = null, val id: String? = null, val retry: Long? = null)","com.hexagontk.http.model.ServerEvent"]},{"name":"class SslSettings(val keyStore: URL? = null, val keyStorePassword: String = \"\", val trustStore: URL? = null, val trustStorePassword: String = \"\", val clientAuth: Boolean = false)","description":"com.hexagontk.http.SslSettings","location":"http/http/com.hexagontk.http/-ssl-settings/index.html","searchKeys":["SslSettings","class SslSettings(val keyStore: URL? = null, val keyStorePassword: String = \"\", val trustStore: URL? = null, val trustStorePassword: String = \"\", val clientAuth: Boolean = false)","com.hexagontk.http.SslSettings"]},{"name":"class TemplatePathPattern(val pattern: String, val prefix: Boolean = false) : PathPattern","description":"com.hexagontk.http.patterns.TemplatePathPattern","location":"http/http/com.hexagontk.http.patterns/-template-path-pattern/index.html","searchKeys":["TemplatePathPattern","class TemplatePathPattern(val pattern: String, val prefix: Boolean = false) : PathPattern","com.hexagontk.http.patterns.TemplatePathPattern"]},{"name":"class WildcardPathPattern(val prefix: Boolean = false) : PathPattern","description":"com.hexagontk.http.patterns.WildcardPathPattern","location":"http/http/com.hexagontk.http.patterns/-wildcard-path-pattern/index.html","searchKeys":["WildcardPathPattern","class WildcardPathPattern(val prefix: Boolean = false) : PathPattern","com.hexagontk.http.patterns.WildcardPathPattern"]},{"name":"const val ABNORMAL: Int","description":"com.hexagontk.http.model.ws.ABNORMAL","location":"http/http/com.hexagontk.http.model.ws/-a-b-n-o-r-m-a-l.html","searchKeys":["ABNORMAL","const val ABNORMAL: Int","com.hexagontk.http.model.ws.ABNORMAL"]},{"name":"const val ACCEPTED_202: Int = 202","description":"com.hexagontk.http.model.ACCEPTED_202","location":"http/http/com.hexagontk.http.model/-a-c-c-e-p-t-e-d_202.html","searchKeys":["ACCEPTED_202","const val ACCEPTED_202: Int = 202","com.hexagontk.http.model.ACCEPTED_202"]},{"name":"const val ALREADY_REPORTED_208: Int = 208","description":"com.hexagontk.http.model.ALREADY_REPORTED_208","location":"http/http/com.hexagontk.http.model/-a-l-r-e-a-d-y_-r-e-p-o-r-t-e-d_208.html","searchKeys":["ALREADY_REPORTED_208","const val ALREADY_REPORTED_208: Int = 208","com.hexagontk.http.model.ALREADY_REPORTED_208"]},{"name":"const val BAD_DATA: Int = 1003","description":"com.hexagontk.http.model.ws.BAD_DATA","location":"http/http/com.hexagontk.http.model.ws/-b-a-d_-d-a-t-a.html","searchKeys":["BAD_DATA","const val BAD_DATA: Int = 1003","com.hexagontk.http.model.ws.BAD_DATA"]},{"name":"const val BAD_GATEWAY_502: Int = 502","description":"com.hexagontk.http.model.BAD_GATEWAY_502","location":"http/http/com.hexagontk.http.model/-b-a-d_-g-a-t-e-w-a-y_502.html","searchKeys":["BAD_GATEWAY_502","const val BAD_GATEWAY_502: Int = 502","com.hexagontk.http.model.BAD_GATEWAY_502"]},{"name":"const val BAD_PAYLOAD: Int = 1007","description":"com.hexagontk.http.model.ws.BAD_PAYLOAD","location":"http/http/com.hexagontk.http.model.ws/-b-a-d_-p-a-y-l-o-a-d.html","searchKeys":["BAD_PAYLOAD","const val BAD_PAYLOAD: Int = 1007","com.hexagontk.http.model.ws.BAD_PAYLOAD"]},{"name":"const val BAD_REQUEST_400: Int = 400","description":"com.hexagontk.http.model.BAD_REQUEST_400","location":"http/http/com.hexagontk.http.model/-b-a-d_-r-e-q-u-e-s-t_400.html","searchKeys":["BAD_REQUEST_400","const val BAD_REQUEST_400: Int = 400","com.hexagontk.http.model.BAD_REQUEST_400"]},{"name":"const val CONFLICT_409: Int = 409","description":"com.hexagontk.http.model.CONFLICT_409","location":"http/http/com.hexagontk.http.model/-c-o-n-f-l-i-c-t_409.html","searchKeys":["CONFLICT_409","const val CONFLICT_409: Int = 409","com.hexagontk.http.model.CONFLICT_409"]},{"name":"const val CONTENT_TOO_LARGE_413: Int = 413","description":"com.hexagontk.http.model.CONTENT_TOO_LARGE_413","location":"http/http/com.hexagontk.http.model/-c-o-n-t-e-n-t_-t-o-o_-l-a-r-g-e_413.html","searchKeys":["CONTENT_TOO_LARGE_413","const val CONTENT_TOO_LARGE_413: Int = 413","com.hexagontk.http.model.CONTENT_TOO_LARGE_413"]},{"name":"const val CONTINUE_100: Int = 100","description":"com.hexagontk.http.model.CONTINUE_100","location":"http/http/com.hexagontk.http.model/-c-o-n-t-i-n-u-e_100.html","searchKeys":["CONTINUE_100","const val CONTINUE_100: Int = 100","com.hexagontk.http.model.CONTINUE_100"]},{"name":"const val CREATED_201: Int = 201","description":"com.hexagontk.http.model.CREATED_201","location":"http/http/com.hexagontk.http.model/-c-r-e-a-t-e-d_201.html","searchKeys":["CREATED_201","const val CREATED_201: Int = 201","com.hexagontk.http.model.CREATED_201"]},{"name":"const val EARLY_HINTS_103: Int = 103","description":"com.hexagontk.http.model.EARLY_HINTS_103","location":"http/http/com.hexagontk.http.model/-e-a-r-l-y_-h-i-n-t-s_103.html","searchKeys":["EARLY_HINTS_103","const val EARLY_HINTS_103: Int = 103","com.hexagontk.http.model.EARLY_HINTS_103"]},{"name":"const val EXPECTATION_FAILED_417: Int = 417","description":"com.hexagontk.http.model.EXPECTATION_FAILED_417","location":"http/http/com.hexagontk.http.model/-e-x-p-e-c-t-a-t-i-o-n_-f-a-i-l-e-d_417.html","searchKeys":["EXPECTATION_FAILED_417","const val EXPECTATION_FAILED_417: Int = 417","com.hexagontk.http.model.EXPECTATION_FAILED_417"]},{"name":"const val FAILED_DEPENDENCY_424: Int = 424","description":"com.hexagontk.http.model.FAILED_DEPENDENCY_424","location":"http/http/com.hexagontk.http.model/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-y_424.html","searchKeys":["FAILED_DEPENDENCY_424","const val FAILED_DEPENDENCY_424: Int = 424","com.hexagontk.http.model.FAILED_DEPENDENCY_424"]},{"name":"const val FAILED_TLS_HANDSHAKE: Int = 1015","description":"com.hexagontk.http.model.ws.FAILED_TLS_HANDSHAKE","location":"http/http/com.hexagontk.http.model.ws/-f-a-i-l-e-d_-t-l-s_-h-a-n-d-s-h-a-k-e.html","searchKeys":["FAILED_TLS_HANDSHAKE","const val FAILED_TLS_HANDSHAKE: Int = 1015","com.hexagontk.http.model.ws.FAILED_TLS_HANDSHAKE"]},{"name":"const val FORBIDDEN_403: Int = 403","description":"com.hexagontk.http.model.FORBIDDEN_403","location":"http/http/com.hexagontk.http.model/-f-o-r-b-i-d-d-e-n_403.html","searchKeys":["FORBIDDEN_403","const val FORBIDDEN_403: Int = 403","com.hexagontk.http.model.FORBIDDEN_403"]},{"name":"const val FOUND_302: Int = 302","description":"com.hexagontk.http.model.FOUND_302","location":"http/http/com.hexagontk.http.model/-f-o-u-n-d_302.html","searchKeys":["FOUND_302","const val FOUND_302: Int = 302","com.hexagontk.http.model.FOUND_302"]},{"name":"const val GATEWAY_TIMEOUT_504: Int = 504","description":"com.hexagontk.http.model.GATEWAY_TIMEOUT_504","location":"http/http/com.hexagontk.http.model/-g-a-t-e-w-a-y_-t-i-m-e-o-u-t_504.html","searchKeys":["GATEWAY_TIMEOUT_504","const val GATEWAY_TIMEOUT_504: Int = 504","com.hexagontk.http.model.GATEWAY_TIMEOUT_504"]},{"name":"const val GONE_410: Int = 410","description":"com.hexagontk.http.model.GONE_410","location":"http/http/com.hexagontk.http.model/-g-o-n-e_410.html","searchKeys":["GONE_410","const val GONE_410: Int = 410","com.hexagontk.http.model.GONE_410"]},{"name":"const val HTTP_VERSION_NOT_SUPPORTED_505: Int = 505","description":"com.hexagontk.http.model.HTTP_VERSION_NOT_SUPPORTED_505","location":"http/http/com.hexagontk.http.model/-h-t-t-p_-v-e-r-s-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d_505.html","searchKeys":["HTTP_VERSION_NOT_SUPPORTED_505","const val HTTP_VERSION_NOT_SUPPORTED_505: Int = 505","com.hexagontk.http.model.HTTP_VERSION_NOT_SUPPORTED_505"]},{"name":"const val IM_USED_226: Int = 226","description":"com.hexagontk.http.model.IM_USED_226","location":"http/http/com.hexagontk.http.model/-i-m_-u-s-e-d_226.html","searchKeys":["IM_USED_226","const val IM_USED_226: Int = 226","com.hexagontk.http.model.IM_USED_226"]},{"name":"const val INSUFFICIENT_STORAGE_507: Int = 507","description":"com.hexagontk.http.model.INSUFFICIENT_STORAGE_507","location":"http/http/com.hexagontk.http.model/-i-n-s-u-f-f-i-c-i-e-n-t_-s-t-o-r-a-g-e_507.html","searchKeys":["INSUFFICIENT_STORAGE_507","const val INSUFFICIENT_STORAGE_507: Int = 507","com.hexagontk.http.model.INSUFFICIENT_STORAGE_507"]},{"name":"const val INTERNAL_SERVER_ERROR_500: Int = 500","description":"com.hexagontk.http.model.INTERNAL_SERVER_ERROR_500","location":"http/http/com.hexagontk.http.model/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r_500.html","searchKeys":["INTERNAL_SERVER_ERROR_500","const val INTERNAL_SERVER_ERROR_500: Int = 500","com.hexagontk.http.model.INTERNAL_SERVER_ERROR_500"]},{"name":"const val INVALID_UPSTREAM_RESPONSE: Int = 1014","description":"com.hexagontk.http.model.ws.INVALID_UPSTREAM_RESPONSE","location":"http/http/com.hexagontk.http.model.ws/-i-n-v-a-l-i-d_-u-p-s-t-r-e-a-m_-r-e-s-p-o-n-s-e.html","searchKeys":["INVALID_UPSTREAM_RESPONSE","const val INVALID_UPSTREAM_RESPONSE: Int = 1014","com.hexagontk.http.model.ws.INVALID_UPSTREAM_RESPONSE"]},{"name":"const val I_AM_A_TEAPOT_418: Int = 418","description":"com.hexagontk.http.model.I_AM_A_TEAPOT_418","location":"http/http/com.hexagontk.http.model/-i_-a-m_-a_-t-e-a-p-o-t_418.html","searchKeys":["I_AM_A_TEAPOT_418","const val I_AM_A_TEAPOT_418: Int = 418","com.hexagontk.http.model.I_AM_A_TEAPOT_418"]},{"name":"const val LENGTH_REQUIRED_411: Int = 411","description":"com.hexagontk.http.model.LENGTH_REQUIRED_411","location":"http/http/com.hexagontk.http.model/-l-e-n-g-t-h_-r-e-q-u-i-r-e-d_411.html","searchKeys":["LENGTH_REQUIRED_411","const val LENGTH_REQUIRED_411: Int = 411","com.hexagontk.http.model.LENGTH_REQUIRED_411"]},{"name":"const val LOCKED_423: Int = 423","description":"com.hexagontk.http.model.LOCKED_423","location":"http/http/com.hexagontk.http.model/-l-o-c-k-e-d_423.html","searchKeys":["LOCKED_423","const val LOCKED_423: Int = 423","com.hexagontk.http.model.LOCKED_423"]},{"name":"const val LOOP_DETECTED_508: Int = 508","description":"com.hexagontk.http.model.LOOP_DETECTED_508","location":"http/http/com.hexagontk.http.model/-l-o-o-p_-d-e-t-e-c-t-e-d_508.html","searchKeys":["LOOP_DETECTED_508","const val LOOP_DETECTED_508: Int = 508","com.hexagontk.http.model.LOOP_DETECTED_508"]},{"name":"const val MESSAGE_TOO_LARGE: Int = 1009","description":"com.hexagontk.http.model.ws.MESSAGE_TOO_LARGE","location":"http/http/com.hexagontk.http.model.ws/-m-e-s-s-a-g-e_-t-o-o_-l-a-r-g-e.html","searchKeys":["MESSAGE_TOO_LARGE","const val MESSAGE_TOO_LARGE: Int = 1009","com.hexagontk.http.model.ws.MESSAGE_TOO_LARGE"]},{"name":"const val METHOD_NOT_ALLOWED_405: Int = 405","description":"com.hexagontk.http.model.METHOD_NOT_ALLOWED_405","location":"http/http/com.hexagontk.http.model/-m-e-t-h-o-d_-n-o-t_-a-l-l-o-w-e-d_405.html","searchKeys":["METHOD_NOT_ALLOWED_405","const val METHOD_NOT_ALLOWED_405: Int = 405","com.hexagontk.http.model.METHOD_NOT_ALLOWED_405"]},{"name":"const val MISDIRECTED_REQUEST_421: Int = 421","description":"com.hexagontk.http.model.MISDIRECTED_REQUEST_421","location":"http/http/com.hexagontk.http.model/-m-i-s-d-i-r-e-c-t-e-d_-r-e-q-u-e-s-t_421.html","searchKeys":["MISDIRECTED_REQUEST_421","const val MISDIRECTED_REQUEST_421: Int = 421","com.hexagontk.http.model.MISDIRECTED_REQUEST_421"]},{"name":"const val MOVED_PERMANENTLY_301: Int = 301","description":"com.hexagontk.http.model.MOVED_PERMANENTLY_301","location":"http/http/com.hexagontk.http.model/-m-o-v-e-d_-p-e-r-m-a-n-e-n-t-l-y_301.html","searchKeys":["MOVED_PERMANENTLY_301","const val MOVED_PERMANENTLY_301: Int = 301","com.hexagontk.http.model.MOVED_PERMANENTLY_301"]},{"name":"const val MULTIPLE_CHOICES_300: Int = 300","description":"com.hexagontk.http.model.MULTIPLE_CHOICES_300","location":"http/http/com.hexagontk.http.model/-m-u-l-t-i-p-l-e_-c-h-o-i-c-e-s_300.html","searchKeys":["MULTIPLE_CHOICES_300","const val MULTIPLE_CHOICES_300: Int = 300","com.hexagontk.http.model.MULTIPLE_CHOICES_300"]},{"name":"const val MULTI_STATUS_207: Int = 207","description":"com.hexagontk.http.model.MULTI_STATUS_207","location":"http/http/com.hexagontk.http.model/-m-u-l-t-i_-s-t-a-t-u-s_207.html","searchKeys":["MULTI_STATUS_207","const val MULTI_STATUS_207: Int = 207","com.hexagontk.http.model.MULTI_STATUS_207"]},{"name":"const val NETWORK_AUTHENTICATION_REQUIRED_511: Int = 511","description":"com.hexagontk.http.model.NETWORK_AUTHENTICATION_REQUIRED_511","location":"http/http/com.hexagontk.http.model/-n-e-t-w-o-r-k_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d_511.html","searchKeys":["NETWORK_AUTHENTICATION_REQUIRED_511","const val NETWORK_AUTHENTICATION_REQUIRED_511: Int = 511","com.hexagontk.http.model.NETWORK_AUTHENTICATION_REQUIRED_511"]},{"name":"const val NON_AUTHORITATIVE_INFORMATION_203: Int = 203","description":"com.hexagontk.http.model.NON_AUTHORITATIVE_INFORMATION_203","location":"http/http/com.hexagontk.http.model/-n-o-n_-a-u-t-h-o-r-i-t-a-t-i-v-e_-i-n-f-o-r-m-a-t-i-o-n_203.html","searchKeys":["NON_AUTHORITATIVE_INFORMATION_203","const val NON_AUTHORITATIVE_INFORMATION_203: Int = 203","com.hexagontk.http.model.NON_AUTHORITATIVE_INFORMATION_203"]},{"name":"const val NORMAL: Int = 1000","description":"com.hexagontk.http.model.ws.NORMAL","location":"http/http/com.hexagontk.http.model.ws/-n-o-r-m-a-l.html","searchKeys":["NORMAL","const val NORMAL: Int = 1000","com.hexagontk.http.model.ws.NORMAL"]},{"name":"const val NOT_ACCEPTABLE_406: Int = 406","description":"com.hexagontk.http.model.NOT_ACCEPTABLE_406","location":"http/http/com.hexagontk.http.model/-n-o-t_-a-c-c-e-p-t-a-b-l-e_406.html","searchKeys":["NOT_ACCEPTABLE_406","const val NOT_ACCEPTABLE_406: Int = 406","com.hexagontk.http.model.NOT_ACCEPTABLE_406"]},{"name":"const val NOT_EXTENDED_510: Int = 510","description":"com.hexagontk.http.model.NOT_EXTENDED_510","location":"http/http/com.hexagontk.http.model/-n-o-t_-e-x-t-e-n-d-e-d_510.html","searchKeys":["NOT_EXTENDED_510","const val NOT_EXTENDED_510: Int = 510","com.hexagontk.http.model.NOT_EXTENDED_510"]},{"name":"const val NOT_FOUND_404: Int = 404","description":"com.hexagontk.http.model.NOT_FOUND_404","location":"http/http/com.hexagontk.http.model/-n-o-t_-f-o-u-n-d_404.html","searchKeys":["NOT_FOUND_404","const val NOT_FOUND_404: Int = 404","com.hexagontk.http.model.NOT_FOUND_404"]},{"name":"const val NOT_IMPLEMENTED_501: Int = 501","description":"com.hexagontk.http.model.NOT_IMPLEMENTED_501","location":"http/http/com.hexagontk.http.model/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d_501.html","searchKeys":["NOT_IMPLEMENTED_501","const val NOT_IMPLEMENTED_501: Int = 501","com.hexagontk.http.model.NOT_IMPLEMENTED_501"]},{"name":"const val NOT_MODIFIED_304: Int = 304","description":"com.hexagontk.http.model.NOT_MODIFIED_304","location":"http/http/com.hexagontk.http.model/-n-o-t_-m-o-d-i-f-i-e-d_304.html","searchKeys":["NOT_MODIFIED_304","const val NOT_MODIFIED_304: Int = 304","com.hexagontk.http.model.NOT_MODIFIED_304"]},{"name":"const val NO_CLOSE: Int = 1006","description":"com.hexagontk.http.model.ws.NO_CLOSE","location":"http/http/com.hexagontk.http.model.ws/-n-o_-c-l-o-s-e.html","searchKeys":["NO_CLOSE","const val NO_CLOSE: Int = 1006","com.hexagontk.http.model.ws.NO_CLOSE"]},{"name":"const val NO_CODE: Int = 1005","description":"com.hexagontk.http.model.ws.NO_CODE","location":"http/http/com.hexagontk.http.model.ws/-n-o_-c-o-d-e.html","searchKeys":["NO_CODE","const val NO_CODE: Int = 1005","com.hexagontk.http.model.ws.NO_CODE"]},{"name":"const val NO_CONTENT_204: Int = 204","description":"com.hexagontk.http.model.NO_CONTENT_204","location":"http/http/com.hexagontk.http.model/-n-o_-c-o-n-t-e-n-t_204.html","searchKeys":["NO_CONTENT_204","const val NO_CONTENT_204: Int = 204","com.hexagontk.http.model.NO_CONTENT_204"]},{"name":"const val OK_200: Int = 200","description":"com.hexagontk.http.model.OK_200","location":"http/http/com.hexagontk.http.model/-o-k_200.html","searchKeys":["OK_200","const val OK_200: Int = 200","com.hexagontk.http.model.OK_200"]},{"name":"const val PARTIAL_CONTENT_206: Int = 206","description":"com.hexagontk.http.model.PARTIAL_CONTENT_206","location":"http/http/com.hexagontk.http.model/-p-a-r-t-i-a-l_-c-o-n-t-e-n-t_206.html","searchKeys":["PARTIAL_CONTENT_206","const val PARTIAL_CONTENT_206: Int = 206","com.hexagontk.http.model.PARTIAL_CONTENT_206"]},{"name":"const val PAYMENT_REQUIRED_402: Int = 402","description":"com.hexagontk.http.model.PAYMENT_REQUIRED_402","location":"http/http/com.hexagontk.http.model/-p-a-y-m-e-n-t_-r-e-q-u-i-r-e-d_402.html","searchKeys":["PAYMENT_REQUIRED_402","const val PAYMENT_REQUIRED_402: Int = 402","com.hexagontk.http.model.PAYMENT_REQUIRED_402"]},{"name":"const val PERMANENT_REDIRECT_308: Int = 308","description":"com.hexagontk.http.model.PERMANENT_REDIRECT_308","location":"http/http/com.hexagontk.http.model/-p-e-r-m-a-n-e-n-t_-r-e-d-i-r-e-c-t_308.html","searchKeys":["PERMANENT_REDIRECT_308","const val PERMANENT_REDIRECT_308: Int = 308","com.hexagontk.http.model.PERMANENT_REDIRECT_308"]},{"name":"const val POLICY_VIOLATION: Int = 1008","description":"com.hexagontk.http.model.ws.POLICY_VIOLATION","location":"http/http/com.hexagontk.http.model.ws/-p-o-l-i-c-y_-v-i-o-l-a-t-i-o-n.html","searchKeys":["POLICY_VIOLATION","const val POLICY_VIOLATION: Int = 1008","com.hexagontk.http.model.ws.POLICY_VIOLATION"]},{"name":"const val PRECONDITION_FAILED_412: Int = 412","description":"com.hexagontk.http.model.PRECONDITION_FAILED_412","location":"http/http/com.hexagontk.http.model/-p-r-e-c-o-n-d-i-t-i-o-n_-f-a-i-l-e-d_412.html","searchKeys":["PRECONDITION_FAILED_412","const val PRECONDITION_FAILED_412: Int = 412","com.hexagontk.http.model.PRECONDITION_FAILED_412"]},{"name":"const val PRECONDITION_REQUIRED_428: Int = 428","description":"com.hexagontk.http.model.PRECONDITION_REQUIRED_428","location":"http/http/com.hexagontk.http.model/-p-r-e-c-o-n-d-i-t-i-o-n_-r-e-q-u-i-r-e-d_428.html","searchKeys":["PRECONDITION_REQUIRED_428","const val PRECONDITION_REQUIRED_428: Int = 428","com.hexagontk.http.model.PRECONDITION_REQUIRED_428"]},{"name":"const val PROCESSING_102: Int = 102","description":"com.hexagontk.http.model.PROCESSING_102","location":"http/http/com.hexagontk.http.model/-p-r-o-c-e-s-s-i-n-g_102.html","searchKeys":["PROCESSING_102","const val PROCESSING_102: Int = 102","com.hexagontk.http.model.PROCESSING_102"]},{"name":"const val PROTOCOL: Int = 1002","description":"com.hexagontk.http.model.ws.PROTOCOL","location":"http/http/com.hexagontk.http.model.ws/-p-r-o-t-o-c-o-l.html","searchKeys":["PROTOCOL","const val PROTOCOL: Int = 1002","com.hexagontk.http.model.ws.PROTOCOL"]},{"name":"const val PROXY_AUTHENTICATION_REQUIRED_407: Int = 407","description":"com.hexagontk.http.model.PROXY_AUTHENTICATION_REQUIRED_407","location":"http/http/com.hexagontk.http.model/-p-r-o-x-y_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d_407.html","searchKeys":["PROXY_AUTHENTICATION_REQUIRED_407","const val PROXY_AUTHENTICATION_REQUIRED_407: Int = 407","com.hexagontk.http.model.PROXY_AUTHENTICATION_REQUIRED_407"]},{"name":"const val RANGE_NOT_SATISFIABLE_416: Int = 416","description":"com.hexagontk.http.model.RANGE_NOT_SATISFIABLE_416","location":"http/http/com.hexagontk.http.model/-r-a-n-g-e_-n-o-t_-s-a-t-i-s-f-i-a-b-l-e_416.html","searchKeys":["RANGE_NOT_SATISFIABLE_416","const val RANGE_NOT_SATISFIABLE_416: Int = 416","com.hexagontk.http.model.RANGE_NOT_SATISFIABLE_416"]},{"name":"const val REQUEST_HEADER_FIELDS_TOO_LARGE_431: Int = 431","description":"com.hexagontk.http.model.REQUEST_HEADER_FIELDS_TOO_LARGE_431","location":"http/http/com.hexagontk.http.model/-r-e-q-u-e-s-t_-h-e-a-d-e-r_-f-i-e-l-d-s_-t-o-o_-l-a-r-g-e_431.html","searchKeys":["REQUEST_HEADER_FIELDS_TOO_LARGE_431","const val REQUEST_HEADER_FIELDS_TOO_LARGE_431: Int = 431","com.hexagontk.http.model.REQUEST_HEADER_FIELDS_TOO_LARGE_431"]},{"name":"const val REQUEST_TIMEOUT_408: Int = 408","description":"com.hexagontk.http.model.REQUEST_TIMEOUT_408","location":"http/http/com.hexagontk.http.model/-r-e-q-u-e-s-t_-t-i-m-e-o-u-t_408.html","searchKeys":["REQUEST_TIMEOUT_408","const val REQUEST_TIMEOUT_408: Int = 408","com.hexagontk.http.model.REQUEST_TIMEOUT_408"]},{"name":"const val REQUIRED_EXTENSION: Int = 1010","description":"com.hexagontk.http.model.ws.REQUIRED_EXTENSION","location":"http/http/com.hexagontk.http.model.ws/-r-e-q-u-i-r-e-d_-e-x-t-e-n-s-i-o-n.html","searchKeys":["REQUIRED_EXTENSION","const val REQUIRED_EXTENSION: Int = 1010","com.hexagontk.http.model.ws.REQUIRED_EXTENSION"]},{"name":"const val RESET_CONTENT_205: Int = 205","description":"com.hexagontk.http.model.RESET_CONTENT_205","location":"http/http/com.hexagontk.http.model/-r-e-s-e-t_-c-o-n-t-e-n-t_205.html","searchKeys":["RESET_CONTENT_205","const val RESET_CONTENT_205: Int = 205","com.hexagontk.http.model.RESET_CONTENT_205"]},{"name":"const val SEE_OTHER_303: Int = 303","description":"com.hexagontk.http.model.SEE_OTHER_303","location":"http/http/com.hexagontk.http.model/-s-e-e_-o-t-h-e-r_303.html","searchKeys":["SEE_OTHER_303","const val SEE_OTHER_303: Int = 303","com.hexagontk.http.model.SEE_OTHER_303"]},{"name":"const val SERVER_ERROR: Int = 1011","description":"com.hexagontk.http.model.ws.SERVER_ERROR","location":"http/http/com.hexagontk.http.model.ws/-s-e-r-v-e-r_-e-r-r-o-r.html","searchKeys":["SERVER_ERROR","const val SERVER_ERROR: Int = 1011","com.hexagontk.http.model.ws.SERVER_ERROR"]},{"name":"const val SERVICE_RESTART: Int = 1012","description":"com.hexagontk.http.model.ws.SERVICE_RESTART","location":"http/http/com.hexagontk.http.model.ws/-s-e-r-v-i-c-e_-r-e-s-t-a-r-t.html","searchKeys":["SERVICE_RESTART","const val SERVICE_RESTART: Int = 1012","com.hexagontk.http.model.ws.SERVICE_RESTART"]},{"name":"const val SERVICE_UNAVAILABLE_503: Int = 503","description":"com.hexagontk.http.model.SERVICE_UNAVAILABLE_503","location":"http/http/com.hexagontk.http.model/-s-e-r-v-i-c-e_-u-n-a-v-a-i-l-a-b-l-e_503.html","searchKeys":["SERVICE_UNAVAILABLE_503","const val SERVICE_UNAVAILABLE_503: Int = 503","com.hexagontk.http.model.SERVICE_UNAVAILABLE_503"]},{"name":"const val SHUTDOWN: Int = 1001","description":"com.hexagontk.http.model.ws.SHUTDOWN","location":"http/http/com.hexagontk.http.model.ws/-s-h-u-t-d-o-w-n.html","searchKeys":["SHUTDOWN","const val SHUTDOWN: Int = 1001","com.hexagontk.http.model.ws.SHUTDOWN"]},{"name":"const val SWITCHING_PROTOCOLS_101: Int = 101","description":"com.hexagontk.http.model.SWITCHING_PROTOCOLS_101","location":"http/http/com.hexagontk.http.model/-s-w-i-t-c-h-i-n-g_-p-r-o-t-o-c-o-l-s_101.html","searchKeys":["SWITCHING_PROTOCOLS_101","const val SWITCHING_PROTOCOLS_101: Int = 101","com.hexagontk.http.model.SWITCHING_PROTOCOLS_101"]},{"name":"const val TEMPORARY_REDIRECT_307: Int = 307","description":"com.hexagontk.http.model.TEMPORARY_REDIRECT_307","location":"http/http/com.hexagontk.http.model/-t-e-m-p-o-r-a-r-y_-r-e-d-i-r-e-c-t_307.html","searchKeys":["TEMPORARY_REDIRECT_307","const val TEMPORARY_REDIRECT_307: Int = 307","com.hexagontk.http.model.TEMPORARY_REDIRECT_307"]},{"name":"const val TOO_EARLY_425: Int = 425","description":"com.hexagontk.http.model.TOO_EARLY_425","location":"http/http/com.hexagontk.http.model/-t-o-o_-e-a-r-l-y_425.html","searchKeys":["TOO_EARLY_425","const val TOO_EARLY_425: Int = 425","com.hexagontk.http.model.TOO_EARLY_425"]},{"name":"const val TOO_MANY_REQUESTS_429: Int = 429","description":"com.hexagontk.http.model.TOO_MANY_REQUESTS_429","location":"http/http/com.hexagontk.http.model/-t-o-o_-m-a-n-y_-r-e-q-u-e-s-t-s_429.html","searchKeys":["TOO_MANY_REQUESTS_429","const val TOO_MANY_REQUESTS_429: Int = 429","com.hexagontk.http.model.TOO_MANY_REQUESTS_429"]},{"name":"const val TRY_AGAIN_LATER: Int = 1013","description":"com.hexagontk.http.model.ws.TRY_AGAIN_LATER","location":"http/http/com.hexagontk.http.model.ws/-t-r-y_-a-g-a-i-n_-l-a-t-e-r.html","searchKeys":["TRY_AGAIN_LATER","const val TRY_AGAIN_LATER: Int = 1013","com.hexagontk.http.model.ws.TRY_AGAIN_LATER"]},{"name":"const val UNAUTHORIZED_401: Int = 401","description":"com.hexagontk.http.model.UNAUTHORIZED_401","location":"http/http/com.hexagontk.http.model/-u-n-a-u-t-h-o-r-i-z-e-d_401.html","searchKeys":["UNAUTHORIZED_401","const val UNAUTHORIZED_401: Int = 401","com.hexagontk.http.model.UNAUTHORIZED_401"]},{"name":"const val UNAVAILABLE_FOR_LEGAL_REASONS_451: Int = 451","description":"com.hexagontk.http.model.UNAVAILABLE_FOR_LEGAL_REASONS_451","location":"http/http/com.hexagontk.http.model/-u-n-a-v-a-i-l-a-b-l-e_-f-o-r_-l-e-g-a-l_-r-e-a-s-o-n-s_451.html","searchKeys":["UNAVAILABLE_FOR_LEGAL_REASONS_451","const val UNAVAILABLE_FOR_LEGAL_REASONS_451: Int = 451","com.hexagontk.http.model.UNAVAILABLE_FOR_LEGAL_REASONS_451"]},{"name":"const val UNDEFINED: Int = 1004","description":"com.hexagontk.http.model.ws.UNDEFINED","location":"http/http/com.hexagontk.http.model.ws/-u-n-d-e-f-i-n-e-d.html","searchKeys":["UNDEFINED","const val UNDEFINED: Int = 1004","com.hexagontk.http.model.ws.UNDEFINED"]},{"name":"const val UNPROCESSABLE_CONTENT_422: Int = 422","description":"com.hexagontk.http.model.UNPROCESSABLE_CONTENT_422","location":"http/http/com.hexagontk.http.model/-u-n-p-r-o-c-e-s-s-a-b-l-e_-c-o-n-t-e-n-t_422.html","searchKeys":["UNPROCESSABLE_CONTENT_422","const val UNPROCESSABLE_CONTENT_422: Int = 422","com.hexagontk.http.model.UNPROCESSABLE_CONTENT_422"]},{"name":"const val UNSUPPORTED_MEDIA_TYPE_415: Int = 415","description":"com.hexagontk.http.model.UNSUPPORTED_MEDIA_TYPE_415","location":"http/http/com.hexagontk.http.model/-u-n-s-u-p-p-o-r-t-e-d_-m-e-d-i-a_-t-y-p-e_415.html","searchKeys":["UNSUPPORTED_MEDIA_TYPE_415","const val UNSUPPORTED_MEDIA_TYPE_415: Int = 415","com.hexagontk.http.model.UNSUPPORTED_MEDIA_TYPE_415"]},{"name":"const val UPGRADE_REQUIRED_426: Int = 426","description":"com.hexagontk.http.model.UPGRADE_REQUIRED_426","location":"http/http/com.hexagontk.http.model/-u-p-g-r-a-d-e_-r-e-q-u-i-r-e-d_426.html","searchKeys":["UPGRADE_REQUIRED_426","const val UPGRADE_REQUIRED_426: Int = 426","com.hexagontk.http.model.UPGRADE_REQUIRED_426"]},{"name":"const val URI_TOO_LONG_414: Int = 414","description":"com.hexagontk.http.model.URI_TOO_LONG_414","location":"http/http/com.hexagontk.http.model/-u-r-i_-t-o-o_-l-o-n-g_414.html","searchKeys":["URI_TOO_LONG_414","const val URI_TOO_LONG_414: Int = 414","com.hexagontk.http.model.URI_TOO_LONG_414"]},{"name":"const val USE_PROXY_305: Int = 305","description":"com.hexagontk.http.model.USE_PROXY_305","location":"http/http/com.hexagontk.http.model/-u-s-e_-p-r-o-x-y_305.html","searchKeys":["USE_PROXY_305","const val USE_PROXY_305: Int = 305","com.hexagontk.http.model.USE_PROXY_305"]},{"name":"const val VARIANT_ALSO_NEGOTIATES_506: Int = 506","description":"com.hexagontk.http.model.VARIANT_ALSO_NEGOTIATES_506","location":"http/http/com.hexagontk.http.model/-v-a-r-i-a-n-t_-a-l-s-o_-n-e-g-o-t-i-a-t-e-s_506.html","searchKeys":["VARIANT_ALSO_NEGOTIATES_506","const val VARIANT_ALSO_NEGOTIATES_506: Int = 506","com.hexagontk.http.model.VARIANT_ALSO_NEGOTIATES_506"]},{"name":"constructor(body: Any = \"\", headers: Headers = Headers(), contentType: ContentType? = null, cookies: List<Cookie> = emptyList(), status: Int = NOT_FOUND_404, reason: String = \"\", contentLength: Long = -1L, onConnect: WsSession.() -> Unit = {}, onBinary: WsSession.(data: ByteArray) -> Unit = {}, onText: WsSession.(text: String) -> Unit = {}, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> })","description":"com.hexagontk.http.model.HttpResponse.HttpResponse","location":"http/http/com.hexagontk.http.model/-http-response/-http-response.html","searchKeys":["HttpResponse","constructor(body: Any = \"\", headers: Headers = Headers(), contentType: ContentType? = null, cookies: List<Cookie> = emptyList(), status: Int = NOT_FOUND_404, reason: String = \"\", contentLength: Long = -1L, onConnect: WsSession.() -> Unit = {}, onBinary: WsSession.(data: ByteArray) -> Unit = {}, onText: WsSession.(text: String) -> Unit = {}, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> })","com.hexagontk.http.model.HttpResponse.HttpResponse"]},{"name":"constructor(event: String? = null, data: String? = null, id: String? = null, retry: Long? = null)","description":"com.hexagontk.http.model.ServerEvent.ServerEvent","location":"http/http/com.hexagontk.http.model/-server-event/-server-event.html","searchKeys":["ServerEvent","constructor(event: String? = null, data: String? = null, id: String? = null, retry: Long? = null)","com.hexagontk.http.model.ServerEvent.ServerEvent"]},{"name":"constructor(fields: List<HttpField>)","description":"com.hexagontk.http.model.Headers.Headers","location":"http/http/com.hexagontk.http.model/-headers/-headers.html","searchKeys":["Headers","constructor(fields: List<HttpField>)","com.hexagontk.http.model.Headers.Headers"]},{"name":"constructor(fields: List<HttpField>)","description":"com.hexagontk.http.model.Parameters.Parameters","location":"http/http/com.hexagontk.http.model/-parameters/-parameters.html","searchKeys":["Parameters","constructor(fields: List<HttpField>)","com.hexagontk.http.model.Parameters.Parameters"]},{"name":"constructor(fields: List<HttpField>, keyMapper: (String) -> String)","description":"com.hexagontk.http.model.HttpFields.HttpFields","location":"http/http/com.hexagontk.http.model/-http-fields/-http-fields.html","searchKeys":["HttpFields","constructor(fields: List<HttpField>, keyMapper: (String) -> String)","com.hexagontk.http.model.HttpFields.HttpFields"]},{"name":"constructor(keyStore: URL? = null, keyStorePassword: String = \"\", trustStore: URL? = null, trustStorePassword: String = \"\", clientAuth: Boolean = false)","description":"com.hexagontk.http.SslSettings.SslSettings","location":"http/http/com.hexagontk.http/-ssl-settings/-ssl-settings.html","searchKeys":["SslSettings","constructor(keyStore: URL? = null, keyStorePassword: String = \"\", trustStore: URL? = null, trustStorePassword: String = \"\", clientAuth: Boolean = false)","com.hexagontk.http.SslSettings.SslSettings"]},{"name":"constructor(mediaType: MediaType, boundary: String? = null, charset: Charset? = null, q: Double? = null)","description":"com.hexagontk.http.model.ContentType.ContentType","location":"http/http/com.hexagontk.http.model/-content-type/-content-type.html","searchKeys":["ContentType","constructor(mediaType: MediaType, boundary: String? = null, charset: Charset? = null, q: Double? = null)","com.hexagontk.http.model.ContentType.ContentType"]},{"name":"constructor(method: HttpMethod = GET, protocol: HttpProtocol = HTTP, host: String = \"localhost\", port: Int = 80, path: String = \"\", queryParameters: Parameters = Parameters(), headers: Headers = Headers(), body: Any = \"\", parts: List<HttpPart> = emptyList(), formParameters: Parameters = Parameters(), cookies: List<Cookie> = emptyList(), contentType: ContentType? = null, certificateChain: List<X509Certificate> = emptyList(), accept: List<ContentType> = emptyList(), contentLength: Long = -1L, authorization: Authorization? = null, pathPattern: PathPattern? = null, pathParameters: Map<String, Any> = emptyMap())","description":"com.hexagontk.http.model.HttpRequest.HttpRequest","location":"http/http/com.hexagontk.http.model/-http-request/-http-request.html","searchKeys":["HttpRequest","constructor(method: HttpMethod = GET, protocol: HttpProtocol = HTTP, host: String = \"localhost\", port: Int = 80, path: String = \"\", queryParameters: Parameters = Parameters(), headers: Headers = Headers(), body: Any = \"\", parts: List<HttpPart> = emptyList(), formParameters: Parameters = Parameters(), cookies: List<Cookie> = emptyList(), contentType: ContentType? = null, certificateChain: List<X509Certificate> = emptyList(), accept: List<ContentType> = emptyList(), contentLength: Long = -1L, authorization: Authorization? = null, pathPattern: PathPattern? = null, pathParameters: Map<String, Any> = emptyMap())","com.hexagontk.http.model.HttpRequest.HttpRequest"]},{"name":"constructor(name: String, body: Any, headers: Headers = Headers(), contentType: ContentType? = null, size: Long = -1L, submittedFileName: String? = null)","description":"com.hexagontk.http.model.HttpPart.HttpPart","location":"http/http/com.hexagontk.http.model/-http-part/-http-part.html","searchKeys":["HttpPart","constructor(name: String, body: Any, headers: Headers = Headers(), contentType: ContentType? = null, size: Long = -1L, submittedFileName: String? = null)","com.hexagontk.http.model.HttpPart.HttpPart"]},{"name":"constructor(name: String, body: ByteArray, submittedFileName: String)","description":"com.hexagontk.http.model.HttpPart.HttpPart","location":"http/http/com.hexagontk.http.model/-http-part/-http-part.html","searchKeys":["HttpPart","constructor(name: String, body: ByteArray, submittedFileName: String)","com.hexagontk.http.model.HttpPart.HttpPart"]},{"name":"constructor(name: String, value: Any? = null)","description":"com.hexagontk.http.model.Field.Field","location":"http/http/com.hexagontk.http.model/-field/-field.html","searchKeys":["Field","constructor(name: String, value: Any? = null)","com.hexagontk.http.model.Field.Field"]},{"name":"constructor(name: String, value: String = \"\", maxAge: Long = -1, secure: Boolean = false, path: String = \"/\", httpOnly: Boolean = false, domain: String? = null, sameSite: CookieSameSite? = null, expires: Instant? = null)","description":"com.hexagontk.http.model.Cookie.Cookie","location":"http/http/com.hexagontk.http.model/-cookie/-cookie.html","searchKeys":["Cookie","constructor(name: String, value: String = \"\", maxAge: Long = -1, secure: Boolean = false, path: String = \"/\", httpOnly: Boolean = false, domain: String? = null, sameSite: CookieSameSite? = null, expires: Instant? = null)","com.hexagontk.http.model.Cookie.Cookie"]},{"name":"constructor(name: String, value: String)","description":"com.hexagontk.http.model.HttpPart.HttpPart","location":"http/http/com.hexagontk.http.model/-http-part/-http-part.html","searchKeys":["HttpPart","constructor(name: String, value: String)","com.hexagontk.http.model.HttpPart.HttpPart"]},{"name":"constructor(pathPattern: PathPattern, pathParameters: Map<String, Any>, method: HttpMethod = GET, protocol: HttpProtocol = HTTP, host: String = \"localhost\", port: Int = 80, queryParameters: Parameters = Parameters(), headers: Headers = Headers(), body: Any = \"\", parts: List<HttpPart> = emptyList(), formParameters: Parameters = Parameters(), cookies: List<Cookie> = emptyList(), contentType: ContentType? = null, certificateChain: List<X509Certificate> = emptyList(), accept: List<ContentType> = emptyList(), contentLength: Long = -1L, authorization: Authorization? = null)","description":"com.hexagontk.http.model.HttpRequest.HttpRequest","location":"http/http/com.hexagontk.http.model/-http-request/-http-request.html","searchKeys":["HttpRequest","constructor(pathPattern: PathPattern, pathParameters: Map<String, Any>, method: HttpMethod = GET, protocol: HttpProtocol = HTTP, host: String = \"localhost\", port: Int = 80, queryParameters: Parameters = Parameters(), headers: Headers = Headers(), body: Any = \"\", parts: List<HttpPart> = emptyList(), formParameters: Parameters = Parameters(), cookies: List<Cookie> = emptyList(), contentType: ContentType? = null, certificateChain: List<X509Certificate> = emptyList(), accept: List<ContentType> = emptyList(), contentLength: Long = -1L, authorization: Authorization? = null)","com.hexagontk.http.model.HttpRequest.HttpRequest"]},{"name":"constructor(pattern: String = \"\", prefix: Boolean = false)","description":"com.hexagontk.http.patterns.LiteralPathPattern.LiteralPathPattern","location":"http/http/com.hexagontk.http.patterns/-literal-path-pattern/-literal-path-pattern.html","searchKeys":["LiteralPathPattern","constructor(pattern: String = \"\", prefix: Boolean = false)","com.hexagontk.http.patterns.LiteralPathPattern.LiteralPathPattern"]},{"name":"constructor(pattern: String, prefix: Boolean = false)","description":"com.hexagontk.http.patterns.TemplatePathPattern.TemplatePathPattern","location":"http/http/com.hexagontk.http.patterns/-template-path-pattern/-template-path-pattern.html","searchKeys":["TemplatePathPattern","constructor(pattern: String, prefix: Boolean = false)","com.hexagontk.http.patterns.TemplatePathPattern.TemplatePathPattern"]},{"name":"constructor(prefix: Boolean = false)","description":"com.hexagontk.http.patterns.WildcardPathPattern.WildcardPathPattern","location":"http/http/com.hexagontk.http.patterns/-wildcard-path-pattern/-wildcard-path-pattern.html","searchKeys":["WildcardPathPattern","constructor(prefix: Boolean = false)","com.hexagontk.http.patterns.WildcardPathPattern.WildcardPathPattern"]},{"name":"constructor(regex: Regex)","description":"com.hexagontk.http.patterns.RegexPathPattern.RegexPathPattern","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/-regex-path-pattern.html","searchKeys":["RegexPathPattern","constructor(regex: Regex)","com.hexagontk.http.patterns.RegexPathPattern.RegexPathPattern"]},{"name":"constructor(request: HttpRequestPort = HttpRequest(), response: HttpResponsePort = HttpResponse())","description":"com.hexagontk.http.model.HttpCall.HttpCall","location":"http/http/com.hexagontk.http.model/-http-call/-http-call.html","searchKeys":["HttpCall","constructor(request: HttpRequestPort = HttpRequest(), response: HttpResponsePort = HttpResponse())","com.hexagontk.http.model.HttpCall.HttpCall"]},{"name":"constructor(type: String, body: String)","description":"com.hexagontk.http.model.Authorization.Authorization","location":"http/http/com.hexagontk.http.model/-authorization/-authorization.html","searchKeys":["Authorization","constructor(type: String, body: String)","com.hexagontk.http.model.Authorization.Authorization"]},{"name":"constructor(vararg fields: HttpField)","description":"com.hexagontk.http.model.Headers.Headers","location":"http/http/com.hexagontk.http.model/-headers/-headers.html","searchKeys":["Headers","constructor(vararg fields: HttpField)","com.hexagontk.http.model.Headers.Headers"]},{"name":"constructor(vararg fields: HttpField)","description":"com.hexagontk.http.model.Parameters.Parameters","location":"http/http/com.hexagontk.http.model/-parameters/-parameters.html","searchKeys":["Parameters","constructor(vararg fields: HttpField)","com.hexagontk.http.model.Parameters.Parameters"]},{"name":"enum CookieSameSite : Enum<CookieSameSite> ","description":"com.hexagontk.http.model.CookieSameSite","location":"http/http/com.hexagontk.http.model/-cookie-same-site/index.html","searchKeys":["CookieSameSite","enum CookieSameSite : Enum<CookieSameSite> ","com.hexagontk.http.model.CookieSameSite"]},{"name":"enum HttpFeature : Enum<HttpFeature> ","description":"com.hexagontk.http.HttpFeature","location":"http/http/com.hexagontk.http/-http-feature/index.html","searchKeys":["HttpFeature","enum HttpFeature : Enum<HttpFeature> ","com.hexagontk.http.HttpFeature"]},{"name":"enum HttpMethod : Enum<HttpMethod> ","description":"com.hexagontk.http.model.HttpMethod","location":"http/http/com.hexagontk.http.model/-http-method/index.html","searchKeys":["HttpMethod","enum HttpMethod : Enum<HttpMethod> ","com.hexagontk.http.model.HttpMethod"]},{"name":"enum HttpProtocol : Enum<HttpProtocol> ","description":"com.hexagontk.http.model.HttpProtocol","location":"http/http/com.hexagontk.http.model/-http-protocol/index.html","searchKeys":["HttpProtocol","enum HttpProtocol : Enum<HttpProtocol> ","com.hexagontk.http.model.HttpProtocol"]},{"name":"fun Instant.toHttpFormat(): String","description":"com.hexagontk.http.toHttpFormat","location":"http/http/com.hexagontk.http/to-http-format.html","searchKeys":["toHttpFormat","fun Instant.toHttpFormat(): String","com.hexagontk.http.toHttpFormat"]},{"name":"fun LocalDateTime.toHttpFormat(): String","description":"com.hexagontk.http.toHttpFormat","location":"http/http/com.hexagontk.http/to-http-format.html","searchKeys":["toHttpFormat","fun LocalDateTime.toHttpFormat(): String","com.hexagontk.http.toHttpFormat"]},{"name":"fun String.urlDecode(): String","description":"com.hexagontk.http.urlDecode","location":"http/http/com.hexagontk.http/url-decode.html","searchKeys":["urlDecode","fun String.urlDecode(): String","com.hexagontk.http.urlDecode"]},{"name":"fun String.urlEncode(): String","description":"com.hexagontk.http.urlEncode","location":"http/http/com.hexagontk.http/url-encode.html","searchKeys":["urlEncode","fun String.urlEncode(): String","com.hexagontk.http.urlEncode"]},{"name":"fun basicAuth(user: String, password: String = \"\"): String","description":"com.hexagontk.http.basicAuth","location":"http/http/com.hexagontk.http/basic-auth.html","searchKeys":["basicAuth","fun basicAuth(user: String, password: String = \"\"): String","com.hexagontk.http.basicAuth"]},{"name":"fun createPathPattern(pattern: String, prefix: Boolean = false): PathPattern","description":"com.hexagontk.http.patterns.createPathPattern","location":"http/http/com.hexagontk.http.patterns/create-path-pattern.html","searchKeys":["createPathPattern","fun createPathPattern(pattern: String, prefix: Boolean = false): PathPattern","com.hexagontk.http.patterns.createPathPattern"]},{"name":"fun delete(): Cookie","description":"com.hexagontk.http.model.Cookie.delete","location":"http/http/com.hexagontk.http.model/-cookie/delete.html","searchKeys":["delete","fun delete(): Cookie","com.hexagontk.http.model.Cookie.delete"]},{"name":"fun formatQueryString(parameters: Parameters): String","description":"com.hexagontk.http.formatQueryString","location":"http/http/com.hexagontk.http/format-query-string.html","searchKeys":["formatQueryString","fun formatQueryString(parameters: Parameters): String","com.hexagontk.http.formatQueryString"]},{"name":"fun getAll(key: String): List<HttpField>","description":"com.hexagontk.http.model.HttpFields.getAll","location":"http/http/com.hexagontk.http.model/-http-fields/get-all.html","searchKeys":["getAll","fun getAll(key: String): List<HttpField>","com.hexagontk.http.model.HttpFields.getAll"]},{"name":"fun getText(key: String): String?","description":"com.hexagontk.http.model.HttpFields.getText","location":"http/http/com.hexagontk.http.model/-http-fields/get-text.html","searchKeys":["getText","fun getText(key: String): String?","com.hexagontk.http.model.HttpFields.getText"]},{"name":"fun getTexts(key: String): List<String>","description":"com.hexagontk.http.model.HttpFields.getTexts","location":"http/http/com.hexagontk.http.model/-http-fields/get-texts.html","searchKeys":["getTexts","fun getTexts(key: String): List<String>","com.hexagontk.http.model.HttpFields.getTexts"]},{"name":"fun parseContentType(contentType: String): ContentType","description":"com.hexagontk.http.parseContentType","location":"http/http/com.hexagontk.http/parse-content-type.html","searchKeys":["parseContentType","fun parseContentType(contentType: String): ContentType","com.hexagontk.http.parseContentType"]},{"name":"fun parseQueryString(query: String): Parameters","description":"com.hexagontk.http.parseQueryString","location":"http/http/com.hexagontk.http/parse-query-string.html","searchKeys":["parseQueryString","fun parseQueryString(query: String): Parameters","com.hexagontk.http.parseQueryString"]},{"name":"fun require(key: String): HttpField","description":"com.hexagontk.http.model.HttpFields.require","location":"http/http/com.hexagontk.http.model/-http-fields/require.html","searchKeys":["require","fun require(key: String): HttpField","com.hexagontk.http.model.HttpFields.require"]},{"name":"fun requireText(key: String): String","description":"com.hexagontk.http.model.HttpFields.requireText","location":"http/http/com.hexagontk.http.model/-http-fields/require-text.html","searchKeys":["requireText","fun requireText(key: String): String","com.hexagontk.http.model.HttpFields.requireText"]},{"name":"fun valueOf(value: String): CookieSameSite","description":"com.hexagontk.http.model.CookieSameSite.valueOf","location":"http/http/com.hexagontk.http.model/-cookie-same-site/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CookieSameSite","com.hexagontk.http.model.CookieSameSite.valueOf"]},{"name":"fun valueOf(value: String): HttpFeature","description":"com.hexagontk.http.HttpFeature.valueOf","location":"http/http/com.hexagontk.http/-http-feature/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpFeature","com.hexagontk.http.HttpFeature.valueOf"]},{"name":"fun valueOf(value: String): HttpMethod","description":"com.hexagontk.http.model.HttpMethod.valueOf","location":"http/http/com.hexagontk.http.model/-http-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpMethod","com.hexagontk.http.model.HttpMethod.valueOf"]},{"name":"fun valueOf(value: String): HttpProtocol","description":"com.hexagontk.http.model.HttpProtocol.valueOf","location":"http/http/com.hexagontk.http.model/-http-protocol/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HttpProtocol","com.hexagontk.http.model.HttpProtocol.valueOf"]},{"name":"fun values(): Array<CookieSameSite>","description":"com.hexagontk.http.model.CookieSameSite.values","location":"http/http/com.hexagontk.http.model/-cookie-same-site/values.html","searchKeys":["values","fun values(): Array<CookieSameSite>","com.hexagontk.http.model.CookieSameSite.values"]},{"name":"fun values(): Array<HttpFeature>","description":"com.hexagontk.http.HttpFeature.values","location":"http/http/com.hexagontk.http/-http-feature/values.html","searchKeys":["values","fun values(): Array<HttpFeature>","com.hexagontk.http.HttpFeature.values"]},{"name":"fun values(): Array<HttpMethod>","description":"com.hexagontk.http.model.HttpMethod.values","location":"http/http/com.hexagontk.http.model/-http-method/values.html","searchKeys":["values","fun values(): Array<HttpMethod>","com.hexagontk.http.model.HttpMethod.values"]},{"name":"fun values(): Array<HttpProtocol>","description":"com.hexagontk.http.model.HttpProtocol.values","location":"http/http/com.hexagontk.http.model/-http-protocol/values.html","searchKeys":["values","fun values(): Array<HttpProtocol>","com.hexagontk.http.model.HttpProtocol.values"]},{"name":"fun with(name: String = this.name, body: Any = this.body, headers: Headers = this.headers, contentType: ContentType? = this.contentType, size: Long = this.size, submittedFileName: String? = this.submittedFileName): HttpPart","description":"com.hexagontk.http.model.HttpPart.with","location":"http/http/com.hexagontk.http.model/-http-part/with.html","searchKeys":["with","fun with(name: String = this.name, body: Any = this.body, headers: Headers = this.headers, contentType: ContentType? = this.contentType, size: Long = this.size, submittedFileName: String? = this.submittedFileName): HttpPart","com.hexagontk.http.model.HttpPart.with"]},{"name":"fun with(name: String = this.name, value: String = this.value, maxAge: Long = this.maxAge, secure: Boolean = this.secure, path: String = this.path, httpOnly: Boolean = this.httpOnly, domain: String? = this.domain, sameSite: CookieSameSite? = this.sameSite, expires: Instant? = this.expires): Cookie","description":"com.hexagontk.http.model.Cookie.with","location":"http/http/com.hexagontk.http.model/-cookie/with.html","searchKeys":["with","fun with(name: String = this.name, value: String = this.value, maxAge: Long = this.maxAge, secure: Boolean = this.secure, path: String = this.path, httpOnly: Boolean = this.httpOnly, domain: String? = this.domain, sameSite: CookieSameSite? = this.sameSite, expires: Instant? = this.expires): Cookie","com.hexagontk.http.model.Cookie.with"]},{"name":"interface HttpBase","description":"com.hexagontk.http.model.HttpBase","location":"http/http/com.hexagontk.http.model/-http-base/index.html","searchKeys":["HttpBase","interface HttpBase","com.hexagontk.http.model.HttpBase"]},{"name":"interface HttpField","description":"com.hexagontk.http.model.HttpField","location":"http/http/com.hexagontk.http.model/-http-field/index.html","searchKeys":["HttpField","interface HttpField","com.hexagontk.http.model.HttpField"]},{"name":"interface HttpMessage : HttpBase","description":"com.hexagontk.http.model.HttpMessage","location":"http/http/com.hexagontk.http.model/-http-message/index.html","searchKeys":["HttpMessage","interface HttpMessage : HttpBase","com.hexagontk.http.model.HttpMessage"]},{"name":"interface HttpRequestPort : HttpMessage","description":"com.hexagontk.http.model.HttpRequestPort","location":"http/http/com.hexagontk.http.model/-http-request-port/index.html","searchKeys":["HttpRequestPort","interface HttpRequestPort : HttpMessage","com.hexagontk.http.model.HttpRequestPort"]},{"name":"interface HttpResponsePort : HttpMessage","description":"com.hexagontk.http.model.HttpResponsePort","location":"http/http/com.hexagontk.http.model/-http-response-port/index.html","searchKeys":["HttpResponsePort","interface HttpResponsePort : HttpMessage","com.hexagontk.http.model.HttpResponsePort"]},{"name":"interface PathPattern","description":"com.hexagontk.http.patterns.PathPattern","location":"http/http/com.hexagontk.http.patterns/-path-pattern/index.html","searchKeys":["PathPattern","interface PathPattern","com.hexagontk.http.patterns.PathPattern"]},{"name":"interface WsSession","description":"com.hexagontk.http.model.ws.WsSession","location":"http/http/com.hexagontk.http.model.ws/-ws-session/index.html","searchKeys":["WsSession","interface WsSession","com.hexagontk.http.model.ws.WsSession"]},{"name":"object Companion","description":"com.hexagontk.http.model.HttpMethod.Companion","location":"http/http/com.hexagontk.http.model/-http-method/-companion/index.html","searchKeys":["Companion","object Companion","com.hexagontk.http.model.HttpMethod.Companion"]},{"name":"open fun authorization(): Authorization?","description":"com.hexagontk.http.model.HttpRequestPort.authorization","location":"http/http/com.hexagontk.http.model/-http-request-port/authorization.html","searchKeys":["authorization","open fun authorization(): Authorization?","com.hexagontk.http.model.HttpRequestPort.authorization"]},{"name":"open fun bodyString(): String","description":"com.hexagontk.http.model.HttpBase.bodyString","location":"http/http/com.hexagontk.http.model/-http-base/body-string.html","searchKeys":["bodyString","open fun bodyString(): String","com.hexagontk.http.model.HttpBase.bodyString"]},{"name":"open fun certificate(): X509Certificate?","description":"com.hexagontk.http.model.HttpRequestPort.certificate","location":"http/http/com.hexagontk.http.model/-http-request-port/certificate.html","searchKeys":["certificate","open fun certificate(): X509Certificate?","com.hexagontk.http.model.HttpRequestPort.certificate"]},{"name":"open fun cookiesMap(): Map<String, Cookie>","description":"com.hexagontk.http.model.HttpMessage.cookiesMap","location":"http/http/com.hexagontk.http.model/-http-message/cookies-map.html","searchKeys":["cookiesMap","open fun cookiesMap(): Map<String, Cookie>","com.hexagontk.http.model.HttpMessage.cookiesMap"]},{"name":"open fun describe(): String","description":"com.hexagontk.http.patterns.PathPattern.describe","location":"http/http/com.hexagontk.http.patterns/-path-pattern/describe.html","searchKeys":["describe","open fun describe(): String","com.hexagontk.http.patterns.PathPattern.describe"]},{"name":"open fun insertParameters(parameters: Map<String, Any>): String","description":"com.hexagontk.http.patterns.PathPattern.insertParameters","location":"http/http/com.hexagontk.http.patterns/-path-pattern/insert-parameters.html","searchKeys":["insertParameters","open fun insertParameters(parameters: Map<String, Any>): String","com.hexagontk.http.patterns.PathPattern.insertParameters"]},{"name":"open fun origin(): String?","description":"com.hexagontk.http.model.HttpRequestPort.origin","location":"http/http/com.hexagontk.http.model/-http-request-port/origin.html","searchKeys":["origin","open fun origin(): String?","com.hexagontk.http.model.HttpRequestPort.origin"]},{"name":"open fun partsMap(): Map<String, HttpPart>","description":"com.hexagontk.http.model.HttpRequestPort.partsMap","location":"http/http/com.hexagontk.http.model/-http-request-port/parts-map.html","searchKeys":["partsMap","open fun partsMap(): Map<String, HttpPart>","com.hexagontk.http.model.HttpRequestPort.partsMap"]},{"name":"open fun referer(): String?","description":"com.hexagontk.http.model.HttpRequestPort.referer","location":"http/http/com.hexagontk.http.model/-http-request-port/referer.html","searchKeys":["referer","open fun referer(): String?","com.hexagontk.http.model.HttpRequestPort.referer"]},{"name":"open fun uri(): URI","description":"com.hexagontk.http.model.HttpRequestPort.uri","location":"http/http/com.hexagontk.http.model/-http-request-port/uri.html","searchKeys":["uri","open fun uri(): URI","com.hexagontk.http.model.HttpRequestPort.uri"]},{"name":"open fun userAgent(): String?","description":"com.hexagontk.http.model.HttpRequestPort.userAgent","location":"http/http/com.hexagontk.http.model/-http-request-port/user-agent.html","searchKeys":["userAgent","open fun userAgent(): String?","com.hexagontk.http.model.HttpRequestPort.userAgent"]},{"name":"open operator fun plus(cookie: Cookie): HttpRequestPort","description":"com.hexagontk.http.model.HttpRequestPort.plus","location":"http/http/com.hexagontk.http.model/-http-request-port/plus.html","searchKeys":["plus","open operator fun plus(cookie: Cookie): HttpRequestPort","com.hexagontk.http.model.HttpRequestPort.plus"]},{"name":"open operator fun plus(cookie: Cookie): HttpResponsePort","description":"com.hexagontk.http.model.HttpResponsePort.plus","location":"http/http/com.hexagontk.http.model/-http-response-port/plus.html","searchKeys":["plus","open operator fun plus(cookie: Cookie): HttpResponsePort","com.hexagontk.http.model.HttpResponsePort.plus"]},{"name":"open operator fun plus(cookies: List<Cookie>): HttpResponsePort","description":"com.hexagontk.http.model.HttpResponsePort.plus","location":"http/http/com.hexagontk.http.model/-http-response-port/plus.html","searchKeys":["plus","open operator fun plus(cookies: List<Cookie>): HttpResponsePort","com.hexagontk.http.model.HttpResponsePort.plus"]},{"name":"open operator fun plus(header: HttpField): HttpRequestPort","description":"com.hexagontk.http.model.HttpRequestPort.plus","location":"http/http/com.hexagontk.http.model/-http-request-port/plus.html","searchKeys":["plus","open operator fun plus(header: HttpField): HttpRequestPort","com.hexagontk.http.model.HttpRequestPort.plus"]},{"name":"open operator fun plus(header: HttpField): HttpResponsePort","description":"com.hexagontk.http.model.HttpResponsePort.plus","location":"http/http/com.hexagontk.http.model/-http-response-port/plus.html","searchKeys":["plus","open operator fun plus(header: HttpField): HttpResponsePort","com.hexagontk.http.model.HttpResponsePort.plus"]},{"name":"open operator fun plus(headers: Headers): HttpRequestPort","description":"com.hexagontk.http.model.HttpRequestPort.plus","location":"http/http/com.hexagontk.http.model/-http-request-port/plus.html","searchKeys":["plus","open operator fun plus(headers: Headers): HttpRequestPort","com.hexagontk.http.model.HttpRequestPort.plus"]},{"name":"open operator fun plus(headers: Headers): HttpResponsePort","description":"com.hexagontk.http.model.HttpResponsePort.plus","location":"http/http/com.hexagontk.http.model/-http-response-port/plus.html","searchKeys":["plus","open operator fun plus(headers: Headers): HttpResponsePort","com.hexagontk.http.model.HttpResponsePort.plus"]},{"name":"open operator fun plus(part: HttpPart): HttpRequestPort","description":"com.hexagontk.http.model.HttpRequestPort.plus","location":"http/http/com.hexagontk.http.model/-http-request-port/plus.html","searchKeys":["plus","open operator fun plus(part: HttpPart): HttpRequestPort","com.hexagontk.http.model.HttpRequestPort.plus"]},{"name":"open override fun addPrefix(prefix: String?): PathPattern","description":"com.hexagontk.http.patterns.LiteralPathPattern.addPrefix","location":"http/http/com.hexagontk.http.patterns/-literal-path-pattern/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String?): PathPattern","com.hexagontk.http.patterns.LiteralPathPattern.addPrefix"]},{"name":"open override fun addPrefix(prefix: String?): PathPattern","description":"com.hexagontk.http.patterns.RegexPathPattern.addPrefix","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String?): PathPattern","com.hexagontk.http.patterns.RegexPathPattern.addPrefix"]},{"name":"open override fun addPrefix(prefix: String?): PathPattern","description":"com.hexagontk.http.patterns.WildcardPathPattern.addPrefix","location":"http/http/com.hexagontk.http.patterns/-wildcard-path-pattern/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String?): PathPattern","com.hexagontk.http.patterns.WildcardPathPattern.addPrefix"]},{"name":"open override fun extractParameters(requestUri: String): Map<String, String>","description":"com.hexagontk.http.patterns.RegexPathPattern.extractParameters","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/extract-parameters.html","searchKeys":["extractParameters","open override fun extractParameters(requestUri: String): Map<String, String>","com.hexagontk.http.patterns.RegexPathPattern.extractParameters"]},{"name":"open override fun extractParameters(requestUrl: String): Map<String, String>","description":"com.hexagontk.http.patterns.LiteralPathPattern.extractParameters","location":"http/http/com.hexagontk.http.patterns/-literal-path-pattern/extract-parameters.html","searchKeys":["extractParameters","open override fun extractParameters(requestUrl: String): Map<String, String>","com.hexagontk.http.patterns.LiteralPathPattern.extractParameters"]},{"name":"open override fun extractParameters(requestUrl: String): Map<String, String>","description":"com.hexagontk.http.patterns.WildcardPathPattern.extractParameters","location":"http/http/com.hexagontk.http.patterns/-wildcard-path-pattern/extract-parameters.html","searchKeys":["extractParameters","open override fun extractParameters(requestUrl: String): Map<String, String>","com.hexagontk.http.patterns.WildcardPathPattern.extractParameters"]},{"name":"open override fun insertParameters(parameters: Map<String, Any>): String","description":"com.hexagontk.http.patterns.RegexPathPattern.insertParameters","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/insert-parameters.html","searchKeys":["insertParameters","open override fun insertParameters(parameters: Map<String, Any>): String","com.hexagontk.http.patterns.RegexPathPattern.insertParameters"]},{"name":"open override fun insertParameters(parameters: Map<String, Any>): String","description":"com.hexagontk.http.patterns.TemplatePathPattern.insertParameters","location":"http/http/com.hexagontk.http.patterns/-template-path-pattern/insert-parameters.html","searchKeys":["insertParameters","open override fun insertParameters(parameters: Map<String, Any>): String","com.hexagontk.http.patterns.TemplatePathPattern.insertParameters"]},{"name":"open override fun matches(requestUri: String): Boolean","description":"com.hexagontk.http.patterns.LiteralPathPattern.matches","location":"http/http/com.hexagontk.http.patterns/-literal-path-pattern/matches.html","searchKeys":["matches","open override fun matches(requestUri: String): Boolean","com.hexagontk.http.patterns.LiteralPathPattern.matches"]},{"name":"open override fun matches(requestUri: String): Boolean","description":"com.hexagontk.http.patterns.RegexPathPattern.matches","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/matches.html","searchKeys":["matches","open override fun matches(requestUri: String): Boolean","com.hexagontk.http.patterns.RegexPathPattern.matches"]},{"name":"open override fun matches(requestUri: String): Boolean","description":"com.hexagontk.http.patterns.WildcardPathPattern.matches","location":"http/http/com.hexagontk.http.patterns/-wildcard-path-pattern/matches.html","searchKeys":["matches","open override fun matches(requestUri: String): Boolean","com.hexagontk.http.patterns.WildcardPathPattern.matches"]},{"name":"open override fun with(body: Any, headers: Headers, contentType: ContentType?, method: HttpMethod, protocol: HttpProtocol, host: String, port: Int, path: String, queryParameters: Parameters, parts: List<HttpPart>, formParameters: Parameters, cookies: List<Cookie>, accept: List<ContentType>, authorization: Authorization?, certificateChain: List<X509Certificate>, pathPattern: PathPattern?, pathParameters: Map<String, Any>): HttpRequestPort","description":"com.hexagontk.http.model.HttpRequest.with","location":"http/http/com.hexagontk.http.model/-http-request/with.html","searchKeys":["with","open override fun with(body: Any, headers: Headers, contentType: ContentType?, method: HttpMethod, protocol: HttpProtocol, host: String, port: Int, path: String, queryParameters: Parameters, parts: List<HttpPart>, formParameters: Parameters, cookies: List<Cookie>, accept: List<ContentType>, authorization: Authorization?, certificateChain: List<X509Certificate>, pathPattern: PathPattern?, pathParameters: Map<String, Any>): HttpRequestPort","com.hexagontk.http.model.HttpRequest.with"]},{"name":"open override fun with(status: Int, body: Any, headers: Headers, contentType: ContentType?, cookies: List<Cookie>, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): HttpResponsePort","description":"com.hexagontk.http.model.HttpResponse.with","location":"http/http/com.hexagontk.http.model/-http-response/with.html","searchKeys":["with","open override fun with(status: Int, body: Any, headers: Headers, contentType: ContentType?, cookies: List<Cookie>, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): HttpResponsePort","com.hexagontk.http.model.HttpResponse.with"]},{"name":"open override val accept: List<ContentType>","description":"com.hexagontk.http.model.HttpRequest.accept","location":"http/http/com.hexagontk.http.model/-http-request/accept.html","searchKeys":["accept","open override val accept: List<ContentType>","com.hexagontk.http.model.HttpRequest.accept"]},{"name":"open override val authorization: Authorization? = null","description":"com.hexagontk.http.model.HttpRequest.authorization","location":"http/http/com.hexagontk.http.model/-http-request/authorization.html","searchKeys":["authorization","open override val authorization: Authorization? = null","com.hexagontk.http.model.HttpRequest.authorization"]},{"name":"open override val body: Any","description":"com.hexagontk.http.model.HttpPart.body","location":"http/http/com.hexagontk.http.model/-http-part/body.html","searchKeys":["body","open override val body: Any","com.hexagontk.http.model.HttpPart.body"]},{"name":"open override val body: Any","description":"com.hexagontk.http.model.HttpRequest.body","location":"http/http/com.hexagontk.http.model/-http-request/body.html","searchKeys":["body","open override val body: Any","com.hexagontk.http.model.HttpRequest.body"]},{"name":"open override val body: Any","description":"com.hexagontk.http.model.HttpResponse.body","location":"http/http/com.hexagontk.http.model/-http-response/body.html","searchKeys":["body","open override val body: Any","com.hexagontk.http.model.HttpResponse.body"]},{"name":"open override val certificateChain: List<X509Certificate>","description":"com.hexagontk.http.model.HttpRequest.certificateChain","location":"http/http/com.hexagontk.http.model/-http-request/certificate-chain.html","searchKeys":["certificateChain","open override val certificateChain: List<X509Certificate>","com.hexagontk.http.model.HttpRequest.certificateChain"]},{"name":"open override val contentLength: Long","description":"com.hexagontk.http.model.HttpRequest.contentLength","location":"http/http/com.hexagontk.http.model/-http-request/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.hexagontk.http.model.HttpRequest.contentLength"]},{"name":"open override val contentLength: Long","description":"com.hexagontk.http.model.HttpResponse.contentLength","location":"http/http/com.hexagontk.http.model/-http-response/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.hexagontk.http.model.HttpResponse.contentLength"]},{"name":"open override val contentType: ContentType? = null","description":"com.hexagontk.http.model.HttpPart.contentType","location":"http/http/com.hexagontk.http.model/-http-part/content-type.html","searchKeys":["contentType","open override val contentType: ContentType? = null","com.hexagontk.http.model.HttpPart.contentType"]},{"name":"open override val contentType: ContentType? = null","description":"com.hexagontk.http.model.HttpRequest.contentType","location":"http/http/com.hexagontk.http.model/-http-request/content-type.html","searchKeys":["contentType","open override val contentType: ContentType? = null","com.hexagontk.http.model.HttpRequest.contentType"]},{"name":"open override val contentType: ContentType? = null","description":"com.hexagontk.http.model.HttpResponse.contentType","location":"http/http/com.hexagontk.http.model/-http-response/content-type.html","searchKeys":["contentType","open override val contentType: ContentType? = null","com.hexagontk.http.model.HttpResponse.contentType"]},{"name":"open override val cookies: List<Cookie>","description":"com.hexagontk.http.model.HttpRequest.cookies","location":"http/http/com.hexagontk.http.model/-http-request/cookies.html","searchKeys":["cookies","open override val cookies: List<Cookie>","com.hexagontk.http.model.HttpRequest.cookies"]},{"name":"open override val cookies: List<Cookie>","description":"com.hexagontk.http.model.HttpResponse.cookies","location":"http/http/com.hexagontk.http.model/-http-response/cookies.html","searchKeys":["cookies","open override val cookies: List<Cookie>","com.hexagontk.http.model.HttpResponse.cookies"]},{"name":"open override val formParameters: Parameters","description":"com.hexagontk.http.model.HttpRequest.formParameters","location":"http/http/com.hexagontk.http.model/-http-request/form-parameters.html","searchKeys":["formParameters","open override val formParameters: Parameters","com.hexagontk.http.model.HttpRequest.formParameters"]},{"name":"open override val headers: Headers","description":"com.hexagontk.http.model.HttpPart.headers","location":"http/http/com.hexagontk.http.model/-http-part/headers.html","searchKeys":["headers","open override val headers: Headers","com.hexagontk.http.model.HttpPart.headers"]},{"name":"open override val headers: Headers","description":"com.hexagontk.http.model.HttpRequest.headers","location":"http/http/com.hexagontk.http.model/-http-request/headers.html","searchKeys":["headers","open override val headers: Headers","com.hexagontk.http.model.HttpRequest.headers"]},{"name":"open override val headers: Headers","description":"com.hexagontk.http.model.HttpResponse.headers","location":"http/http/com.hexagontk.http.model/-http-response/headers.html","searchKeys":["headers","open override val headers: Headers","com.hexagontk.http.model.HttpResponse.headers"]},{"name":"open override val host: String","description":"com.hexagontk.http.model.HttpRequest.host","location":"http/http/com.hexagontk.http.model/-http-request/host.html","searchKeys":["host","open override val host: String","com.hexagontk.http.model.HttpRequest.host"]},{"name":"open override val method: HttpMethod","description":"com.hexagontk.http.model.HttpRequest.method","location":"http/http/com.hexagontk.http.model/-http-request/method.html","searchKeys":["method","open override val method: HttpMethod","com.hexagontk.http.model.HttpRequest.method"]},{"name":"open override val name: String","description":"com.hexagontk.http.model.Authorization.name","location":"http/http/com.hexagontk.http.model/-authorization/name.html","searchKeys":["name","open override val name: String","com.hexagontk.http.model.Authorization.name"]},{"name":"open override val name: String","description":"com.hexagontk.http.model.ContentType.name","location":"http/http/com.hexagontk.http.model/-content-type/name.html","searchKeys":["name","open override val name: String","com.hexagontk.http.model.ContentType.name"]},{"name":"open override val name: String","description":"com.hexagontk.http.model.Field.name","location":"http/http/com.hexagontk.http.model/-field/name.html","searchKeys":["name","open override val name: String","com.hexagontk.http.model.Field.name"]},{"name":"open override val onBinary: WsSession.(data: ByteArray) -> Unit","description":"com.hexagontk.http.model.HttpResponse.onBinary","location":"http/http/com.hexagontk.http.model/-http-response/on-binary.html","searchKeys":["onBinary","open override val onBinary: WsSession.(data: ByteArray) -> Unit","com.hexagontk.http.model.HttpResponse.onBinary"]},{"name":"open override val onClose: WsSession.(status: Int, reason: String) -> Unit","description":"com.hexagontk.http.model.HttpResponse.onClose","location":"http/http/com.hexagontk.http.model/-http-response/on-close.html","searchKeys":["onClose","open override val onClose: WsSession.(status: Int, reason: String) -> Unit","com.hexagontk.http.model.HttpResponse.onClose"]},{"name":"open override val onConnect: WsSession.() -> Unit","description":"com.hexagontk.http.model.HttpResponse.onConnect","location":"http/http/com.hexagontk.http.model/-http-response/on-connect.html","searchKeys":["onConnect","open override val onConnect: WsSession.() -> Unit","com.hexagontk.http.model.HttpResponse.onConnect"]},{"name":"open override val onPing: WsSession.(data: ByteArray) -> Unit","description":"com.hexagontk.http.model.HttpResponse.onPing","location":"http/http/com.hexagontk.http.model/-http-response/on-ping.html","searchKeys":["onPing","open override val onPing: WsSession.(data: ByteArray) -> Unit","com.hexagontk.http.model.HttpResponse.onPing"]},{"name":"open override val onPong: WsSession.(data: ByteArray) -> Unit","description":"com.hexagontk.http.model.HttpResponse.onPong","location":"http/http/com.hexagontk.http.model/-http-response/on-pong.html","searchKeys":["onPong","open override val onPong: WsSession.(data: ByteArray) -> Unit","com.hexagontk.http.model.HttpResponse.onPong"]},{"name":"open override val onText: WsSession.(text: String) -> Unit","description":"com.hexagontk.http.model.HttpResponse.onText","location":"http/http/com.hexagontk.http.model/-http-response/on-text.html","searchKeys":["onText","open override val onText: WsSession.(text: String) -> Unit","com.hexagontk.http.model.HttpResponse.onText"]},{"name":"open override val parts: List<HttpPart>","description":"com.hexagontk.http.model.HttpRequest.parts","location":"http/http/com.hexagontk.http.model/-http-request/parts.html","searchKeys":["parts","open override val parts: List<HttpPart>","com.hexagontk.http.model.HttpRequest.parts"]},{"name":"open override val path: String","description":"com.hexagontk.http.model.HttpRequest.path","location":"http/http/com.hexagontk.http.model/-http-request/path.html","searchKeys":["path","open override val path: String","com.hexagontk.http.model.HttpRequest.path"]},{"name":"open override val pathParameters: Map<String, Any>","description":"com.hexagontk.http.model.HttpRequest.pathParameters","location":"http/http/com.hexagontk.http.model/-http-request/path-parameters.html","searchKeys":["pathParameters","open override val pathParameters: Map<String, Any>","com.hexagontk.http.model.HttpRequest.pathParameters"]},{"name":"open override val pathPattern: PathPattern? = null","description":"com.hexagontk.http.model.HttpRequest.pathPattern","location":"http/http/com.hexagontk.http.model/-http-request/path-pattern.html","searchKeys":["pathPattern","open override val pathPattern: PathPattern? = null","com.hexagontk.http.model.HttpRequest.pathPattern"]},{"name":"open override val pattern: String","description":"com.hexagontk.http.patterns.LiteralPathPattern.pattern","location":"http/http/com.hexagontk.http.patterns/-literal-path-pattern/pattern.html","searchKeys":["pattern","open override val pattern: String","com.hexagontk.http.patterns.LiteralPathPattern.pattern"]},{"name":"open override val pattern: String","description":"com.hexagontk.http.patterns.RegexPathPattern.pattern","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/pattern.html","searchKeys":["pattern","open override val pattern: String","com.hexagontk.http.patterns.RegexPathPattern.pattern"]},{"name":"open override val pattern: String","description":"com.hexagontk.http.patterns.TemplatePathPattern.pattern","location":"http/http/com.hexagontk.http.patterns/-template-path-pattern/pattern.html","searchKeys":["pattern","open override val pattern: String","com.hexagontk.http.patterns.TemplatePathPattern.pattern"]},{"name":"open override val pattern: String","description":"com.hexagontk.http.patterns.WildcardPathPattern.pattern","location":"http/http/com.hexagontk.http.patterns/-wildcard-path-pattern/pattern.html","searchKeys":["pattern","open override val pattern: String","com.hexagontk.http.patterns.WildcardPathPattern.pattern"]},{"name":"open override val port: Int = 80","description":"com.hexagontk.http.model.HttpRequest.port","location":"http/http/com.hexagontk.http.model/-http-request/port.html","searchKeys":["port","open override val port: Int = 80","com.hexagontk.http.model.HttpRequest.port"]},{"name":"open override val prefix: Boolean","description":"com.hexagontk.http.patterns.RegexPathPattern.prefix","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/prefix.html","searchKeys":["prefix","open override val prefix: Boolean","com.hexagontk.http.patterns.RegexPathPattern.prefix"]},{"name":"open override val prefix: Boolean = false","description":"com.hexagontk.http.patterns.LiteralPathPattern.prefix","location":"http/http/com.hexagontk.http.patterns/-literal-path-pattern/prefix.html","searchKeys":["prefix","open override val prefix: Boolean = false","com.hexagontk.http.patterns.LiteralPathPattern.prefix"]},{"name":"open override val prefix: Boolean = false","description":"com.hexagontk.http.patterns.TemplatePathPattern.prefix","location":"http/http/com.hexagontk.http.patterns/-template-path-pattern/prefix.html","searchKeys":["prefix","open override val prefix: Boolean = false","com.hexagontk.http.patterns.TemplatePathPattern.prefix"]},{"name":"open override val prefix: Boolean = false","description":"com.hexagontk.http.patterns.WildcardPathPattern.prefix","location":"http/http/com.hexagontk.http.patterns/-wildcard-path-pattern/prefix.html","searchKeys":["prefix","open override val prefix: Boolean = false","com.hexagontk.http.patterns.WildcardPathPattern.prefix"]},{"name":"open override val protocol: HttpProtocol","description":"com.hexagontk.http.model.HttpRequest.protocol","location":"http/http/com.hexagontk.http.model/-http-request/protocol.html","searchKeys":["protocol","open override val protocol: HttpProtocol","com.hexagontk.http.model.HttpRequest.protocol"]},{"name":"open override val queryParameters: Parameters","description":"com.hexagontk.http.model.HttpRequest.queryParameters","location":"http/http/com.hexagontk.http.model/-http-request/query-parameters.html","searchKeys":["queryParameters","open override val queryParameters: Parameters","com.hexagontk.http.model.HttpRequest.queryParameters"]},{"name":"open override val reason: String","description":"com.hexagontk.http.model.HttpResponse.reason","location":"http/http/com.hexagontk.http.model/-http-response/reason.html","searchKeys":["reason","open override val reason: String","com.hexagontk.http.model.HttpResponse.reason"]},{"name":"open override val status: Int","description":"com.hexagontk.http.model.HttpResponse.status","location":"http/http/com.hexagontk.http.model/-http-response/status.html","searchKeys":["status","open override val status: Int","com.hexagontk.http.model.HttpResponse.status"]},{"name":"open override val text: String","description":"com.hexagontk.http.model.Authorization.text","location":"http/http/com.hexagontk.http.model/-authorization/text.html","searchKeys":["text","open override val text: String","com.hexagontk.http.model.Authorization.text"]},{"name":"open override val text: String","description":"com.hexagontk.http.model.ContentType.text","location":"http/http/com.hexagontk.http.model/-content-type/text.html","searchKeys":["text","open override val text: String","com.hexagontk.http.model.ContentType.text"]},{"name":"open override val text: String","description":"com.hexagontk.http.model.Field.text","location":"http/http/com.hexagontk.http.model/-field/text.html","searchKeys":["text","open override val text: String","com.hexagontk.http.model.Field.text"]},{"name":"open override val value: Any? = null","description":"com.hexagontk.http.model.Field.value","location":"http/http/com.hexagontk.http.model/-field/value.html","searchKeys":["value","open override val value: Any? = null","com.hexagontk.http.model.Field.value"]},{"name":"open override val value: String","description":"com.hexagontk.http.model.Authorization.value","location":"http/http/com.hexagontk.http.model/-authorization/value.html","searchKeys":["value","open override val value: String","com.hexagontk.http.model.Authorization.value"]},{"name":"open override val value: String","description":"com.hexagontk.http.model.ContentType.value","location":"http/http/com.hexagontk.http.model/-content-type/value.html","searchKeys":["value","open override val value: String","com.hexagontk.http.model.ContentType.value"]},{"name":"operator fun get(key: String): HttpField?","description":"com.hexagontk.http.model.HttpFields.get","location":"http/http/com.hexagontk.http.model/-http-fields/get.html","searchKeys":["get","operator fun get(key: String): HttpField?","com.hexagontk.http.model.HttpFields.get"]},{"name":"operator fun minus(name: String): Headers","description":"com.hexagontk.http.model.Headers.minus","location":"http/http/com.hexagontk.http.model/-headers/minus.html","searchKeys":["minus","operator fun minus(name: String): Headers","com.hexagontk.http.model.Headers.minus"]},{"name":"operator fun minus(name: String): Parameters","description":"com.hexagontk.http.model.Parameters.minus","location":"http/http/com.hexagontk.http.model/-parameters/minus.html","searchKeys":["minus","operator fun minus(name: String): Parameters","com.hexagontk.http.model.Parameters.minus"]},{"name":"operator fun plus(element: Headers): Headers","description":"com.hexagontk.http.model.Headers.plus","location":"http/http/com.hexagontk.http.model/-headers/plus.html","searchKeys":["plus","operator fun plus(element: Headers): Headers","com.hexagontk.http.model.Headers.plus"]},{"name":"operator fun plus(element: HttpField): Headers","description":"com.hexagontk.http.model.Headers.plus","location":"http/http/com.hexagontk.http.model/-headers/plus.html","searchKeys":["plus","operator fun plus(element: HttpField): Headers","com.hexagontk.http.model.Headers.plus"]},{"name":"operator fun plus(element: HttpField): Parameters","description":"com.hexagontk.http.model.Parameters.plus","location":"http/http/com.hexagontk.http.model/-parameters/plus.html","searchKeys":["plus","operator fun plus(element: HttpField): Parameters","com.hexagontk.http.model.Parameters.plus"]},{"name":"operator fun plus(element: Parameters): Parameters","description":"com.hexagontk.http.model.Parameters.plus","location":"http/http/com.hexagontk.http.model/-parameters/plus.html","searchKeys":["plus","operator fun plus(element: Parameters): Parameters","com.hexagontk.http.model.Parameters.plus"]},{"name":"typealias Header = Field","description":"com.hexagontk.http.model.Header","location":"http/http/com.hexagontk.http.model/-header/index.html","searchKeys":["Header","typealias Header = Field","com.hexagontk.http.model.Header"]},{"name":"typealias Parameter = Field","description":"com.hexagontk.http.model.Parameter","location":"http/http/com.hexagontk.http.model/-parameter/index.html","searchKeys":["Parameter","typealias Parameter = Field","com.hexagontk.http.model.Parameter"]},{"name":"val ALL: Set<HttpMethod>","description":"com.hexagontk.http.model.HttpMethod.Companion.ALL","location":"http/http/com.hexagontk.http.model/-http-method/-companion/-a-l-l.html","searchKeys":["ALL","val ALL: Set<HttpMethod>","com.hexagontk.http.model.HttpMethod.Companion.ALL"]},{"name":"val CLIENT_ERROR: IntRange","description":"com.hexagontk.http.model.CLIENT_ERROR","location":"http/http/com.hexagontk.http.model/-c-l-i-e-n-t_-e-r-r-o-r.html","searchKeys":["CLIENT_ERROR","val CLIENT_ERROR: IntRange","com.hexagontk.http.model.CLIENT_ERROR"]},{"name":"val INFORMATION: IntRange","description":"com.hexagontk.http.model.INFORMATION","location":"http/http/com.hexagontk.http.model/-i-n-f-o-r-m-a-t-i-o-n.html","searchKeys":["INFORMATION","val INFORMATION: IntRange","com.hexagontk.http.model.INFORMATION"]},{"name":"val REDIRECTION: IntRange","description":"com.hexagontk.http.model.REDIRECTION","location":"http/http/com.hexagontk.http.model/-r-e-d-i-r-e-c-t-i-o-n.html","searchKeys":["REDIRECTION","val REDIRECTION: IntRange","com.hexagontk.http.model.REDIRECTION"]},{"name":"val SERVER_ERROR: IntRange","description":"com.hexagontk.http.model.SERVER_ERROR","location":"http/http/com.hexagontk.http.model/-s-e-r-v-e-r_-e-r-r-o-r.html","searchKeys":["SERVER_ERROR","val SERVER_ERROR: IntRange","com.hexagontk.http.model.SERVER_ERROR"]},{"name":"val SUCCESS: IntRange","description":"com.hexagontk.http.model.SUCCESS","location":"http/http/com.hexagontk.http.model/-s-u-c-c-e-s-s.html","searchKeys":["SUCCESS","val SUCCESS: IntRange","com.hexagontk.http.model.SUCCESS"]},{"name":"val all: Map<String, List<HttpField>>","description":"com.hexagontk.http.model.HttpFields.all","location":"http/http/com.hexagontk.http.model/-http-fields/all.html","searchKeys":["all","val all: Map<String, List<HttpField>>","com.hexagontk.http.model.HttpFields.all"]},{"name":"val body: String","description":"com.hexagontk.http.model.Authorization.body","location":"http/http/com.hexagontk.http.model/-authorization/body.html","searchKeys":["body","val body: String","com.hexagontk.http.model.Authorization.body"]},{"name":"val boundary: String? = null","description":"com.hexagontk.http.model.ContentType.boundary","location":"http/http/com.hexagontk.http.model/-content-type/boundary.html","searchKeys":["boundary","val boundary: String? = null","com.hexagontk.http.model.ContentType.boundary"]},{"name":"val charset: Charset? = null","description":"com.hexagontk.http.model.ContentType.charset","location":"http/http/com.hexagontk.http.model/-content-type/charset.html","searchKeys":["charset","val charset: Charset? = null","com.hexagontk.http.model.ContentType.charset"]},{"name":"val clientAuth: Boolean = false","description":"com.hexagontk.http.SslSettings.clientAuth","location":"http/http/com.hexagontk.http/-ssl-settings/client-auth.html","searchKeys":["clientAuth","val clientAuth: Boolean = false","com.hexagontk.http.SslSettings.clientAuth"]},{"name":"val data: String? = null","description":"com.hexagontk.http.model.ServerEvent.data","location":"http/http/com.hexagontk.http.model/-server-event/data.html","searchKeys":["data","val data: String? = null","com.hexagontk.http.model.ServerEvent.data"]},{"name":"val deleted: Boolean","description":"com.hexagontk.http.model.Cookie.deleted","location":"http/http/com.hexagontk.http.model/-cookie/deleted.html","searchKeys":["deleted","val deleted: Boolean","com.hexagontk.http.model.Cookie.deleted"]},{"name":"val domain: String? = null","description":"com.hexagontk.http.model.Cookie.domain","location":"http/http/com.hexagontk.http.model/-cookie/domain.html","searchKeys":["domain","val domain: String? = null","com.hexagontk.http.model.Cookie.domain"]},{"name":"val entries: EnumEntries<CookieSameSite>","description":"com.hexagontk.http.model.CookieSameSite.entries","location":"http/http/com.hexagontk.http.model/-cookie-same-site/entries.html","searchKeys":["entries","val entries: EnumEntries<CookieSameSite>","com.hexagontk.http.model.CookieSameSite.entries"]},{"name":"val entries: EnumEntries<HttpFeature>","description":"com.hexagontk.http.HttpFeature.entries","location":"http/http/com.hexagontk.http/-http-feature/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpFeature>","com.hexagontk.http.HttpFeature.entries"]},{"name":"val entries: EnumEntries<HttpMethod>","description":"com.hexagontk.http.model.HttpMethod.entries","location":"http/http/com.hexagontk.http.model/-http-method/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpMethod>","com.hexagontk.http.model.HttpMethod.entries"]},{"name":"val entries: EnumEntries<HttpProtocol>","description":"com.hexagontk.http.model.HttpProtocol.entries","location":"http/http/com.hexagontk.http.model/-http-protocol/entries.html","searchKeys":["entries","val entries: EnumEntries<HttpProtocol>","com.hexagontk.http.model.HttpProtocol.entries"]},{"name":"val event: String? = null","description":"com.hexagontk.http.model.ServerEvent.event","location":"http/http/com.hexagontk.http.model/-server-event/event.html","searchKeys":["event","val event: String? = null","com.hexagontk.http.model.ServerEvent.event"]},{"name":"val eventData: String","description":"com.hexagontk.http.model.ServerEvent.eventData","location":"http/http/com.hexagontk.http.model/-server-event/event-data.html","searchKeys":["eventData","val eventData: String","com.hexagontk.http.model.ServerEvent.eventData"]},{"name":"val expires: Instant? = null","description":"com.hexagontk.http.model.Cookie.expires","location":"http/http/com.hexagontk.http.model/-cookie/expires.html","searchKeys":["expires","val expires: Instant? = null","com.hexagontk.http.model.Cookie.expires"]},{"name":"val fields: List<HttpField>","description":"com.hexagontk.http.model.HttpFields.fields","location":"http/http/com.hexagontk.http.model/-http-fields/fields.html","searchKeys":["fields","val fields: List<HttpField>","com.hexagontk.http.model.HttpFields.fields"]},{"name":"val httpOnly: Boolean = false","description":"com.hexagontk.http.model.Cookie.httpOnly","location":"http/http/com.hexagontk.http.model/-cookie/http-only.html","searchKeys":["httpOnly","val httpOnly: Boolean = false","com.hexagontk.http.model.Cookie.httpOnly"]},{"name":"val id: String? = null","description":"com.hexagontk.http.model.ServerEvent.id","location":"http/http/com.hexagontk.http.model/-server-event/id.html","searchKeys":["id","val id: String? = null","com.hexagontk.http.model.ServerEvent.id"]},{"name":"val keyStore: URL? = null","description":"com.hexagontk.http.SslSettings.keyStore","location":"http/http/com.hexagontk.http/-ssl-settings/key-store.html","searchKeys":["keyStore","val keyStore: URL? = null","com.hexagontk.http.SslSettings.keyStore"]},{"name":"val keyStorePassword: String","description":"com.hexagontk.http.SslSettings.keyStorePassword","location":"http/http/com.hexagontk.http/-ssl-settings/key-store-password.html","searchKeys":["keyStorePassword","val keyStorePassword: String","com.hexagontk.http.SslSettings.keyStorePassword"]},{"name":"val keys: Set<String>","description":"com.hexagontk.http.model.HttpFields.keys","location":"http/http/com.hexagontk.http.model/-http-fields/keys.html","searchKeys":["keys","val keys: Set<String>","com.hexagontk.http.model.HttpFields.keys"]},{"name":"val maxAge: Long","description":"com.hexagontk.http.model.Cookie.maxAge","location":"http/http/com.hexagontk.http.model/-cookie/max-age.html","searchKeys":["maxAge","val maxAge: Long","com.hexagontk.http.model.Cookie.maxAge"]},{"name":"val mediaType: MediaType","description":"com.hexagontk.http.model.ContentType.mediaType","location":"http/http/com.hexagontk.http.model/-content-type/media-type.html","searchKeys":["mediaType","val mediaType: MediaType","com.hexagontk.http.model.ContentType.mediaType"]},{"name":"val name: String","description":"com.hexagontk.http.model.Cookie.name","location":"http/http/com.hexagontk.http.model/-cookie/name.html","searchKeys":["name","val name: String","com.hexagontk.http.model.Cookie.name"]},{"name":"val name: String","description":"com.hexagontk.http.model.HttpPart.name","location":"http/http/com.hexagontk.http.model/-http-part/name.html","searchKeys":["name","val name: String","com.hexagontk.http.model.HttpPart.name"]},{"name":"val parameters: List<String>","description":"com.hexagontk.http.patterns.RegexPathPattern.parameters","location":"http/http/com.hexagontk.http.patterns/-regex-path-pattern/parameters.html","searchKeys":["parameters","val parameters: List<String>","com.hexagontk.http.patterns.RegexPathPattern.parameters"]},{"name":"val parameters: List<String>","description":"com.hexagontk.http.patterns.TemplatePathPattern.parameters","location":"http/http/com.hexagontk.http.patterns/-template-path-pattern/parameters.html","searchKeys":["parameters","val parameters: List<String>","com.hexagontk.http.patterns.TemplatePathPattern.parameters"]},{"name":"val path: String","description":"com.hexagontk.http.model.Cookie.path","location":"http/http/com.hexagontk.http.model/-cookie/path.html","searchKeys":["path","val path: String","com.hexagontk.http.model.Cookie.path"]},{"name":"val q: Double? = null","description":"com.hexagontk.http.model.ContentType.q","location":"http/http/com.hexagontk.http.model/-content-type/q.html","searchKeys":["q","val q: Double? = null","com.hexagontk.http.model.ContentType.q"]},{"name":"val retry: Long? = null","description":"com.hexagontk.http.model.ServerEvent.retry","location":"http/http/com.hexagontk.http.model/-server-event/retry.html","searchKeys":["retry","val retry: Long? = null","com.hexagontk.http.model.ServerEvent.retry"]},{"name":"val sameSite: CookieSameSite? = null","description":"com.hexagontk.http.model.Cookie.sameSite","location":"http/http/com.hexagontk.http.model/-cookie/same-site.html","searchKeys":["sameSite","val sameSite: CookieSameSite? = null","com.hexagontk.http.model.Cookie.sameSite"]},{"name":"val schema: String","description":"com.hexagontk.http.model.HttpProtocol.schema","location":"http/http/com.hexagontk.http.model/-http-protocol/schema.html","searchKeys":["schema","val schema: String","com.hexagontk.http.model.HttpProtocol.schema"]},{"name":"val secure: Boolean","description":"com.hexagontk.http.model.HttpProtocol.secure","location":"http/http/com.hexagontk.http.model/-http-protocol/secure.html","searchKeys":["secure","val secure: Boolean","com.hexagontk.http.model.HttpProtocol.secure"]},{"name":"val secure: Boolean = false","description":"com.hexagontk.http.model.Cookie.secure","location":"http/http/com.hexagontk.http.model/-cookie/secure.html","searchKeys":["secure","val secure: Boolean = false","com.hexagontk.http.model.Cookie.secure"]},{"name":"val size: Long","description":"com.hexagontk.http.model.HttpPart.size","location":"http/http/com.hexagontk.http.model/-http-part/size.html","searchKeys":["size","val size: Long","com.hexagontk.http.model.HttpPart.size"]},{"name":"val submittedFileName: String? = null","description":"com.hexagontk.http.model.HttpPart.submittedFileName","location":"http/http/com.hexagontk.http.model/-http-part/submitted-file-name.html","searchKeys":["submittedFileName","val submittedFileName: String? = null","com.hexagontk.http.model.HttpPart.submittedFileName"]},{"name":"val trustStore: URL? = null","description":"com.hexagontk.http.SslSettings.trustStore","location":"http/http/com.hexagontk.http/-ssl-settings/trust-store.html","searchKeys":["trustStore","val trustStore: URL? = null","com.hexagontk.http.SslSettings.trustStore"]},{"name":"val trustStorePassword: String","description":"com.hexagontk.http.SslSettings.trustStorePassword","location":"http/http/com.hexagontk.http/-ssl-settings/trust-store-password.html","searchKeys":["trustStorePassword","val trustStorePassword: String","com.hexagontk.http.SslSettings.trustStorePassword"]},{"name":"val type: String","description":"com.hexagontk.http.model.Authorization.type","location":"http/http/com.hexagontk.http.model/-authorization/type.html","searchKeys":["type","val type: String","com.hexagontk.http.model.Authorization.type"]},{"name":"val value: String","description":"com.hexagontk.http.model.Cookie.value","location":"http/http/com.hexagontk.http.model/-cookie/value.html","searchKeys":["value","val value: String","com.hexagontk.http.model.Cookie.value"]},{"name":"val values: Map<String, HttpField>","description":"com.hexagontk.http.model.HttpFields.values","location":"http/http/com.hexagontk.http.model/-http-fields/values.html","searchKeys":["values","val values: Map<String, HttpField>","com.hexagontk.http.model.HttpFields.values"]},{"name":"var request: HttpRequestPort","description":"com.hexagontk.http.model.HttpCall.request","location":"http/http/com.hexagontk.http.model/-http-call/request.html","searchKeys":["request","var request: HttpRequestPort","com.hexagontk.http.model.HttpCall.request"]},{"name":"var response: HttpResponsePort","description":"com.hexagontk.http.model.HttpCall.response","location":"http/http/com.hexagontk.http.model/-http-call/response.html","searchKeys":["response","var response: HttpResponsePort","com.hexagontk.http.model.HttpCall.response"]},{"name":"object Toml : JacksonTextFormat","description":"com.hexagontk.serialization.jackson.toml.Toml","location":"serialization/serialization_jackson_toml/com.hexagontk.serialization.jackson.toml/-toml/index.html","searchKeys":["Toml","object Toml : JacksonTextFormat","com.hexagontk.serialization.jackson.toml.Toml"]},{"name":"open override val mediaType: MediaType","description":"com.hexagontk.serialization.jackson.toml.Toml.mediaType","location":"serialization/serialization_jackson_toml/com.hexagontk.serialization.jackson.toml/-toml/media-type.html","searchKeys":["mediaType","open override val mediaType: MediaType","com.hexagontk.serialization.jackson.toml.Toml.mediaType"]},{"name":"class HelidonHttpServer(backlog: Int, writeQueueLength: Int = 0, readTimeout: Duration = Duration.ofSeconds(30), connectTimeout: Duration = Duration.ofSeconds(10), tcpNoDelay: Boolean = false, receiveLog: Boolean = true, sendLog: Boolean = true, validatePath: Boolean = true, validateRequestHeaders: Boolean = true, validateResponseHeaders: Boolean = false) : HttpServerPort","description":"com.hexagontk.http.server.helidon.HelidonHttpServer","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/index.html","searchKeys":["HelidonHttpServer","class HelidonHttpServer(backlog: Int, writeQueueLength: Int = 0, readTimeout: Duration = Duration.ofSeconds(30), connectTimeout: Duration = Duration.ofSeconds(10), tcpNoDelay: Boolean = false, receiveLog: Boolean = true, sendLog: Boolean = true, validatePath: Boolean = true, validateRequestHeaders: Boolean = true, validateResponseHeaders: Boolean = false) : HttpServerPort","com.hexagontk.http.server.helidon.HelidonHttpServer"]},{"name":"class HelidonRequestAdapter(methodName: Method, req: ServerRequest) : HttpRequestPort","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/index.html","searchKeys":["HelidonRequestAdapter","class HelidonRequestAdapter(methodName: Method, req: ServerRequest) : HttpRequestPort","com.hexagontk.http.server.helidon.HelidonRequestAdapter"]},{"name":"constructor()","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.HelidonHttpServer","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/-helidon-http-server.html","searchKeys":["HelidonHttpServer","constructor()","com.hexagontk.http.server.helidon.HelidonHttpServer.HelidonHttpServer"]},{"name":"constructor(backlog: Int, writeQueueLength: Int = 0, readTimeout: Duration = Duration.ofSeconds(30), connectTimeout: Duration = Duration.ofSeconds(10), tcpNoDelay: Boolean = false, receiveLog: Boolean = true, sendLog: Boolean = true, validatePath: Boolean = true, validateRequestHeaders: Boolean = true, validateResponseHeaders: Boolean = false)","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.HelidonHttpServer","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/-helidon-http-server.html","searchKeys":["HelidonHttpServer","constructor(backlog: Int, writeQueueLength: Int = 0, readTimeout: Duration = Duration.ofSeconds(30), connectTimeout: Duration = Duration.ofSeconds(10), tcpNoDelay: Boolean = false, receiveLog: Boolean = true, sendLog: Boolean = true, validatePath: Boolean = true, validateRequestHeaders: Boolean = true, validateResponseHeaders: Boolean = false)","com.hexagontk.http.server.helidon.HelidonHttpServer.HelidonHttpServer"]},{"name":"constructor(methodName: Method, req: ServerRequest)","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.HelidonRequestAdapter","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/-helidon-request-adapter.html","searchKeys":["HelidonRequestAdapter","constructor(methodName: Method, req: ServerRequest)","com.hexagontk.http.server.helidon.HelidonRequestAdapter.HelidonRequestAdapter"]},{"name":"open override fun options(): Map<String, *>","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.options","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/options.html","searchKeys":["options","open override fun options(): Map<String, *>","com.hexagontk.http.server.helidon.HelidonHttpServer.options"]},{"name":"open override fun runtimePort(): Int","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.runtimePort","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/runtime-port.html","searchKeys":["runtimePort","open override fun runtimePort(): Int","com.hexagontk.http.server.helidon.HelidonHttpServer.runtimePort"]},{"name":"open override fun shutDown()","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.shutDown","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/shut-down.html","searchKeys":["shutDown","open override fun shutDown()","com.hexagontk.http.server.helidon.HelidonHttpServer.shutDown"]},{"name":"open override fun startUp(server: HttpServer)","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.startUp","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/start-up.html","searchKeys":["startUp","open override fun startUp(server: HttpServer)","com.hexagontk.http.server.helidon.HelidonHttpServer.startUp"]},{"name":"open override fun started(): Boolean","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.started","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/started.html","searchKeys":["started","open override fun started(): Boolean","com.hexagontk.http.server.helidon.HelidonHttpServer.started"]},{"name":"open override fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.supportedFeatures","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.server.helidon.HelidonHttpServer.supportedFeatures"]},{"name":"open override fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.server.helidon.HelidonHttpServer.supportedProtocols","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-http-server/supported-protocols.html","searchKeys":["supportedProtocols","open override fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.server.helidon.HelidonHttpServer.supportedProtocols"]},{"name":"open override fun with(body: Any, headers: Headers, contentType: ContentType?, method: HttpMethod, protocol: HttpProtocol, host: String, port: Int, path: String, queryParameters: Parameters, parts: List<HttpPart>, formParameters: Parameters, cookies: List<Cookie>, accept: List<ContentType>, authorization: Authorization?, certificateChain: List<X509Certificate>, pathPattern: PathPattern?, pathParameters: Map<String, Any>): HttpRequestPort","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.with","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/with.html","searchKeys":["with","open override fun with(body: Any, headers: Headers, contentType: ContentType?, method: HttpMethod, protocol: HttpProtocol, host: String, port: Int, path: String, queryParameters: Parameters, parts: List<HttpPart>, formParameters: Parameters, cookies: List<Cookie>, accept: List<ContentType>, authorization: Authorization?, certificateChain: List<X509Certificate>, pathPattern: PathPattern?, pathParameters: Map<String, Any>): HttpRequestPort","com.hexagontk.http.server.helidon.HelidonRequestAdapter.with"]},{"name":"open override val accept: List<ContentType>","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.accept","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/accept.html","searchKeys":["accept","open override val accept: List<ContentType>","com.hexagontk.http.server.helidon.HelidonRequestAdapter.accept"]},{"name":"open override val authorization: Authorization?","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.authorization","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/authorization.html","searchKeys":["authorization","open override val authorization: Authorization?","com.hexagontk.http.server.helidon.HelidonRequestAdapter.authorization"]},{"name":"open override val body: Any","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.body","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/body.html","searchKeys":["body","open override val body: Any","com.hexagontk.http.server.helidon.HelidonRequestAdapter.body"]},{"name":"open override val certificateChain: List<X509Certificate>","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.certificateChain","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/certificate-chain.html","searchKeys":["certificateChain","open override val certificateChain: List<X509Certificate>","com.hexagontk.http.server.helidon.HelidonRequestAdapter.certificateChain"]},{"name":"open override val contentLength: Long","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.contentLength","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/content-length.html","searchKeys":["contentLength","open override val contentLength: Long","com.hexagontk.http.server.helidon.HelidonRequestAdapter.contentLength"]},{"name":"open override val contentType: ContentType?","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.contentType","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/content-type.html","searchKeys":["contentType","open override val contentType: ContentType?","com.hexagontk.http.server.helidon.HelidonRequestAdapter.contentType"]},{"name":"open override val cookies: List<Cookie>","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.cookies","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/cookies.html","searchKeys":["cookies","open override val cookies: List<Cookie>","com.hexagontk.http.server.helidon.HelidonRequestAdapter.cookies"]},{"name":"open override val formParameters: Parameters","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.formParameters","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/form-parameters.html","searchKeys":["formParameters","open override val formParameters: Parameters","com.hexagontk.http.server.helidon.HelidonRequestAdapter.formParameters"]},{"name":"open override val headers: Headers","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.headers","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/headers.html","searchKeys":["headers","open override val headers: Headers","com.hexagontk.http.server.helidon.HelidonRequestAdapter.headers"]},{"name":"open override val host: String","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.host","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/host.html","searchKeys":["host","open override val host: String","com.hexagontk.http.server.helidon.HelidonRequestAdapter.host"]},{"name":"open override val method: HttpMethod","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.method","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/method.html","searchKeys":["method","open override val method: HttpMethod","com.hexagontk.http.server.helidon.HelidonRequestAdapter.method"]},{"name":"open override val parts: List<HttpPart>","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.parts","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/parts.html","searchKeys":["parts","open override val parts: List<HttpPart>","com.hexagontk.http.server.helidon.HelidonRequestAdapter.parts"]},{"name":"open override val path: String","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.path","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/path.html","searchKeys":["path","open override val path: String","com.hexagontk.http.server.helidon.HelidonRequestAdapter.path"]},{"name":"open override val pathParameters: Map<String, Any>","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.pathParameters","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/path-parameters.html","searchKeys":["pathParameters","open override val pathParameters: Map<String, Any>","com.hexagontk.http.server.helidon.HelidonRequestAdapter.pathParameters"]},{"name":"open override val pathPattern: PathPattern? = null","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.pathPattern","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/path-pattern.html","searchKeys":["pathPattern","open override val pathPattern: PathPattern? = null","com.hexagontk.http.server.helidon.HelidonRequestAdapter.pathPattern"]},{"name":"open override val port: Int","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.port","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/port.html","searchKeys":["port","open override val port: Int","com.hexagontk.http.server.helidon.HelidonRequestAdapter.port"]},{"name":"open override val protocol: HttpProtocol","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.protocol","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/protocol.html","searchKeys":["protocol","open override val protocol: HttpProtocol","com.hexagontk.http.server.helidon.HelidonRequestAdapter.protocol"]},{"name":"open override val queryParameters: Parameters","description":"com.hexagontk.http.server.helidon.HelidonRequestAdapter.queryParameters","location":"http/http_server_helidon/com.hexagontk.http.server.helidon/-helidon-request-adapter/query-parameters.html","searchKeys":["queryParameters","open override val queryParameters: Parameters","com.hexagontk.http.server.helidon.HelidonRequestAdapter.queryParameters"]},{"name":"abstract class ServletServer(handler: HttpHandler = OnHandler { this }) : ServletContextListener","description":"com.hexagontk.http.server.servlet.ServletServer","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-server/index.html","searchKeys":["ServletServer","abstract class ServletServer(handler: HttpHandler = OnHandler { this }) : ServletContextListener","com.hexagontk.http.server.servlet.ServletServer"]},{"name":"class ServletFilter(pathHandler: HttpHandler) : HttpFilter","description":"com.hexagontk.http.server.servlet.ServletFilter","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-filter/index.html","searchKeys":["ServletFilter","class ServletFilter(pathHandler: HttpHandler) : HttpFilter","com.hexagontk.http.server.servlet.ServletFilter"]},{"name":"constructor(handler: HttpHandler = OnHandler { this })","description":"com.hexagontk.http.server.servlet.ServletServer.ServletServer","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-server/-servlet-server.html","searchKeys":["ServletServer","constructor(handler: HttpHandler = OnHandler { this })","com.hexagontk.http.server.servlet.ServletServer.ServletServer"]},{"name":"constructor(pathHandler: HttpHandler)","description":"com.hexagontk.http.server.servlet.ServletFilter.ServletFilter","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-filter/-servlet-filter.html","searchKeys":["ServletFilter","constructor(pathHandler: HttpHandler)","com.hexagontk.http.server.servlet.ServletFilter.ServletFilter"]},{"name":"fun createBanner(startUpTimestamp: Long = -1, banner: String = serverBanner, detailed: Boolean = false): String","description":"com.hexagontk.http.server.servlet.ServletServer.createBanner","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-server/create-banner.html","searchKeys":["createBanner","fun createBanner(startUpTimestamp: Long = -1, banner: String = serverBanner, detailed: Boolean = false): String","com.hexagontk.http.server.servlet.ServletServer.createBanner"]},{"name":"open override fun contextInitialized(sce: ServletContextEvent)","description":"com.hexagontk.http.server.servlet.ServletServer.contextInitialized","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-server/context-initialized.html","searchKeys":["contextInitialized","open override fun contextInitialized(sce: ServletContextEvent)","com.hexagontk.http.server.servlet.ServletServer.contextInitialized"]},{"name":"open override fun destroy()","description":"com.hexagontk.http.server.servlet.ServletFilter.destroy","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-filter/destroy.html","searchKeys":["destroy","open override fun destroy()","com.hexagontk.http.server.servlet.ServletFilter.destroy"]},{"name":"open override fun init(filterConfig: FilterConfig)","description":"com.hexagontk.http.server.servlet.ServletFilter.init","location":"http/http_server_servlet/com.hexagontk.http.server.servlet/-servlet-filter/init.html","searchKeys":["init","open override fun init(filterConfig: FilterConfig)","com.hexagontk.http.server.servlet.ServletFilter.init"]},{"name":"abstract fun data(): Map<String, *>","description":"com.hexagontk.serialization.MutableData.data","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/data.html","searchKeys":["data","abstract fun data(): Map<String, *>","com.hexagontk.serialization.MutableData.data"]},{"name":"abstract fun parse(input: InputStream): Any","description":"com.hexagontk.serialization.SerializationFormat.parse","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/parse.html","searchKeys":["parse","abstract fun parse(input: InputStream): Any","com.hexagontk.serialization.SerializationFormat.parse"]},{"name":"abstract fun serialize(instance: Any, output: OutputStream)","description":"com.hexagontk.serialization.SerializationFormat.serialize","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/serialize.html","searchKeys":["serialize","abstract fun serialize(instance: Any, output: OutputStream)","com.hexagontk.serialization.SerializationFormat.serialize"]},{"name":"abstract fun with(data: Map<String, *>)","description":"com.hexagontk.serialization.MutableData.with","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/with.html","searchKeys":["with","abstract fun with(data: Map<String, *>)","com.hexagontk.serialization.MutableData.with"]},{"name":"abstract fun with(data: Map<String, *>): T","description":"com.hexagontk.serialization.Data.with","location":"serialization/serialization/com.hexagontk.serialization/-data/with.html","searchKeys":["with","abstract fun with(data: Map<String, *>): T","com.hexagontk.serialization.Data.with"]},{"name":"abstract val data: Map<String, *>","description":"com.hexagontk.serialization.Data.data","location":"serialization/serialization/com.hexagontk.serialization/-data/data.html","searchKeys":["data","abstract val data: Map<String, *>","com.hexagontk.serialization.Data.data"]},{"name":"abstract val mediaType: MediaType","description":"com.hexagontk.serialization.SerializationFormat.mediaType","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/media-type.html","searchKeys":["mediaType","abstract val mediaType: MediaType","com.hexagontk.serialization.SerializationFormat.mediaType"]},{"name":"abstract val textFormat: Boolean","description":"com.hexagontk.serialization.SerializationFormat.textFormat","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/text-format.html","searchKeys":["textFormat","abstract val textFormat: Boolean","com.hexagontk.serialization.SerializationFormat.textFormat"]},{"name":"fun Any.serialize(format: SerializationFormat): String","description":"com.hexagontk.serialization.serialize","location":"serialization/serialization/com.hexagontk.serialization/serialize.html","searchKeys":["serialize","fun Any.serialize(format: SerializationFormat): String","com.hexagontk.serialization.serialize"]},{"name":"fun Any.serialize(mediaType: MediaType): String","description":"com.hexagontk.serialization.serialize","location":"serialization/serialization/com.hexagontk.serialization/serialize.html","searchKeys":["serialize","fun Any.serialize(mediaType: MediaType): String","com.hexagontk.serialization.serialize"]},{"name":"fun Any.serializeBytes(format: SerializationFormat): ByteArray","description":"com.hexagontk.serialization.serializeBytes","location":"serialization/serialization/com.hexagontk.serialization/serialize-bytes.html","searchKeys":["serializeBytes","fun Any.serializeBytes(format: SerializationFormat): ByteArray","com.hexagontk.serialization.serializeBytes"]},{"name":"fun Any.serializeBytes(mediaType: MediaType): ByteArray","description":"com.hexagontk.serialization.serializeBytes","location":"serialization/serialization/com.hexagontk.serialization/serialize-bytes.html","searchKeys":["serializeBytes","fun Any.serializeBytes(mediaType: MediaType): ByteArray","com.hexagontk.serialization.serializeBytes"]},{"name":"fun File.parse(): Any","description":"com.hexagontk.serialization.parse","location":"serialization/serialization/com.hexagontk.serialization/parse.html","searchKeys":["parse","fun File.parse(): Any","com.hexagontk.serialization.parse"]},{"name":"fun File.parseList(): List<*>","description":"com.hexagontk.serialization.parseList","location":"serialization/serialization/com.hexagontk.serialization/parse-list.html","searchKeys":["parseList","fun File.parseList(): List<*>","com.hexagontk.serialization.parseList"]},{"name":"fun File.parseMap(): Map<String, *>","description":"com.hexagontk.serialization.parseMap","location":"serialization/serialization/com.hexagontk.serialization/parse-map.html","searchKeys":["parseMap","fun File.parseMap(): Map<String, *>","com.hexagontk.serialization.parseMap"]},{"name":"fun File.parseMaps(): List<Map<String, *>>","description":"com.hexagontk.serialization.parseMaps","location":"serialization/serialization/com.hexagontk.serialization/parse-maps.html","searchKeys":["parseMaps","fun File.parseMaps(): List<Map<String, *>>","com.hexagontk.serialization.parseMaps"]},{"name":"fun InputStream.parse(format: SerializationFormat): Any","description":"com.hexagontk.serialization.parse","location":"serialization/serialization/com.hexagontk.serialization/parse.html","searchKeys":["parse","fun InputStream.parse(format: SerializationFormat): Any","com.hexagontk.serialization.parse"]},{"name":"fun InputStream.parse(mediaType: MediaType): Any","description":"com.hexagontk.serialization.parse","location":"serialization/serialization/com.hexagontk.serialization/parse.html","searchKeys":["parse","fun InputStream.parse(mediaType: MediaType): Any","com.hexagontk.serialization.parse"]},{"name":"fun InputStream.parseList(format: SerializationFormat): List<*>","description":"com.hexagontk.serialization.parseList","location":"serialization/serialization/com.hexagontk.serialization/parse-list.html","searchKeys":["parseList","fun InputStream.parseList(format: SerializationFormat): List<*>","com.hexagontk.serialization.parseList"]},{"name":"fun InputStream.parseList(mediaType: MediaType): List<*>","description":"com.hexagontk.serialization.parseList","location":"serialization/serialization/com.hexagontk.serialization/parse-list.html","searchKeys":["parseList","fun InputStream.parseList(mediaType: MediaType): List<*>","com.hexagontk.serialization.parseList"]},{"name":"fun InputStream.parseMap(format: SerializationFormat): Map<String, *>","description":"com.hexagontk.serialization.parseMap","location":"serialization/serialization/com.hexagontk.serialization/parse-map.html","searchKeys":["parseMap","fun InputStream.parseMap(format: SerializationFormat): Map<String, *>","com.hexagontk.serialization.parseMap"]},{"name":"fun InputStream.parseMap(mediaType: MediaType): Map<String, *>","description":"com.hexagontk.serialization.parseMap","location":"serialization/serialization/com.hexagontk.serialization/parse-map.html","searchKeys":["parseMap","fun InputStream.parseMap(mediaType: MediaType): Map<String, *>","com.hexagontk.serialization.parseMap"]},{"name":"fun InputStream.parseMaps(format: SerializationFormat): List<Map<String, *>>","description":"com.hexagontk.serialization.parseMaps","location":"serialization/serialization/com.hexagontk.serialization/parse-maps.html","searchKeys":["parseMaps","fun InputStream.parseMaps(format: SerializationFormat): List<Map<String, *>>","com.hexagontk.serialization.parseMaps"]},{"name":"fun InputStream.parseMaps(mediaType: MediaType): List<Map<String, *>>","description":"com.hexagontk.serialization.parseMaps","location":"serialization/serialization/com.hexagontk.serialization/parse-maps.html","searchKeys":["parseMaps","fun InputStream.parseMaps(mediaType: MediaType): List<Map<String, *>>","com.hexagontk.serialization.parseMaps"]},{"name":"fun Path.parse(): Any","description":"com.hexagontk.serialization.parse","location":"serialization/serialization/com.hexagontk.serialization/parse.html","searchKeys":["parse","fun Path.parse(): Any","com.hexagontk.serialization.parse"]},{"name":"fun Path.parseList(): List<*>","description":"com.hexagontk.serialization.parseList","location":"serialization/serialization/com.hexagontk.serialization/parse-list.html","searchKeys":["parseList","fun Path.parseList(): List<*>","com.hexagontk.serialization.parseList"]},{"name":"fun Path.parseMap(): Map<String, *>","description":"com.hexagontk.serialization.parseMap","location":"serialization/serialization/com.hexagontk.serialization/parse-map.html","searchKeys":["parseMap","fun Path.parseMap(): Map<String, *>","com.hexagontk.serialization.parseMap"]},{"name":"fun Path.parseMaps(): List<Map<String, *>>","description":"com.hexagontk.serialization.parseMaps","location":"serialization/serialization/com.hexagontk.serialization/parse-maps.html","searchKeys":["parseMaps","fun Path.parseMaps(): List<Map<String, *>>","com.hexagontk.serialization.parseMaps"]},{"name":"fun String.parse(format: SerializationFormat): Any","description":"com.hexagontk.serialization.parse","location":"serialization/serialization/com.hexagontk.serialization/parse.html","searchKeys":["parse","fun String.parse(format: SerializationFormat): Any","com.hexagontk.serialization.parse"]},{"name":"fun String.parse(mediaType: MediaType): Any","description":"com.hexagontk.serialization.parse","location":"serialization/serialization/com.hexagontk.serialization/parse.html","searchKeys":["parse","fun String.parse(mediaType: MediaType): Any","com.hexagontk.serialization.parse"]},{"name":"fun String.parseList(format: SerializationFormat): List<*>","description":"com.hexagontk.serialization.parseList","location":"serialization/serialization/com.hexagontk.serialization/parse-list.html","searchKeys":["parseList","fun String.parseList(format: SerializationFormat): List<*>","com.hexagontk.serialization.parseList"]},{"name":"fun String.parseList(mediaType: MediaType): List<*>","description":"com.hexagontk.serialization.parseList","location":"serialization/serialization/com.hexagontk.serialization/parse-list.html","searchKeys":["parseList","fun String.parseList(mediaType: MediaType): List<*>","com.hexagontk.serialization.parseList"]},{"name":"fun String.parseMap(format: SerializationFormat): Map<String, *>","description":"com.hexagontk.serialization.parseMap","location":"serialization/serialization/com.hexagontk.serialization/parse-map.html","searchKeys":["parseMap","fun String.parseMap(format: SerializationFormat): Map<String, *>","com.hexagontk.serialization.parseMap"]},{"name":"fun String.parseMap(mediaType: MediaType): Map<String, *>","description":"com.hexagontk.serialization.parseMap","location":"serialization/serialization/com.hexagontk.serialization/parse-map.html","searchKeys":["parseMap","fun String.parseMap(mediaType: MediaType): Map<String, *>","com.hexagontk.serialization.parseMap"]},{"name":"fun String.parseMaps(format: SerializationFormat): List<Map<String, *>>","description":"com.hexagontk.serialization.parseMaps","location":"serialization/serialization/com.hexagontk.serialization/parse-maps.html","searchKeys":["parseMaps","fun String.parseMaps(format: SerializationFormat): List<Map<String, *>>","com.hexagontk.serialization.parseMaps"]},{"name":"fun String.parseMaps(mediaType: MediaType): List<Map<String, *>>","description":"com.hexagontk.serialization.parseMaps","location":"serialization/serialization/com.hexagontk.serialization/parse-maps.html","searchKeys":["parseMaps","fun String.parseMaps(mediaType: MediaType): List<Map<String, *>>","com.hexagontk.serialization.parseMaps"]},{"name":"fun URL.parse(): Any","description":"com.hexagontk.serialization.parse","location":"serialization/serialization/com.hexagontk.serialization/parse.html","searchKeys":["parse","fun URL.parse(): Any","com.hexagontk.serialization.parse"]},{"name":"fun URL.parseList(): List<*>","description":"com.hexagontk.serialization.parseList","location":"serialization/serialization/com.hexagontk.serialization/parse-list.html","searchKeys":["parseList","fun URL.parseList(): List<*>","com.hexagontk.serialization.parseList"]},{"name":"fun URL.parseMap(): Map<String, *>","description":"com.hexagontk.serialization.parseMap","location":"serialization/serialization/com.hexagontk.serialization/parse-map.html","searchKeys":["parseMap","fun URL.parseMap(): Map<String, *>","com.hexagontk.serialization.parseMap"]},{"name":"fun URL.parseMaps(): List<Map<String, *>>","description":"com.hexagontk.serialization.parseMaps","location":"serialization/serialization/com.hexagontk.serialization/parse-maps.html","searchKeys":["parseMaps","fun URL.parseMaps(): List<Map<String, *>>","com.hexagontk.serialization.parseMaps"]},{"name":"fun formatOf(mediaType: MediaType): SerializationFormat","description":"com.hexagontk.serialization.SerializationManager.formatOf","location":"serialization/serialization/com.hexagontk.serialization/-serialization-manager/format-of.html","searchKeys":["formatOf","fun formatOf(mediaType: MediaType): SerializationFormat","com.hexagontk.serialization.SerializationManager.formatOf"]},{"name":"fun formatOfOrNull(mediaType: MediaType): SerializationFormat?","description":"com.hexagontk.serialization.SerializationManager.formatOfOrNull","location":"serialization/serialization/com.hexagontk.serialization/-serialization-manager/format-of-or-null.html","searchKeys":["formatOfOrNull","fun formatOfOrNull(mediaType: MediaType): SerializationFormat?","com.hexagontk.serialization.SerializationManager.formatOfOrNull"]},{"name":"interface Data<T> : Map<String, Any?> ","description":"com.hexagontk.serialization.Data","location":"serialization/serialization/com.hexagontk.serialization/-data/index.html","searchKeys":["Data","interface Data<T> : Map<String, Any?> ","com.hexagontk.serialization.Data"]},{"name":"interface MutableData : Map<String, Any?> ","description":"com.hexagontk.serialization.MutableData","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/index.html","searchKeys":["MutableData","interface MutableData : Map<String, Any?> ","com.hexagontk.serialization.MutableData"]},{"name":"interface SerializationFormat","description":"com.hexagontk.serialization.SerializationFormat","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/index.html","searchKeys":["SerializationFormat","interface SerializationFormat","com.hexagontk.serialization.SerializationFormat"]},{"name":"object SerializationManager","description":"com.hexagontk.serialization.SerializationManager","location":"serialization/serialization/com.hexagontk.serialization/-serialization-manager/index.html","searchKeys":["SerializationManager","object SerializationManager","com.hexagontk.serialization.SerializationManager"]},{"name":"open fun parse(input: String): Any","description":"com.hexagontk.serialization.SerializationFormat.parse","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/parse.html","searchKeys":["parse","open fun parse(input: String): Any","com.hexagontk.serialization.SerializationFormat.parse"]},{"name":"open fun serialize(instance: Any): String","description":"com.hexagontk.serialization.SerializationFormat.serialize","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/serialize.html","searchKeys":["serialize","open fun serialize(instance: Any): String","com.hexagontk.serialization.SerializationFormat.serialize"]},{"name":"open fun serializeBytes(instance: Any): ByteArray","description":"com.hexagontk.serialization.SerializationFormat.serializeBytes","location":"serialization/serialization/com.hexagontk.serialization/-serialization-format/serialize-bytes.html","searchKeys":["serializeBytes","open fun serializeBytes(instance: Any): ByteArray","com.hexagontk.serialization.SerializationFormat.serializeBytes"]},{"name":"open operator fun get(key: KProperty1<T, *>): Any?","description":"com.hexagontk.serialization.Data.get","location":"serialization/serialization/com.hexagontk.serialization/-data/get.html","searchKeys":["get","open operator fun get(key: KProperty1<T, *>): Any?","com.hexagontk.serialization.Data.get"]},{"name":"open operator override fun get(key: String): Any?","description":"com.hexagontk.serialization.Data.get","location":"serialization/serialization/com.hexagontk.serialization/-data/get.html","searchKeys":["get","open operator override fun get(key: String): Any?","com.hexagontk.serialization.Data.get"]},{"name":"open operator override fun get(key: String): Any?","description":"com.hexagontk.serialization.MutableData.get","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/get.html","searchKeys":["get","open operator override fun get(key: String): Any?","com.hexagontk.serialization.MutableData.get"]},{"name":"open override fun containsKey(key: String): Boolean","description":"com.hexagontk.serialization.Data.containsKey","location":"serialization/serialization/com.hexagontk.serialization/-data/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: String): Boolean","com.hexagontk.serialization.Data.containsKey"]},{"name":"open override fun containsKey(key: String): Boolean","description":"com.hexagontk.serialization.MutableData.containsKey","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: String): Boolean","com.hexagontk.serialization.MutableData.containsKey"]},{"name":"open override fun containsValue(value: Any?): Boolean","description":"com.hexagontk.serialization.Data.containsValue","location":"serialization/serialization/com.hexagontk.serialization/-data/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: Any?): Boolean","com.hexagontk.serialization.Data.containsValue"]},{"name":"open override fun containsValue(value: Any?): Boolean","description":"com.hexagontk.serialization.MutableData.containsValue","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: Any?): Boolean","com.hexagontk.serialization.MutableData.containsValue"]},{"name":"open override fun isEmpty(): Boolean","description":"com.hexagontk.serialization.Data.isEmpty","location":"serialization/serialization/com.hexagontk.serialization/-data/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","com.hexagontk.serialization.Data.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"com.hexagontk.serialization.MutableData.isEmpty","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","com.hexagontk.serialization.MutableData.isEmpty"]},{"name":"open override val entries: Set<Map.Entry<String, *>>","description":"com.hexagontk.serialization.Data.entries","location":"serialization/serialization/com.hexagontk.serialization/-data/entries.html","searchKeys":["entries","open override val entries: Set<Map.Entry<String, *>>","com.hexagontk.serialization.Data.entries"]},{"name":"open override val entries: Set<Map.Entry<String, *>>","description":"com.hexagontk.serialization.MutableData.entries","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/entries.html","searchKeys":["entries","open override val entries: Set<Map.Entry<String, *>>","com.hexagontk.serialization.MutableData.entries"]},{"name":"open override val keys: Set<String>","description":"com.hexagontk.serialization.Data.keys","location":"serialization/serialization/com.hexagontk.serialization/-data/keys.html","searchKeys":["keys","open override val keys: Set<String>","com.hexagontk.serialization.Data.keys"]},{"name":"open override val keys: Set<String>","description":"com.hexagontk.serialization.MutableData.keys","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/keys.html","searchKeys":["keys","open override val keys: Set<String>","com.hexagontk.serialization.MutableData.keys"]},{"name":"open override val size: Int","description":"com.hexagontk.serialization.Data.size","location":"serialization/serialization/com.hexagontk.serialization/-data/size.html","searchKeys":["size","open override val size: Int","com.hexagontk.serialization.Data.size"]},{"name":"open override val size: Int","description":"com.hexagontk.serialization.MutableData.size","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/size.html","searchKeys":["size","open override val size: Int","com.hexagontk.serialization.MutableData.size"]},{"name":"open override val values: Collection<*>","description":"com.hexagontk.serialization.Data.values","location":"serialization/serialization/com.hexagontk.serialization/-data/values.html","searchKeys":["values","open override val values: Collection<*>","com.hexagontk.serialization.Data.values"]},{"name":"open override val values: Collection<*>","description":"com.hexagontk.serialization.MutableData.values","location":"serialization/serialization/com.hexagontk.serialization/-mutable-data/values.html","searchKeys":["values","open override val values: Collection<*>","com.hexagontk.serialization.MutableData.values"]},{"name":"var formats: Set<SerializationFormat>","description":"com.hexagontk.serialization.SerializationManager.formats","location":"serialization/serialization/com.hexagontk.serialization/-serialization-manager/formats.html","searchKeys":["formats","var formats: Set<SerializationFormat>","com.hexagontk.serialization.SerializationManager.formats"]},{"name":"class SerializeRequestCallback : HttpCallback","description":"com.hexagontk.rest.SerializeRequestCallback","location":"http/rest/com.hexagontk.rest/-serialize-request-callback/index.html","searchKeys":["SerializeRequestCallback","class SerializeRequestCallback : HttpCallback","com.hexagontk.rest.SerializeRequestCallback"]},{"name":"class SerializeResponseCallback : HttpCallback","description":"com.hexagontk.rest.SerializeResponseCallback","location":"http/rest/com.hexagontk.rest/-serialize-response-callback/index.html","searchKeys":["SerializeResponseCallback","class SerializeResponseCallback : HttpCallback","com.hexagontk.rest.SerializeResponseCallback"]},{"name":"constructor()","description":"com.hexagontk.rest.SerializeRequestCallback.SerializeRequestCallback","location":"http/rest/com.hexagontk.rest/-serialize-request-callback/-serialize-request-callback.html","searchKeys":["SerializeRequestCallback","constructor()","com.hexagontk.rest.SerializeRequestCallback.SerializeRequestCallback"]},{"name":"constructor()","description":"com.hexagontk.rest.SerializeResponseCallback.SerializeResponseCallback","location":"http/rest/com.hexagontk.rest/-serialize-response-callback/-serialize-response-callback.html","searchKeys":["SerializeResponseCallback","constructor()","com.hexagontk.rest.SerializeResponseCallback.SerializeResponseCallback"]},{"name":"fun <T> HttpBase.bodyObject(converter: (Map<String, *>) -> T): T","description":"com.hexagontk.rest.bodyObject","location":"http/rest/com.hexagontk.rest/body-object.html","searchKeys":["bodyObject","fun <T> HttpBase.bodyObject(converter: (Map<String, *>) -> T): T","com.hexagontk.rest.bodyObject"]},{"name":"fun <T> HttpBase.bodyObjects(converter: (Map<String, *>) -> T): List<T>","description":"com.hexagontk.rest.bodyObjects","location":"http/rest/com.hexagontk.rest/body-objects.html","searchKeys":["bodyObjects","fun <T> HttpBase.bodyObjects(converter: (Map<String, *>) -> T): List<T>","com.hexagontk.rest.bodyObjects"]},{"name":"fun HttpBase.bodyList(): List<*>","description":"com.hexagontk.rest.bodyList","location":"http/rest/com.hexagontk.rest/body-list.html","searchKeys":["bodyList","fun HttpBase.bodyList(): List<*>","com.hexagontk.rest.bodyList"]},{"name":"fun HttpBase.bodyMap(): Map<String, *>","description":"com.hexagontk.rest.bodyMap","location":"http/rest/com.hexagontk.rest/body-map.html","searchKeys":["bodyMap","fun HttpBase.bodyMap(): Map<String, *>","com.hexagontk.rest.bodyMap"]},{"name":"fun HttpBase.bodyMaps(): List<Map<String, *>>","description":"com.hexagontk.rest.bodyMaps","location":"http/rest/com.hexagontk.rest/body-maps.html","searchKeys":["bodyMaps","fun HttpBase.bodyMaps(): List<Map<String, *>>","com.hexagontk.rest.bodyMaps"]},{"name":"fun HttpBase.mediaType(): MediaType","description":"com.hexagontk.rest.mediaType","location":"http/rest/com.hexagontk.rest/media-type.html","searchKeys":["mediaType","fun HttpBase.mediaType(): MediaType","com.hexagontk.rest.mediaType"]},{"name":"fun HttpBase.serializeBody(): Any","description":"com.hexagontk.rest.serializeBody","location":"http/rest/com.hexagontk.rest/serialize-body.html","searchKeys":["serializeBody","fun HttpBase.serializeBody(): Any","com.hexagontk.rest.serializeBody"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.rest.SerializeRequestCallback.invoke","location":"http/rest/com.hexagontk.rest/-serialize-request-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.rest.SerializeRequestCallback.invoke"]},{"name":"open operator override fun invoke(context: HttpContext): HttpContext","description":"com.hexagontk.rest.SerializeResponseCallback.invoke","location":"http/rest/com.hexagontk.rest/-serialize-response-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: HttpContext): HttpContext","com.hexagontk.rest.SerializeResponseCallback.invoke"]},{"name":"val anyContentType: ContentType","description":"com.hexagontk.rest.anyContentType","location":"http/rest/com.hexagontk.rest/any-content-type.html","searchKeys":["anyContentType","val anyContentType: ContentType","com.hexagontk.rest.anyContentType"]},{"name":"val csvContentType: ContentType","description":"com.hexagontk.rest.csvContentType","location":"http/rest/com.hexagontk.rest/csv-content-type.html","searchKeys":["csvContentType","val csvContentType: ContentType","com.hexagontk.rest.csvContentType"]},{"name":"val jsonContentType: ContentType","description":"com.hexagontk.rest.jsonContentType","location":"http/rest/com.hexagontk.rest/json-content-type.html","searchKeys":["jsonContentType","val jsonContentType: ContentType","com.hexagontk.rest.jsonContentType"]},{"name":"val textContentType: ContentType","description":"com.hexagontk.rest.textContentType","location":"http/rest/com.hexagontk.rest/text-content-type.html","searchKeys":["textContentType","val textContentType: ContentType","com.hexagontk.rest.textContentType"]},{"name":"val tomlContentType: ContentType","description":"com.hexagontk.rest.tomlContentType","location":"http/rest/com.hexagontk.rest/toml-content-type.html","searchKeys":["tomlContentType","val tomlContentType: ContentType","com.hexagontk.rest.tomlContentType"]},{"name":"val xmlContentType: ContentType","description":"com.hexagontk.rest.xmlContentType","location":"http/rest/com.hexagontk.rest/xml-content-type.html","searchKeys":["xmlContentType","val xmlContentType: ContentType","com.hexagontk.rest.xmlContentType"]},{"name":"val yamlContentType: ContentType","description":"com.hexagontk.rest.yamlContentType","location":"http/rest/com.hexagontk.rest/yaml-content-type.html","searchKeys":["yamlContentType","val yamlContentType: ContentType","com.hexagontk.rest.yamlContentType"]},{"name":"class JdkHttpServer(backlog: Int, executor: Executor? = null, stopDelay: Int = 0, idleInterval: Int = 30, maxConnections: Int = -1, maxIdleConnections: Int = 200, drainAmount: Int = 65536, maxReqHeaders: Int = 200, maxReqTime: Int = -1, maxRspTime: Int = -1, nodelay: Boolean = false) : HttpServerPort","description":"com.hexagontk.http.server.jdk.JdkHttpServer","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/index.html","searchKeys":["JdkHttpServer","class JdkHttpServer(backlog: Int, executor: Executor? = null, stopDelay: Int = 0, idleInterval: Int = 30, maxConnections: Int = -1, maxIdleConnections: Int = 200, drainAmount: Int = 65536, maxReqHeaders: Int = 200, maxReqTime: Int = -1, maxRspTime: Int = -1, nodelay: Boolean = false) : HttpServerPort","com.hexagontk.http.server.jdk.JdkHttpServer"]},{"name":"constructor()","description":"com.hexagontk.http.server.jdk.JdkHttpServer.JdkHttpServer","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/-jdk-http-server.html","searchKeys":["JdkHttpServer","constructor()","com.hexagontk.http.server.jdk.JdkHttpServer.JdkHttpServer"]},{"name":"constructor(backlog: Int, executor: Executor? = null, stopDelay: Int = 0, idleInterval: Int = 30, maxConnections: Int = -1, maxIdleConnections: Int = 200, drainAmount: Int = 65536, maxReqHeaders: Int = 200, maxReqTime: Int = -1, maxRspTime: Int = -1, nodelay: Boolean = false)","description":"com.hexagontk.http.server.jdk.JdkHttpServer.JdkHttpServer","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/-jdk-http-server.html","searchKeys":["JdkHttpServer","constructor(backlog: Int, executor: Executor? = null, stopDelay: Int = 0, idleInterval: Int = 30, maxConnections: Int = -1, maxIdleConnections: Int = 200, drainAmount: Int = 65536, maxReqHeaders: Int = 200, maxReqTime: Int = -1, maxRspTime: Int = -1, nodelay: Boolean = false)","com.hexagontk.http.server.jdk.JdkHttpServer.JdkHttpServer"]},{"name":"open override fun options(): Map<String, *>","description":"com.hexagontk.http.server.jdk.JdkHttpServer.options","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/options.html","searchKeys":["options","open override fun options(): Map<String, *>","com.hexagontk.http.server.jdk.JdkHttpServer.options"]},{"name":"open override fun runtimePort(): Int","description":"com.hexagontk.http.server.jdk.JdkHttpServer.runtimePort","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/runtime-port.html","searchKeys":["runtimePort","open override fun runtimePort(): Int","com.hexagontk.http.server.jdk.JdkHttpServer.runtimePort"]},{"name":"open override fun shutDown()","description":"com.hexagontk.http.server.jdk.JdkHttpServer.shutDown","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/shut-down.html","searchKeys":["shutDown","open override fun shutDown()","com.hexagontk.http.server.jdk.JdkHttpServer.shutDown"]},{"name":"open override fun startUp(server: HttpServer)","description":"com.hexagontk.http.server.jdk.JdkHttpServer.startUp","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/start-up.html","searchKeys":["startUp","open override fun startUp(server: HttpServer)","com.hexagontk.http.server.jdk.JdkHttpServer.startUp"]},{"name":"open override fun started(): Boolean","description":"com.hexagontk.http.server.jdk.JdkHttpServer.started","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/started.html","searchKeys":["started","open override fun started(): Boolean","com.hexagontk.http.server.jdk.JdkHttpServer.started"]},{"name":"open override fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.server.jdk.JdkHttpServer.supportedFeatures","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.server.jdk.JdkHttpServer.supportedFeatures"]},{"name":"open override fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.server.jdk.JdkHttpServer.supportedProtocols","location":"http/http_server_jdk/com.hexagontk.http.server.jdk/-jdk-http-server/supported-protocols.html","searchKeys":["supportedProtocols","open override fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.server.jdk.JdkHttpServer.supportedProtocols"]},{"name":"abstract fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale = Platform.locale): String","description":"com.hexagontk.templates.TemplatePort.render","location":"templates/templates/com.hexagontk.templates/-template-port/render.html","searchKeys":["render","abstract fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale = Platform.locale): String","com.hexagontk.templates.TemplatePort.render"]},{"name":"abstract fun render(url: URL, context: Map<String, *>, locale: Locale = Platform.locale): String","description":"com.hexagontk.templates.TemplatePort.render","location":"templates/templates/com.hexagontk.templates/-template-port/render.html","searchKeys":["render","abstract fun render(url: URL, context: Map<String, *>, locale: Locale = Platform.locale): String","com.hexagontk.templates.TemplatePort.render"]},{"name":"fun render(url: URL, context: Map<String, *>, locale: Locale = Platform.locale): String","description":"com.hexagontk.templates.TemplateManager.render","location":"templates/templates/com.hexagontk.templates/-template-manager/render.html","searchKeys":["render","fun render(url: URL, context: Map<String, *>, locale: Locale = Platform.locale): String","com.hexagontk.templates.TemplateManager.render"]},{"name":"interface TemplatePort","description":"com.hexagontk.templates.TemplatePort","location":"templates/templates/com.hexagontk.templates/-template-port/index.html","searchKeys":["TemplatePort","interface TemplatePort","com.hexagontk.templates.TemplatePort"]},{"name":"object TemplateManager","description":"com.hexagontk.templates.TemplateManager","location":"templates/templates/com.hexagontk.templates/-template-manager/index.html","searchKeys":["TemplateManager","object TemplateManager","com.hexagontk.templates.TemplateManager"]},{"name":"open fun render(template: String, context: Map<String, *>, locale: Locale = Platform.locale): String","description":"com.hexagontk.templates.TemplatePort.render","location":"templates/templates/com.hexagontk.templates/-template-port/render.html","searchKeys":["render","open fun render(template: String, context: Map<String, *>, locale: Locale = Platform.locale): String","com.hexagontk.templates.TemplatePort.render"]},{"name":"var adapters: Map<Regex, TemplatePort>","description":"com.hexagontk.templates.TemplateManager.adapters","location":"templates/templates/com.hexagontk.templates/-template-manager/adapters.html","searchKeys":["adapters","var adapters: Map<Regex, TemplatePort>","com.hexagontk.templates.TemplateManager.adapters"]},{"name":"class Rocker(reloading: Boolean = false) : TemplatePort","description":"com.hexagontk.templates.rocker.Rocker","location":"templates/templates_rocker/com.hexagontk.templates.rocker/-rocker/index.html","searchKeys":["Rocker","class Rocker(reloading: Boolean = false) : TemplatePort","com.hexagontk.templates.rocker.Rocker"]},{"name":"constructor(reloading: Boolean = false)","description":"com.hexagontk.templates.rocker.Rocker.Rocker","location":"templates/templates_rocker/com.hexagontk.templates.rocker/-rocker/-rocker.html","searchKeys":["Rocker","constructor(reloading: Boolean = false)","com.hexagontk.templates.rocker.Rocker.Rocker"]},{"name":"open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.rocker.Rocker.render","location":"templates/templates_rocker/com.hexagontk.templates.rocker/-rocker/render.html","searchKeys":["render","open override fun render(name: String, templates: Map<String, String>, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.rocker.Rocker.render"]},{"name":"open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","description":"com.hexagontk.templates.rocker.Rocker.render","location":"templates/templates_rocker/com.hexagontk.templates.rocker/-rocker/render.html","searchKeys":["render","open override fun render(url: URL, context: Map<String, *>, locale: Locale): String","com.hexagontk.templates.rocker.Rocker.render"]},{"name":"constructor(prettyPrint: Boolean = true)","description":"com.hexagontk.serialization.dsl.json.JsonFormat.JsonFormat","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json-format/-json-format.html","searchKeys":["JsonFormat","constructor(prettyPrint: Boolean = true)","com.hexagontk.serialization.dsl.json.JsonFormat.JsonFormat"]},{"name":"object Json : JsonFormat","description":"com.hexagontk.serialization.dsl.json.Json","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json/index.html","searchKeys":["Json","object Json : JsonFormat","com.hexagontk.serialization.dsl.json.Json"]},{"name":"open class JsonFormat(prettyPrint: Boolean = true) : SerializationFormat","description":"com.hexagontk.serialization.dsl.json.JsonFormat","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json-format/index.html","searchKeys":["JsonFormat","open class JsonFormat(prettyPrint: Boolean = true) : SerializationFormat","com.hexagontk.serialization.dsl.json.JsonFormat"]},{"name":"open override fun parse(input: InputStream): Any","description":"com.hexagontk.serialization.dsl.json.JsonFormat.parse","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json-format/parse.html","searchKeys":["parse","open override fun parse(input: InputStream): Any","com.hexagontk.serialization.dsl.json.JsonFormat.parse"]},{"name":"open override fun serialize(instance: Any, output: OutputStream)","description":"com.hexagontk.serialization.dsl.json.JsonFormat.serialize","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json-format/serialize.html","searchKeys":["serialize","open override fun serialize(instance: Any, output: OutputStream)","com.hexagontk.serialization.dsl.json.JsonFormat.serialize"]},{"name":"open override val mediaType: MediaType","description":"com.hexagontk.serialization.dsl.json.JsonFormat.mediaType","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json-format/media-type.html","searchKeys":["mediaType","open override val mediaType: MediaType","com.hexagontk.serialization.dsl.json.JsonFormat.mediaType"]},{"name":"open override val textFormat: Boolean = true","description":"com.hexagontk.serialization.dsl.json.JsonFormat.textFormat","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json-format/text-format.html","searchKeys":["textFormat","open override val textFormat: Boolean = true","com.hexagontk.serialization.dsl.json.JsonFormat.textFormat"]},{"name":"val raw: JsonFormat","description":"com.hexagontk.serialization.dsl.json.Json.raw","location":"serialization/serialization_dsl_json/com.hexagontk.serialization.dsl.json/-json/raw.html","searchKeys":["raw","val raw: JsonFormat","com.hexagontk.serialization.dsl.json.Json.raw"]},{"name":"ANY","description":"com.hexagontk.core.media.MediaTypeGroup.ANY","location":"core/com.hexagontk.core.media/-media-type-group/-a-n-y/index.html","searchKeys":["ANY","ANY","com.hexagontk.core.media.MediaTypeGroup.ANY"]},{"name":"APPLICATION","description":"com.hexagontk.core.media.MediaTypeGroup.APPLICATION","location":"core/com.hexagontk.core.media/-media-type-group/-a-p-p-l-i-c-a-t-i-o-n/index.html","searchKeys":["APPLICATION","APPLICATION","com.hexagontk.core.media.MediaTypeGroup.APPLICATION"]},{"name":"AUDIO","description":"com.hexagontk.core.media.MediaTypeGroup.AUDIO","location":"core/com.hexagontk.core.media/-media-type-group/-a-u-d-i-o/index.html","searchKeys":["AUDIO","AUDIO","com.hexagontk.core.media.MediaTypeGroup.AUDIO"]},{"name":"FONT","description":"com.hexagontk.core.media.MediaTypeGroup.FONT","location":"core/com.hexagontk.core.media/-media-type-group/-f-o-n-t/index.html","searchKeys":["FONT","FONT","com.hexagontk.core.media.MediaTypeGroup.FONT"]},{"name":"IMAGE","description":"com.hexagontk.core.media.MediaTypeGroup.IMAGE","location":"core/com.hexagontk.core.media/-media-type-group/-i-m-a-g-e/index.html","searchKeys":["IMAGE","IMAGE","com.hexagontk.core.media.MediaTypeGroup.IMAGE"]},{"name":"LINUX","description":"com.hexagontk.core.OsKind.LINUX","location":"core/com.hexagontk.core/-os-kind/-l-i-n-u-x/index.html","searchKeys":["LINUX","LINUX","com.hexagontk.core.OsKind.LINUX"]},{"name":"MACOS","description":"com.hexagontk.core.OsKind.MACOS","location":"core/com.hexagontk.core/-os-kind/-m-a-c-o-s/index.html","searchKeys":["MACOS","MACOS","com.hexagontk.core.OsKind.MACOS"]},{"name":"MULTIPART","description":"com.hexagontk.core.media.MediaTypeGroup.MULTIPART","location":"core/com.hexagontk.core.media/-media-type-group/-m-u-l-t-i-p-a-r-t/index.html","searchKeys":["MULTIPART","MULTIPART","com.hexagontk.core.media.MediaTypeGroup.MULTIPART"]},{"name":"TEXT","description":"com.hexagontk.core.media.MediaTypeGroup.TEXT","location":"core/com.hexagontk.core.media/-media-type-group/-t-e-x-t/index.html","searchKeys":["TEXT","TEXT","com.hexagontk.core.media.MediaTypeGroup.TEXT"]},{"name":"UNIX","description":"com.hexagontk.core.OsKind.UNIX","location":"core/com.hexagontk.core/-os-kind/-u-n-i-x/index.html","searchKeys":["UNIX","UNIX","com.hexagontk.core.OsKind.UNIX"]},{"name":"VIDEO","description":"com.hexagontk.core.media.MediaTypeGroup.VIDEO","location":"core/com.hexagontk.core.media/-media-type-group/-v-i-d-e-o/index.html","searchKeys":["VIDEO","VIDEO","com.hexagontk.core.media.MediaTypeGroup.VIDEO"]},{"name":"WINDOWS","description":"com.hexagontk.core.OsKind.WINDOWS","location":"core/com.hexagontk.core/-os-kind/-w-i-n-d-o-w-s/index.html","searchKeys":["WINDOWS","WINDOWS","com.hexagontk.core.OsKind.WINDOWS"]},{"name":"class CodedException(val code: Int, message: String = \"\", cause: Throwable? = null) : RuntimeException","description":"com.hexagontk.core.CodedException","location":"core/com.hexagontk.core/-coded-exception/index.html","searchKeys":["CodedException","class CodedException(val code: Int, message: String = \"\", cause: Throwable? = null) : RuntimeException","com.hexagontk.core.CodedException"]},{"name":"class Glob(val pattern: String)","description":"com.hexagontk.core.text.Glob","location":"core/com.hexagontk.core.text/-glob/index.html","searchKeys":["Glob","class Glob(val pattern: String)","com.hexagontk.core.text.Glob"]},{"name":"class MediaType(val group: MediaTypeGroup, val type: String)","description":"com.hexagontk.core.media.MediaType","location":"core/com.hexagontk.core.media/-media-type/index.html","searchKeys":["MediaType","class MediaType(val group: MediaTypeGroup, val type: String)","com.hexagontk.core.media.MediaType"]},{"name":"class MultipleException(val causes: List<Throwable>, message: String = \"\") : RuntimeException","description":"com.hexagontk.core.MultipleException","location":"core/com.hexagontk.core/-multiple-exception/index.html","searchKeys":["MultipleException","class MultipleException(val causes: List<Throwable>, message: String = \"\") : RuntimeException","com.hexagontk.core.MultipleException"]},{"name":"class ResourceNotFoundException(message: String) : IOException","description":"com.hexagontk.core.ResourceNotFoundException","location":"core/com.hexagontk.core/-resource-not-found-exception/index.html","searchKeys":["ResourceNotFoundException","class ResourceNotFoundException(message: String) : IOException","com.hexagontk.core.ResourceNotFoundException"]},{"name":"const val BLACK: String","description":"com.hexagontk.core.text.AnsiColor.BLACK","location":"core/com.hexagontk.core.text/-ansi-color/-b-l-a-c-k.html","searchKeys":["BLACK","const val BLACK: String","com.hexagontk.core.text.AnsiColor.BLACK"]},{"name":"const val BLACK_BG: String","description":"com.hexagontk.core.text.AnsiColor.BLACK_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-l-a-c-k_-b-g.html","searchKeys":["BLACK_BG","const val BLACK_BG: String","com.hexagontk.core.text.AnsiColor.BLACK_BG"]},{"name":"const val BLINK: String","description":"com.hexagontk.core.text.AnsiEffect.BLINK","location":"core/com.hexagontk.core.text/-ansi-effect/-b-l-i-n-k.html","searchKeys":["BLINK","const val BLINK: String","com.hexagontk.core.text.AnsiEffect.BLINK"]},{"name":"const val BLINK_OFF: String","description":"com.hexagontk.core.text.AnsiEffect.BLINK_OFF","location":"core/com.hexagontk.core.text/-ansi-effect/-b-l-i-n-k_-o-f-f.html","searchKeys":["BLINK_OFF","const val BLINK_OFF: String","com.hexagontk.core.text.AnsiEffect.BLINK_OFF"]},{"name":"const val BLUE: String","description":"com.hexagontk.core.text.AnsiColor.BLUE","location":"core/com.hexagontk.core.text/-ansi-color/-b-l-u-e.html","searchKeys":["BLUE","const val BLUE: String","com.hexagontk.core.text.AnsiColor.BLUE"]},{"name":"const val BLUE_BG: String","description":"com.hexagontk.core.text.AnsiColor.BLUE_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-l-u-e_-b-g.html","searchKeys":["BLUE_BG","const val BLUE_BG: String","com.hexagontk.core.text.AnsiColor.BLUE_BG"]},{"name":"const val BOLD: String","description":"com.hexagontk.core.text.AnsiEffect.BOLD","location":"core/com.hexagontk.core.text/-ansi-effect/-b-o-l-d.html","searchKeys":["BOLD","const val BOLD: String","com.hexagontk.core.text.AnsiEffect.BOLD"]},{"name":"const val BOLD_OFF: String","description":"com.hexagontk.core.text.AnsiEffect.BOLD_OFF","location":"core/com.hexagontk.core.text/-ansi-effect/-b-o-l-d_-o-f-f.html","searchKeys":["BOLD_OFF","const val BOLD_OFF: String","com.hexagontk.core.text.AnsiEffect.BOLD_OFF"]},{"name":"const val BRIGHT_BLACK: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_BLACK","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-b-l-a-c-k.html","searchKeys":["BRIGHT_BLACK","const val BRIGHT_BLACK: String","com.hexagontk.core.text.AnsiColor.BRIGHT_BLACK"]},{"name":"const val BRIGHT_BLACK_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_BLACK_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-b-l-a-c-k_-b-g.html","searchKeys":["BRIGHT_BLACK_BG","const val BRIGHT_BLACK_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_BLACK_BG"]},{"name":"const val BRIGHT_BLUE: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_BLUE","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-b-l-u-e.html","searchKeys":["BRIGHT_BLUE","const val BRIGHT_BLUE: String","com.hexagontk.core.text.AnsiColor.BRIGHT_BLUE"]},{"name":"const val BRIGHT_BLUE_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_BLUE_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-b-l-u-e_-b-g.html","searchKeys":["BRIGHT_BLUE_BG","const val BRIGHT_BLUE_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_BLUE_BG"]},{"name":"const val BRIGHT_CYAN: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_CYAN","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-c-y-a-n.html","searchKeys":["BRIGHT_CYAN","const val BRIGHT_CYAN: String","com.hexagontk.core.text.AnsiColor.BRIGHT_CYAN"]},{"name":"const val BRIGHT_CYAN_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_CYAN_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-c-y-a-n_-b-g.html","searchKeys":["BRIGHT_CYAN_BG","const val BRIGHT_CYAN_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_CYAN_BG"]},{"name":"const val BRIGHT_GREEN: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_GREEN","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-g-r-e-e-n.html","searchKeys":["BRIGHT_GREEN","const val BRIGHT_GREEN: String","com.hexagontk.core.text.AnsiColor.BRIGHT_GREEN"]},{"name":"const val BRIGHT_GREEN_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_GREEN_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-g-r-e-e-n_-b-g.html","searchKeys":["BRIGHT_GREEN_BG","const val BRIGHT_GREEN_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_GREEN_BG"]},{"name":"const val BRIGHT_MAGENTA: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_MAGENTA","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-m-a-g-e-n-t-a.html","searchKeys":["BRIGHT_MAGENTA","const val BRIGHT_MAGENTA: String","com.hexagontk.core.text.AnsiColor.BRIGHT_MAGENTA"]},{"name":"const val BRIGHT_MAGENTA_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_MAGENTA_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-m-a-g-e-n-t-a_-b-g.html","searchKeys":["BRIGHT_MAGENTA_BG","const val BRIGHT_MAGENTA_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_MAGENTA_BG"]},{"name":"const val BRIGHT_RED: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_RED","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-r-e-d.html","searchKeys":["BRIGHT_RED","const val BRIGHT_RED: String","com.hexagontk.core.text.AnsiColor.BRIGHT_RED"]},{"name":"const val BRIGHT_RED_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_RED_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-r-e-d_-b-g.html","searchKeys":["BRIGHT_RED_BG","const val BRIGHT_RED_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_RED_BG"]},{"name":"const val BRIGHT_WHITE: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_WHITE","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-w-h-i-t-e.html","searchKeys":["BRIGHT_WHITE","const val BRIGHT_WHITE: String","com.hexagontk.core.text.AnsiColor.BRIGHT_WHITE"]},{"name":"const val BRIGHT_WHITE_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_WHITE_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-w-h-i-t-e_-b-g.html","searchKeys":["BRIGHT_WHITE_BG","const val BRIGHT_WHITE_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_WHITE_BG"]},{"name":"const val BRIGHT_YELLOW: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_YELLOW","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-y-e-l-l-o-w.html","searchKeys":["BRIGHT_YELLOW","const val BRIGHT_YELLOW: String","com.hexagontk.core.text.AnsiColor.BRIGHT_YELLOW"]},{"name":"const val BRIGHT_YELLOW_BG: String","description":"com.hexagontk.core.text.AnsiColor.BRIGHT_YELLOW_BG","location":"core/com.hexagontk.core.text/-ansi-color/-b-r-i-g-h-t_-y-e-l-l-o-w_-b-g.html","searchKeys":["BRIGHT_YELLOW_BG","const val BRIGHT_YELLOW_BG: String","com.hexagontk.core.text.AnsiColor.BRIGHT_YELLOW_BG"]},{"name":"const val CSI: String","description":"com.hexagontk.core.text.Ansi.CSI","location":"core/com.hexagontk.core.text/-ansi/-c-s-i.html","searchKeys":["CSI","const val CSI: String","com.hexagontk.core.text.Ansi.CSI"]},{"name":"const val CYAN: String","description":"com.hexagontk.core.text.AnsiColor.CYAN","location":"core/com.hexagontk.core.text/-ansi-color/-c-y-a-n.html","searchKeys":["CYAN","const val CYAN: String","com.hexagontk.core.text.AnsiColor.CYAN"]},{"name":"const val CYAN_BG: String","description":"com.hexagontk.core.text.AnsiColor.CYAN_BG","location":"core/com.hexagontk.core.text/-ansi-color/-c-y-a-n_-b-g.html","searchKeys":["CYAN_BG","const val CYAN_BG: String","com.hexagontk.core.text.AnsiColor.CYAN_BG"]},{"name":"const val DEFAULT: String","description":"com.hexagontk.core.text.AnsiColor.DEFAULT","location":"core/com.hexagontk.core.text/-ansi-color/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","const val DEFAULT: String","com.hexagontk.core.text.AnsiColor.DEFAULT"]},{"name":"const val DEFAULT_BG: String","description":"com.hexagontk.core.text.AnsiColor.DEFAULT_BG","location":"core/com.hexagontk.core.text/-ansi-color/-d-e-f-a-u-l-t_-b-g.html","searchKeys":["DEFAULT_BG","const val DEFAULT_BG: String","com.hexagontk.core.text.AnsiColor.DEFAULT_BG"]},{"name":"const val DIM: String","description":"com.hexagontk.core.text.AnsiEffect.DIM","location":"core/com.hexagontk.core.text/-ansi-effect/-d-i-m.html","searchKeys":["DIM","const val DIM: String","com.hexagontk.core.text.AnsiEffect.DIM"]},{"name":"const val DIM_OFF: String","description":"com.hexagontk.core.text.AnsiEffect.DIM_OFF","location":"core/com.hexagontk.core.text/-ansi-effect/-d-i-m_-o-f-f.html","searchKeys":["DIM_OFF","const val DIM_OFF: String","com.hexagontk.core.text.AnsiEffect.DIM_OFF"]},{"name":"const val FAST_BLINK: String","description":"com.hexagontk.core.text.AnsiEffect.FAST_BLINK","location":"core/com.hexagontk.core.text/-ansi-effect/-f-a-s-t_-b-l-i-n-k.html","searchKeys":["FAST_BLINK","const val FAST_BLINK: String","com.hexagontk.core.text.AnsiEffect.FAST_BLINK"]},{"name":"const val GREEN: String","description":"com.hexagontk.core.text.AnsiColor.GREEN","location":"core/com.hexagontk.core.text/-ansi-color/-g-r-e-e-n.html","searchKeys":["GREEN","const val GREEN: String","com.hexagontk.core.text.AnsiColor.GREEN"]},{"name":"const val GREEN_BG: String","description":"com.hexagontk.core.text.AnsiColor.GREEN_BG","location":"core/com.hexagontk.core.text/-ansi-color/-g-r-e-e-n_-b-g.html","searchKeys":["GREEN_BG","const val GREEN_BG: String","com.hexagontk.core.text.AnsiColor.GREEN_BG"]},{"name":"const val HEXAGONTK_LOGGING_COLOR: String","description":"com.hexagontk.core.HEXAGONTK_LOGGING_COLOR","location":"core/com.hexagontk.core/-h-e-x-a-g-o-n-t-k_-l-o-g-g-i-n-g_-c-o-l-o-r.html","searchKeys":["HEXAGONTK_LOGGING_COLOR","const val HEXAGONTK_LOGGING_COLOR: String","com.hexagontk.core.HEXAGONTK_LOGGING_COLOR"]},{"name":"const val HEXAGONTK_LOGGING_LOGGER_NAME: String","description":"com.hexagontk.core.HEXAGONTK_LOGGING_LOGGER_NAME","location":"core/com.hexagontk.core/-h-e-x-a-g-o-n-t-k_-l-o-g-g-i-n-g_-l-o-g-g-e-r_-n-a-m-e.html","searchKeys":["HEXAGONTK_LOGGING_LOGGER_NAME","const val HEXAGONTK_LOGGING_LOGGER_NAME: String","com.hexagontk.core.HEXAGONTK_LOGGING_LOGGER_NAME"]},{"name":"const val INVERSE: String","description":"com.hexagontk.core.text.AnsiEffect.INVERSE","location":"core/com.hexagontk.core.text/-ansi-effect/-i-n-v-e-r-s-e.html","searchKeys":["INVERSE","const val INVERSE: String","com.hexagontk.core.text.AnsiEffect.INVERSE"]},{"name":"const val INVERSE_OFF: String","description":"com.hexagontk.core.text.AnsiEffect.INVERSE_OFF","location":"core/com.hexagontk.core.text/-ansi-effect/-i-n-v-e-r-s-e_-o-f-f.html","searchKeys":["INVERSE_OFF","const val INVERSE_OFF: String","com.hexagontk.core.text.AnsiEffect.INVERSE_OFF"]},{"name":"const val ITALIC: String","description":"com.hexagontk.core.text.AnsiEffect.ITALIC","location":"core/com.hexagontk.core.text/-ansi-effect/-i-t-a-l-i-c.html","searchKeys":["ITALIC","const val ITALIC: String","com.hexagontk.core.text.AnsiEffect.ITALIC"]},{"name":"const val ITALIC_OFF: String","description":"com.hexagontk.core.text.AnsiEffect.ITALIC_OFF","location":"core/com.hexagontk.core.text/-ansi-effect/-i-t-a-l-i-c_-o-f-f.html","searchKeys":["ITALIC_OFF","const val ITALIC_OFF: String","com.hexagontk.core.text.AnsiEffect.ITALIC_OFF"]},{"name":"const val MAGENTA: String","description":"com.hexagontk.core.text.AnsiColor.MAGENTA","location":"core/com.hexagontk.core.text/-ansi-color/-m-a-g-e-n-t-a.html","searchKeys":["MAGENTA","const val MAGENTA: String","com.hexagontk.core.text.AnsiColor.MAGENTA"]},{"name":"const val MAGENTA_BG: String","description":"com.hexagontk.core.text.AnsiColor.MAGENTA_BG","location":"core/com.hexagontk.core.text/-ansi-color/-m-a-g-e-n-t-a_-b-g.html","searchKeys":["MAGENTA_BG","const val MAGENTA_BG: String","com.hexagontk.core.text.AnsiColor.MAGENTA_BG"]},{"name":"const val OSC: String","description":"com.hexagontk.core.text.Ansi.OSC","location":"core/com.hexagontk.core.text/-ansi/-o-s-c.html","searchKeys":["OSC","const val OSC: String","com.hexagontk.core.text.Ansi.OSC"]},{"name":"const val RED: String","description":"com.hexagontk.core.text.AnsiColor.RED","location":"core/com.hexagontk.core.text/-ansi-color/-r-e-d.html","searchKeys":["RED","const val RED: String","com.hexagontk.core.text.AnsiColor.RED"]},{"name":"const val RED_BG: String","description":"com.hexagontk.core.text.AnsiColor.RED_BG","location":"core/com.hexagontk.core.text/-ansi-color/-r-e-d_-b-g.html","searchKeys":["RED_BG","const val RED_BG: String","com.hexagontk.core.text.AnsiColor.RED_BG"]},{"name":"const val RESET: String","description":"com.hexagontk.core.text.Ansi.RESET","location":"core/com.hexagontk.core.text/-ansi/-r-e-s-e-t.html","searchKeys":["RESET","const val RESET: String","com.hexagontk.core.text.Ansi.RESET"]},{"name":"const val ST: String","description":"com.hexagontk.core.text.Ansi.ST","location":"core/com.hexagontk.core.text/-ansi/-s-t.html","searchKeys":["ST","const val ST: String","com.hexagontk.core.text.Ansi.ST"]},{"name":"const val STRIKE: String","description":"com.hexagontk.core.text.AnsiEffect.STRIKE","location":"core/com.hexagontk.core.text/-ansi-effect/-s-t-r-i-k-e.html","searchKeys":["STRIKE","const val STRIKE: String","com.hexagontk.core.text.AnsiEffect.STRIKE"]},{"name":"const val STRIKE_OFF: String","description":"com.hexagontk.core.text.AnsiEffect.STRIKE_OFF","location":"core/com.hexagontk.core.text/-ansi-effect/-s-t-r-i-k-e_-o-f-f.html","searchKeys":["STRIKE_OFF","const val STRIKE_OFF: String","com.hexagontk.core.text.AnsiEffect.STRIKE_OFF"]},{"name":"const val UNDERLINE: String","description":"com.hexagontk.core.text.AnsiEffect.UNDERLINE","location":"core/com.hexagontk.core.text/-ansi-effect/-u-n-d-e-r-l-i-n-e.html","searchKeys":["UNDERLINE","const val UNDERLINE: String","com.hexagontk.core.text.AnsiEffect.UNDERLINE"]},{"name":"const val UNDERLINE_OFF: String","description":"com.hexagontk.core.text.AnsiEffect.UNDERLINE_OFF","location":"core/com.hexagontk.core.text/-ansi-effect/-u-n-d-e-r-l-i-n-e_-o-f-f.html","searchKeys":["UNDERLINE_OFF","const val UNDERLINE_OFF: String","com.hexagontk.core.text.AnsiEffect.UNDERLINE_OFF"]},{"name":"const val WHITE: String","description":"com.hexagontk.core.text.AnsiColor.WHITE","location":"core/com.hexagontk.core.text/-ansi-color/-w-h-i-t-e.html","searchKeys":["WHITE","const val WHITE: String","com.hexagontk.core.text.AnsiColor.WHITE"]},{"name":"const val WHITE_BG: String","description":"com.hexagontk.core.text.AnsiColor.WHITE_BG","location":"core/com.hexagontk.core.text/-ansi-color/-w-h-i-t-e_-b-g.html","searchKeys":["WHITE_BG","const val WHITE_BG: String","com.hexagontk.core.text.AnsiColor.WHITE_BG"]},{"name":"const val YELLOW: String","description":"com.hexagontk.core.text.AnsiColor.YELLOW","location":"core/com.hexagontk.core.text/-ansi-color/-y-e-l-l-o-w.html","searchKeys":["YELLOW","const val YELLOW: String","com.hexagontk.core.text.AnsiColor.YELLOW"]},{"name":"const val YELLOW_BG: String","description":"com.hexagontk.core.text.AnsiColor.YELLOW_BG","location":"core/com.hexagontk.core.text/-ansi-color/-y-e-l-l-o-w_-b-g.html","searchKeys":["YELLOW_BG","const val YELLOW_BG: String","com.hexagontk.core.text.AnsiColor.YELLOW_BG"]},{"name":"constructor(causes: List<Throwable>, message: String = \"\")","description":"com.hexagontk.core.MultipleException.MultipleException","location":"core/com.hexagontk.core/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","constructor(causes: List<Throwable>, message: String = \"\")","com.hexagontk.core.MultipleException.MultipleException"]},{"name":"constructor(code: Int, message: String = \"\", cause: Throwable? = null)","description":"com.hexagontk.core.CodedException.CodedException","location":"core/com.hexagontk.core/-coded-exception/-coded-exception.html","searchKeys":["CodedException","constructor(code: Int, message: String = \"\", cause: Throwable? = null)","com.hexagontk.core.CodedException.CodedException"]},{"name":"constructor(group: MediaTypeGroup, type: String)","description":"com.hexagontk.core.media.MediaType.MediaType","location":"core/com.hexagontk.core.media/-media-type/-media-type.html","searchKeys":["MediaType","constructor(group: MediaTypeGroup, type: String)","com.hexagontk.core.media.MediaType.MediaType"]},{"name":"constructor(message: String)","description":"com.hexagontk.core.ResourceNotFoundException.ResourceNotFoundException","location":"core/com.hexagontk.core/-resource-not-found-exception/-resource-not-found-exception.html","searchKeys":["ResourceNotFoundException","constructor(message: String)","com.hexagontk.core.ResourceNotFoundException.ResourceNotFoundException"]},{"name":"constructor(message: String, causes: List<Throwable>)","description":"com.hexagontk.core.MultipleException.MultipleException","location":"core/com.hexagontk.core/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","constructor(message: String, causes: List<Throwable>)","com.hexagontk.core.MultipleException.MultipleException"]},{"name":"constructor(message: String, vararg causes: Throwable)","description":"com.hexagontk.core.MultipleException.MultipleException","location":"core/com.hexagontk.core/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","constructor(message: String, vararg causes: Throwable)","com.hexagontk.core.MultipleException.MultipleException"]},{"name":"constructor(pattern: String)","description":"com.hexagontk.core.text.Glob.Glob","location":"core/com.hexagontk.core.text/-glob/-glob.html","searchKeys":["Glob","constructor(pattern: String)","com.hexagontk.core.text.Glob.Glob"]},{"name":"constructor(vararg causes: Throwable)","description":"com.hexagontk.core.MultipleException.MultipleException","location":"core/com.hexagontk.core/-multiple-exception/-multiple-exception.html","searchKeys":["MultipleException","constructor(vararg causes: Throwable)","com.hexagontk.core.MultipleException.MultipleException"]},{"name":"enum MediaTypeGroup : Enum<MediaTypeGroup> ","description":"com.hexagontk.core.media.MediaTypeGroup","location":"core/com.hexagontk.core.media/-media-type-group/index.html","searchKeys":["MediaTypeGroup","enum MediaTypeGroup : Enum<MediaTypeGroup> ","com.hexagontk.core.media.MediaTypeGroup"]},{"name":"enum OsKind : Enum<OsKind> ","description":"com.hexagontk.core.OsKind","location":"core/com.hexagontk.core/-os-kind/index.html","searchKeys":["OsKind","enum OsKind : Enum<OsKind> ","com.hexagontk.core.OsKind"]},{"name":"fun <E : Throwable> System.Logger.error(exception: E?, message: (E?) -> Any? = { \"\" })","description":"com.hexagontk.core.error","location":"core/com.hexagontk.core/error.html","searchKeys":["error","fun <E : Throwable> System.Logger.error(exception: E?, message: (E?) -> Any? = { \"\" })","com.hexagontk.core.error"]},{"name":"fun <E : Throwable> System.Logger.log(level: System.Logger.Level, exception: E, message: (E) -> Any?)","description":"com.hexagontk.core.log","location":"core/com.hexagontk.core/log.html","searchKeys":["log","fun <E : Throwable> System.Logger.log(level: System.Logger.Level, exception: E, message: (E) -> Any?)","com.hexagontk.core.log"]},{"name":"fun <E : Throwable> System.Logger.warn(exception: E?, message: (E?) -> Any? = { \"\" })","description":"com.hexagontk.core.warn","location":"core/com.hexagontk.core/warn.html","searchKeys":["warn","fun <E : Throwable> System.Logger.warn(exception: E?, message: (E?) -> Any? = { \"\" })","com.hexagontk.core.warn"]},{"name":"fun <K : Any> mapOfNotNull(vararg pairs: Pair<K, *>): Map<K, *>","description":"com.hexagontk.core.mapOfNotNull","location":"core/com.hexagontk.core/map-of-not-null.html","searchKeys":["mapOfNotNull","fun <K : Any> mapOfNotNull(vararg pairs: Pair<K, *>): Map<K, *>","com.hexagontk.core.mapOfNotNull"]},{"name":"fun <K, V> Map<K, Collection<V>>.pairs(): Collection<Pair<K, V>>","description":"com.hexagontk.core.pairs","location":"core/com.hexagontk.core/pairs.html","searchKeys":["pairs","fun <K, V> Map<K, Collection<V>>.pairs(): Collection<Pair<K, V>>","com.hexagontk.core.pairs"]},{"name":"fun <K, V> Map<K, V>.require(name: K): V","description":"com.hexagontk.core.require","location":"core/com.hexagontk.core/require.html","searchKeys":["require","fun <K, V> Map<K, V>.require(name: K): V","com.hexagontk.core.require"]},{"name":"fun <K, V> Map<K, V?>.filterNotEmpty(): Map<K, V>","description":"com.hexagontk.core.filterNotEmpty","location":"core/com.hexagontk.core/filter-not-empty.html","searchKeys":["filterNotEmpty","fun <K, V> Map<K, V?>.filterNotEmpty(): Map<K, V>","com.hexagontk.core.filterNotEmpty"]},{"name":"fun <T : Any> String.parse(type: KClass<T>): T","description":"com.hexagontk.core.text.parse","location":"core/com.hexagontk.core.text/parse.html","searchKeys":["parse","fun <T : Any> String.parse(type: KClass<T>): T","com.hexagontk.core.text.parse"]},{"name":"fun <T : Any> String?.parseOrNull(type: KClass<T>): T?","description":"com.hexagontk.core.text.parseOrNull","location":"core/com.hexagontk.core.text/parse-or-null.html","searchKeys":["parseOrNull","fun <T : Any> String?.parseOrNull(type: KClass<T>): T?","com.hexagontk.core.text.parseOrNull"]},{"name":"fun <T : Any> fieldsMapOf(vararg fields: Pair<KProperty1<T, *>, *>): Map<String, *>","description":"com.hexagontk.core.fieldsMapOf","location":"core/com.hexagontk.core/fields-map-of.html","searchKeys":["fieldsMapOf","fun <T : Any> fieldsMapOf(vararg fields: Pair<KProperty1<T, *>, *>): Map<String, *>","com.hexagontk.core.fieldsMapOf"]},{"name":"fun <T : Any> fieldsMapOfNotNull(vararg fields: Pair<KProperty1<T, *>, *>): Map<String, *>","description":"com.hexagontk.core.fieldsMapOfNotNull","location":"core/com.hexagontk.core/fields-map-of-not-null.html","searchKeys":["fieldsMapOfNotNull","fun <T : Any> fieldsMapOfNotNull(vararg fields: Pair<KProperty1<T, *>, *>): Map<String, *>","com.hexagontk.core.fieldsMapOfNotNull"]},{"name":"fun <T : Any> systemSetting(type: KClass<T>, name: String): T","description":"com.hexagontk.core.Platform.systemSetting","location":"core/com.hexagontk.core/-platform/system-setting.html","searchKeys":["systemSetting","fun <T : Any> systemSetting(type: KClass<T>, name: String): T","com.hexagontk.core.Platform.systemSetting"]},{"name":"fun <T : Any> systemSetting(type: KClass<T>, name: String, defaultValue: T): T","description":"com.hexagontk.core.Platform.systemSetting","location":"core/com.hexagontk.core/-platform/system-setting.html","searchKeys":["systemSetting","fun <T : Any> systemSetting(type: KClass<T>, name: String, defaultValue: T): T","com.hexagontk.core.Platform.systemSetting"]},{"name":"fun <T : Any> systemSettingOrNull(type: KClass<T>, name: String): T?","description":"com.hexagontk.core.Platform.systemSettingOrNull","location":"core/com.hexagontk.core/-platform/system-setting-or-null.html","searchKeys":["systemSettingOrNull","fun <T : Any> systemSettingOrNull(type: KClass<T>, name: String): T?","com.hexagontk.core.Platform.systemSettingOrNull"]},{"name":"fun <T : Enum<*>> String.toEnum(converter: (String) -> T): T","description":"com.hexagontk.core.text.toEnum","location":"core/com.hexagontk.core.text/to-enum.html","searchKeys":["toEnum","fun <T : Enum<*>> String.toEnum(converter: (String) -> T): T","com.hexagontk.core.text.toEnum"]},{"name":"fun <T : Enum<*>> String.toEnumOrNull(converter: (String) -> T): T?","description":"com.hexagontk.core.text.toEnumOrNull","location":"core/com.hexagontk.core.text/to-enum-or-null.html","searchKeys":["toEnumOrNull","fun <T : Enum<*>> String.toEnumOrNull(converter: (String) -> T): T?","com.hexagontk.core.text.toEnumOrNull"]},{"name":"fun <T> T.debug(prefix: String = \"\"): T","description":"com.hexagontk.core.debug","location":"core/com.hexagontk.core/debug.html","searchKeys":["debug","fun <T> T.debug(prefix: String = \"\"): T","com.hexagontk.core.debug"]},{"name":"fun <T> T.info(prefix: String = \"\"): T","description":"com.hexagontk.core.info","location":"core/com.hexagontk.core/info.html","searchKeys":["info","fun <T> T.info(prefix: String = \"\"): T","com.hexagontk.core.info"]},{"name":"fun <T> T.trace(prefix: String = \"\"): T","description":"com.hexagontk.core.trace","location":"core/com.hexagontk.core/trace.html","searchKeys":["trace","fun <T> T.trace(prefix: String = \"\"): T","com.hexagontk.core.trace"]},{"name":"fun <V> Collection<V?>.filterNotEmpty(): Collection<V>","description":"com.hexagontk.core.filterNotEmpty","location":"core/com.hexagontk.core/filter-not-empty.html","searchKeys":["filterNotEmpty","fun <V> Collection<V?>.filterNotEmpty(): Collection<V>","com.hexagontk.core.filterNotEmpty"]},{"name":"fun <V> notEmpty(value: V?): Boolean","description":"com.hexagontk.core.notEmpty","location":"core/com.hexagontk.core/not-empty.html","searchKeys":["notEmpty","fun <V> notEmpty(value: V?): Boolean","com.hexagontk.core.notEmpty"]},{"name":"fun ByteArray.encodeToBase64(): String","description":"com.hexagontk.core.text.encodeToBase64","location":"core/com.hexagontk.core.text/encode-to-base64.html","searchKeys":["encodeToBase64","fun ByteArray.encodeToBase64(): String","com.hexagontk.core.text.encodeToBase64"]},{"name":"fun Collection<*>.filterNotEmptyRecursive(): Collection<*>","description":"com.hexagontk.core.filterNotEmptyRecursive","location":"core/com.hexagontk.core/filter-not-empty-recursive.html","searchKeys":["filterNotEmptyRecursive","fun Collection<*>.filterNotEmptyRecursive(): Collection<*>","com.hexagontk.core.filterNotEmptyRecursive"]},{"name":"fun Date.toLocalDate(): LocalDate","description":"com.hexagontk.core.toLocalDate","location":"core/com.hexagontk.core/to-local-date.html","searchKeys":["toLocalDate","fun Date.toLocalDate(): LocalDate","com.hexagontk.core.toLocalDate"]},{"name":"fun Date.toLocalDateTime(): LocalDateTime","description":"com.hexagontk.core.toLocalDateTime","location":"core/com.hexagontk.core/to-local-date-time.html","searchKeys":["toLocalDateTime","fun Date.toLocalDateTime(): LocalDateTime","com.hexagontk.core.toLocalDateTime"]},{"name":"fun KeyStore.getPrivateKey(alias: String, password: String): RSAPrivateKey","description":"com.hexagontk.core.security.getPrivateKey","location":"core/com.hexagontk.core.security/get-private-key.html","searchKeys":["getPrivateKey","fun KeyStore.getPrivateKey(alias: String, password: String): RSAPrivateKey","com.hexagontk.core.security.getPrivateKey"]},{"name":"fun KeyStore.getPublicKey(alias: String): RSAPublicKey","description":"com.hexagontk.core.security.getPublicKey","location":"core/com.hexagontk.core.security/get-public-key.html","searchKeys":["getPublicKey","fun KeyStore.getPublicKey(alias: String): RSAPublicKey","com.hexagontk.core.security.getPublicKey"]},{"name":"fun LocalDate.toDate(): Date","description":"com.hexagontk.core.toDate","location":"core/com.hexagontk.core/to-date.html","searchKeys":["toDate","fun LocalDate.toDate(): Date","com.hexagontk.core.toDate"]},{"name":"fun LocalDateTime.toDate(): Date","description":"com.hexagontk.core.toDate","location":"core/com.hexagontk.core/to-date.html","searchKeys":["toDate","fun LocalDateTime.toDate(): Date","com.hexagontk.core.toDate"]},{"name":"fun LocalDateTime.withZone(zoneId: ZoneId = Platform.timeZone.toZoneId()): ZonedDateTime","description":"com.hexagontk.core.withZone","location":"core/com.hexagontk.core/with-zone.html","searchKeys":["withZone","fun LocalDateTime.withZone(zoneId: ZoneId = Platform.timeZone.toZoneId()): ZonedDateTime","com.hexagontk.core.withZone"]},{"name":"fun Map<*, *>.filterNotEmptyRecursive(): Map<*, *>","description":"com.hexagontk.core.filterNotEmptyRecursive","location":"core/com.hexagontk.core/filter-not-empty-recursive.html","searchKeys":["filterNotEmptyRecursive","fun Map<*, *>.filterNotEmptyRecursive(): Map<*, *>","com.hexagontk.core.filterNotEmptyRecursive"]},{"name":"fun Map<*, *>.getBoolean(key: KProperty1<*, *>): Boolean?","description":"com.hexagontk.core.getBoolean","location":"core/com.hexagontk.core/get-boolean.html","searchKeys":["getBoolean","fun Map<*, *>.getBoolean(key: KProperty1<*, *>): Boolean?","com.hexagontk.core.getBoolean"]},{"name":"fun Map<*, *>.getBooleans(key: KProperty1<*, *>): Collection<Boolean>?","description":"com.hexagontk.core.getBooleans","location":"core/com.hexagontk.core/get-booleans.html","searchKeys":["getBooleans","fun Map<*, *>.getBooleans(key: KProperty1<*, *>): Collection<Boolean>?","com.hexagontk.core.getBooleans"]},{"name":"fun Map<*, *>.getBooleansOrEmpty(key: KProperty1<*, *>): Collection<Boolean>","description":"com.hexagontk.core.getBooleansOrEmpty","location":"core/com.hexagontk.core/get-booleans-or-empty.html","searchKeys":["getBooleansOrEmpty","fun Map<*, *>.getBooleansOrEmpty(key: KProperty1<*, *>): Collection<Boolean>","com.hexagontk.core.getBooleansOrEmpty"]},{"name":"fun Map<*, *>.getDouble(key: KProperty1<*, *>): Double?","description":"com.hexagontk.core.getDouble","location":"core/com.hexagontk.core/get-double.html","searchKeys":["getDouble","fun Map<*, *>.getDouble(key: KProperty1<*, *>): Double?","com.hexagontk.core.getDouble"]},{"name":"fun Map<*, *>.getDoubles(key: KProperty1<*, *>): Collection<Double>?","description":"com.hexagontk.core.getDoubles","location":"core/com.hexagontk.core/get-doubles.html","searchKeys":["getDoubles","fun Map<*, *>.getDoubles(key: KProperty1<*, *>): Collection<Double>?","com.hexagontk.core.getDoubles"]},{"name":"fun Map<*, *>.getDoublesOrEmpty(key: KProperty1<*, *>): Collection<Double>","description":"com.hexagontk.core.getDoublesOrEmpty","location":"core/com.hexagontk.core/get-doubles-or-empty.html","searchKeys":["getDoublesOrEmpty","fun Map<*, *>.getDoublesOrEmpty(key: KProperty1<*, *>): Collection<Double>","com.hexagontk.core.getDoublesOrEmpty"]},{"name":"fun Map<*, *>.getFloat(key: KProperty1<*, *>): Float?","description":"com.hexagontk.core.getFloat","location":"core/com.hexagontk.core/get-float.html","searchKeys":["getFloat","fun Map<*, *>.getFloat(key: KProperty1<*, *>): Float?","com.hexagontk.core.getFloat"]},{"name":"fun Map<*, *>.getFloats(key: KProperty1<*, *>): Collection<Float>?","description":"com.hexagontk.core.getFloats","location":"core/com.hexagontk.core/get-floats.html","searchKeys":["getFloats","fun Map<*, *>.getFloats(key: KProperty1<*, *>): Collection<Float>?","com.hexagontk.core.getFloats"]},{"name":"fun Map<*, *>.getFloatsOrEmpty(key: KProperty1<*, *>): Collection<Float>","description":"com.hexagontk.core.getFloatsOrEmpty","location":"core/com.hexagontk.core/get-floats-or-empty.html","searchKeys":["getFloatsOrEmpty","fun Map<*, *>.getFloatsOrEmpty(key: KProperty1<*, *>): Collection<Float>","com.hexagontk.core.getFloatsOrEmpty"]},{"name":"fun Map<*, *>.getInt(key: KProperty1<*, *>): Int?","description":"com.hexagontk.core.getInt","location":"core/com.hexagontk.core/get-int.html","searchKeys":["getInt","fun Map<*, *>.getInt(key: KProperty1<*, *>): Int?","com.hexagontk.core.getInt"]},{"name":"fun Map<*, *>.getInts(key: KProperty1<*, *>): Collection<Int>?","description":"com.hexagontk.core.getInts","location":"core/com.hexagontk.core/get-ints.html","searchKeys":["getInts","fun Map<*, *>.getInts(key: KProperty1<*, *>): Collection<Int>?","com.hexagontk.core.getInts"]},{"name":"fun Map<*, *>.getIntsOrEmpty(key: KProperty1<*, *>): Collection<Int>","description":"com.hexagontk.core.getIntsOrEmpty","location":"core/com.hexagontk.core/get-ints-or-empty.html","searchKeys":["getIntsOrEmpty","fun Map<*, *>.getIntsOrEmpty(key: KProperty1<*, *>): Collection<Int>","com.hexagontk.core.getIntsOrEmpty"]},{"name":"fun Map<*, *>.getList(key: KProperty1<*, *>): Collection<*>?","description":"com.hexagontk.core.getList","location":"core/com.hexagontk.core/get-list.html","searchKeys":["getList","fun Map<*, *>.getList(key: KProperty1<*, *>): Collection<*>?","com.hexagontk.core.getList"]},{"name":"fun Map<*, *>.getListOrEmpty(key: KProperty1<*, *>): Collection<*>","description":"com.hexagontk.core.getListOrEmpty","location":"core/com.hexagontk.core/get-list-or-empty.html","searchKeys":["getListOrEmpty","fun Map<*, *>.getListOrEmpty(key: KProperty1<*, *>): Collection<*>","com.hexagontk.core.getListOrEmpty"]},{"name":"fun Map<*, *>.getLists(key: KProperty1<*, *>): Collection<List<*>>?","description":"com.hexagontk.core.getLists","location":"core/com.hexagontk.core/get-lists.html","searchKeys":["getLists","fun Map<*, *>.getLists(key: KProperty1<*, *>): Collection<List<*>>?","com.hexagontk.core.getLists"]},{"name":"fun Map<*, *>.getListsOrEmpty(key: KProperty1<*, *>): Collection<Collection<*>>","description":"com.hexagontk.core.getListsOrEmpty","location":"core/com.hexagontk.core/get-lists-or-empty.html","searchKeys":["getListsOrEmpty","fun Map<*, *>.getListsOrEmpty(key: KProperty1<*, *>): Collection<Collection<*>>","com.hexagontk.core.getListsOrEmpty"]},{"name":"fun Map<*, *>.getLong(key: KProperty1<*, *>): Long?","description":"com.hexagontk.core.getLong","location":"core/com.hexagontk.core/get-long.html","searchKeys":["getLong","fun Map<*, *>.getLong(key: KProperty1<*, *>): Long?","com.hexagontk.core.getLong"]},{"name":"fun Map<*, *>.getLongs(key: KProperty1<*, *>): Collection<Long>?","description":"com.hexagontk.core.getLongs","location":"core/com.hexagontk.core/get-longs.html","searchKeys":["getLongs","fun Map<*, *>.getLongs(key: KProperty1<*, *>): Collection<Long>?","com.hexagontk.core.getLongs"]},{"name":"fun Map<*, *>.getLongsOrEmpty(key: KProperty1<*, *>): Collection<Long>","description":"com.hexagontk.core.getLongsOrEmpty","location":"core/com.hexagontk.core/get-longs-or-empty.html","searchKeys":["getLongsOrEmpty","fun Map<*, *>.getLongsOrEmpty(key: KProperty1<*, *>): Collection<Long>","com.hexagontk.core.getLongsOrEmpty"]},{"name":"fun Map<*, *>.getMap(key: KProperty1<*, *>): Map<String, *>?","description":"com.hexagontk.core.getMap","location":"core/com.hexagontk.core/get-map.html","searchKeys":["getMap","fun Map<*, *>.getMap(key: KProperty1<*, *>): Map<String, *>?","com.hexagontk.core.getMap"]},{"name":"fun Map<*, *>.getMapOrEmpty(key: KProperty1<*, *>): Map<String, *>","description":"com.hexagontk.core.getMapOrEmpty","location":"core/com.hexagontk.core/get-map-or-empty.html","searchKeys":["getMapOrEmpty","fun Map<*, *>.getMapOrEmpty(key: KProperty1<*, *>): Map<String, *>","com.hexagontk.core.getMapOrEmpty"]},{"name":"fun Map<*, *>.getMaps(key: KProperty1<*, *>): Collection<Map<String, *>>?","description":"com.hexagontk.core.getMaps","location":"core/com.hexagontk.core/get-maps.html","searchKeys":["getMaps","fun Map<*, *>.getMaps(key: KProperty1<*, *>): Collection<Map<String, *>>?","com.hexagontk.core.getMaps"]},{"name":"fun Map<*, *>.getMapsOrEmpty(key: KProperty1<*, *>): Collection<Map<String, *>>","description":"com.hexagontk.core.getMapsOrEmpty","location":"core/com.hexagontk.core/get-maps-or-empty.html","searchKeys":["getMapsOrEmpty","fun Map<*, *>.getMapsOrEmpty(key: KProperty1<*, *>): Collection<Map<String, *>>","com.hexagontk.core.getMapsOrEmpty"]},{"name":"fun Map<*, *>.getString(key: KProperty1<*, *>): String?","description":"com.hexagontk.core.getString","location":"core/com.hexagontk.core/get-string.html","searchKeys":["getString","fun Map<*, *>.getString(key: KProperty1<*, *>): String?","com.hexagontk.core.getString"]},{"name":"fun Map<*, *>.getStrings(key: KProperty1<*, *>): Collection<String>?","description":"com.hexagontk.core.getStrings","location":"core/com.hexagontk.core/get-strings.html","searchKeys":["getStrings","fun Map<*, *>.getStrings(key: KProperty1<*, *>): Collection<String>?","com.hexagontk.core.getStrings"]},{"name":"fun Map<*, *>.getStringsOrEmpty(key: KProperty1<*, *>): Collection<String>","description":"com.hexagontk.core.getStringsOrEmpty","location":"core/com.hexagontk.core/get-strings-or-empty.html","searchKeys":["getStringsOrEmpty","fun Map<*, *>.getStringsOrEmpty(key: KProperty1<*, *>): Collection<String>","com.hexagontk.core.getStringsOrEmpty"]},{"name":"fun Map<*, *>.requireBoolean(key: KProperty1<*, *>): Boolean","description":"com.hexagontk.core.requireBoolean","location":"core/com.hexagontk.core/require-boolean.html","searchKeys":["requireBoolean","fun Map<*, *>.requireBoolean(key: KProperty1<*, *>): Boolean","com.hexagontk.core.requireBoolean"]},{"name":"fun Map<*, *>.requireBooleans(key: KProperty1<*, *>): Collection<Boolean>","description":"com.hexagontk.core.requireBooleans","location":"core/com.hexagontk.core/require-booleans.html","searchKeys":["requireBooleans","fun Map<*, *>.requireBooleans(key: KProperty1<*, *>): Collection<Boolean>","com.hexagontk.core.requireBooleans"]},{"name":"fun Map<*, *>.requireDouble(key: KProperty1<*, *>): Double","description":"com.hexagontk.core.requireDouble","location":"core/com.hexagontk.core/require-double.html","searchKeys":["requireDouble","fun Map<*, *>.requireDouble(key: KProperty1<*, *>): Double","com.hexagontk.core.requireDouble"]},{"name":"fun Map<*, *>.requireDoubles(key: KProperty1<*, *>): Collection<Double>","description":"com.hexagontk.core.requireDoubles","location":"core/com.hexagontk.core/require-doubles.html","searchKeys":["requireDoubles","fun Map<*, *>.requireDoubles(key: KProperty1<*, *>): Collection<Double>","com.hexagontk.core.requireDoubles"]},{"name":"fun Map<*, *>.requireFloat(key: KProperty1<*, *>): Float","description":"com.hexagontk.core.requireFloat","location":"core/com.hexagontk.core/require-float.html","searchKeys":["requireFloat","fun Map<*, *>.requireFloat(key: KProperty1<*, *>): Float","com.hexagontk.core.requireFloat"]},{"name":"fun Map<*, *>.requireFloats(key: KProperty1<*, *>): Collection<Float>","description":"com.hexagontk.core.requireFloats","location":"core/com.hexagontk.core/require-floats.html","searchKeys":["requireFloats","fun Map<*, *>.requireFloats(key: KProperty1<*, *>): Collection<Float>","com.hexagontk.core.requireFloats"]},{"name":"fun Map<*, *>.requireInt(key: KProperty1<*, *>): Int","description":"com.hexagontk.core.requireInt","location":"core/com.hexagontk.core/require-int.html","searchKeys":["requireInt","fun Map<*, *>.requireInt(key: KProperty1<*, *>): Int","com.hexagontk.core.requireInt"]},{"name":"fun Map<*, *>.requireInts(key: KProperty1<*, *>): List<Int>","description":"com.hexagontk.core.requireInts","location":"core/com.hexagontk.core/require-ints.html","searchKeys":["requireInts","fun Map<*, *>.requireInts(key: KProperty1<*, *>): List<Int>","com.hexagontk.core.requireInts"]},{"name":"fun Map<*, *>.requireList(key: KProperty1<*, *>): Collection<*>","description":"com.hexagontk.core.requireList","location":"core/com.hexagontk.core/require-list.html","searchKeys":["requireList","fun Map<*, *>.requireList(key: KProperty1<*, *>): Collection<*>","com.hexagontk.core.requireList"]},{"name":"fun Map<*, *>.requireLists(key: KProperty1<*, *>): Collection<Collection<*>>","description":"com.hexagontk.core.requireLists","location":"core/com.hexagontk.core/require-lists.html","searchKeys":["requireLists","fun Map<*, *>.requireLists(key: KProperty1<*, *>): Collection<Collection<*>>","com.hexagontk.core.requireLists"]},{"name":"fun Map<*, *>.requireLong(key: KProperty1<*, *>): Long","description":"com.hexagontk.core.requireLong","location":"core/com.hexagontk.core/require-long.html","searchKeys":["requireLong","fun Map<*, *>.requireLong(key: KProperty1<*, *>): Long","com.hexagontk.core.requireLong"]},{"name":"fun Map<*, *>.requireLongs(key: KProperty1<*, *>): Collection<Long>","description":"com.hexagontk.core.requireLongs","location":"core/com.hexagontk.core/require-longs.html","searchKeys":["requireLongs","fun Map<*, *>.requireLongs(key: KProperty1<*, *>): Collection<Long>","com.hexagontk.core.requireLongs"]},{"name":"fun Map<*, *>.requireMap(key: KProperty1<*, *>): Map<String, *>","description":"com.hexagontk.core.requireMap","location":"core/com.hexagontk.core/require-map.html","searchKeys":["requireMap","fun Map<*, *>.requireMap(key: KProperty1<*, *>): Map<String, *>","com.hexagontk.core.requireMap"]},{"name":"fun Map<*, *>.requireMaps(key: KProperty1<*, *>): Collection<Map<String, *>>","description":"com.hexagontk.core.requireMaps","location":"core/com.hexagontk.core/require-maps.html","searchKeys":["requireMaps","fun Map<*, *>.requireMaps(key: KProperty1<*, *>): Collection<Map<String, *>>","com.hexagontk.core.requireMaps"]},{"name":"fun Map<*, *>.requireString(key: KProperty1<*, *>): String","description":"com.hexagontk.core.requireString","location":"core/com.hexagontk.core/require-string.html","searchKeys":["requireString","fun Map<*, *>.requireString(key: KProperty1<*, *>): String","com.hexagontk.core.requireString"]},{"name":"fun Map<*, *>.requireStrings(key: KProperty1<*, *>): Collection<String>","description":"com.hexagontk.core.requireStrings","location":"core/com.hexagontk.core/require-strings.html","searchKeys":["requireStrings","fun Map<*, *>.requireStrings(key: KProperty1<*, *>): Collection<String>","com.hexagontk.core.requireStrings"]},{"name":"fun Period.toTotalDays(): Double","description":"com.hexagontk.core.toTotalDays","location":"core/com.hexagontk.core/to-total-days.html","searchKeys":["toTotalDays","fun Period.toTotalDays(): Double","com.hexagontk.core.toTotalDays"]},{"name":"fun Regex.findGroups(text: String): List<MatchGroup>","description":"com.hexagontk.core.text.findGroups","location":"core/com.hexagontk.core.text/find-groups.html","searchKeys":["findGroups","fun Regex.findGroups(text: String): List<MatchGroup>","com.hexagontk.core.text.findGroups"]},{"name":"fun String.banner(bannerDelimiter: String = \"*\"): String","description":"com.hexagontk.core.text.banner","location":"core/com.hexagontk.core.text/banner.html","searchKeys":["banner","fun String.banner(bannerDelimiter: String = \"*\"): String","com.hexagontk.core.text.banner"]},{"name":"fun String.decodeBase64(): ByteArray","description":"com.hexagontk.core.text.decodeBase64","location":"core/com.hexagontk.core.text/decode-base64.html","searchKeys":["decodeBase64","fun String.decodeBase64(): ByteArray","com.hexagontk.core.text.decodeBase64"]},{"name":"fun String.encodeToBase64(): String","description":"com.hexagontk.core.text.encodeToBase64","location":"core/com.hexagontk.core.text/encode-to-base64.html","searchKeys":["encodeToBase64","fun String.encodeToBase64(): String","com.hexagontk.core.text.encodeToBase64"]},{"name":"fun String.filter(prefix: String, suffix: String, parameters: Map<String, *>): String","description":"com.hexagontk.core.text.filter","location":"core/com.hexagontk.core.text/filter.html","searchKeys":["filter","fun String.filter(prefix: String, suffix: String, parameters: Map<String, *>): String","com.hexagontk.core.text.filter"]},{"name":"fun String.filterVars(parameters: Map<*, *>): String","description":"com.hexagontk.core.text.filterVars","location":"core/com.hexagontk.core.text/filter-vars.html","searchKeys":["filterVars","fun String.filterVars(parameters: Map<*, *>): String","com.hexagontk.core.text.filterVars"]},{"name":"fun String.prependIndent(count: Int = 4, pad: String = \" \"): String","description":"com.hexagontk.core.text.prependIndent","location":"core/com.hexagontk.core.text/prepend-indent.html","searchKeys":["prependIndent","fun String.prependIndent(count: Int = 4, pad: String = \" \"): String","com.hexagontk.core.text.prependIndent"]},{"name":"fun String.stripAccents(): String","description":"com.hexagontk.core.text.stripAccents","location":"core/com.hexagontk.core.text/strip-accents.html","searchKeys":["stripAccents","fun String.stripAccents(): String","com.hexagontk.core.text.stripAccents"]},{"name":"fun String.stripAnsi(): String","description":"com.hexagontk.core.text.stripAnsi","location":"core/com.hexagontk.core.text/strip-ansi.html","searchKeys":["stripAnsi","fun String.stripAnsi(): String","com.hexagontk.core.text.stripAnsi"]},{"name":"fun String.toEnumValue(): String","description":"com.hexagontk.core.text.toEnumValue","location":"core/com.hexagontk.core.text/to-enum-value.html","searchKeys":["toEnumValue","fun String.toEnumValue(): String","com.hexagontk.core.text.toEnumValue"]},{"name":"fun String.toStream(): InputStream","description":"com.hexagontk.core.text.toStream","location":"core/com.hexagontk.core.text/to-stream.html","searchKeys":["toStream","fun String.toStream(): InputStream","com.hexagontk.core.text.toStream"]},{"name":"fun System.Logger.debug(message: () -> Any?)","description":"com.hexagontk.core.debug","location":"core/com.hexagontk.core/debug.html","searchKeys":["debug","fun System.Logger.debug(message: () -> Any?)","com.hexagontk.core.debug"]},{"name":"fun System.Logger.error(message: () -> Any?)","description":"com.hexagontk.core.error","location":"core/com.hexagontk.core/error.html","searchKeys":["error","fun System.Logger.error(message: () -> Any?)","com.hexagontk.core.error"]},{"name":"fun System.Logger.info(message: () -> Any?)","description":"com.hexagontk.core.info","location":"core/com.hexagontk.core/info.html","searchKeys":["info","fun System.Logger.info(message: () -> Any?)","com.hexagontk.core.info"]},{"name":"fun System.Logger.trace(message: () -> Any?)","description":"com.hexagontk.core.trace","location":"core/com.hexagontk.core/trace.html","searchKeys":["trace","fun System.Logger.trace(message: () -> Any?)","com.hexagontk.core.trace"]},{"name":"fun System.Logger.warn(message: () -> Any?)","description":"com.hexagontk.core.warn","location":"core/com.hexagontk.core/warn.html","searchKeys":["warn","fun System.Logger.warn(message: () -> Any?)","com.hexagontk.core.warn"]},{"name":"fun Throwable.filterStackTrace(prefix: String): Array<out StackTraceElement>","description":"com.hexagontk.core.filterStackTrace","location":"core/com.hexagontk.core/filter-stack-trace.html","searchKeys":["filterStackTrace","fun Throwable.filterStackTrace(prefix: String): Array<out StackTraceElement>","com.hexagontk.core.filterStackTrace"]},{"name":"fun Throwable.toText(prefix: String = \"\"): String","description":"com.hexagontk.core.toText","location":"core/com.hexagontk.core/to-text.html","searchKeys":["toText","fun Throwable.toText(prefix: String = \"\"): String","com.hexagontk.core.toText"]},{"name":"fun URL.exists(): Boolean","description":"com.hexagontk.core.exists","location":"core/com.hexagontk.core/exists.html","searchKeys":["exists","fun URL.exists(): Boolean","com.hexagontk.core.exists"]},{"name":"fun URL.firstVariant(vararg suffixes: String): URL","description":"com.hexagontk.core.firstVariant","location":"core/com.hexagontk.core/first-variant.html","searchKeys":["firstVariant","fun URL.firstVariant(vararg suffixes: String): URL","com.hexagontk.core.firstVariant"]},{"name":"fun URL.localized(locale: Locale): URL","description":"com.hexagontk.core.localized","location":"core/com.hexagontk.core/localized.html","searchKeys":["localized","fun URL.localized(locale: Locale): URL","com.hexagontk.core.localized"]},{"name":"fun URL.responseCode(): Int","description":"com.hexagontk.core.responseCode","location":"core/com.hexagontk.core/response-code.html","searchKeys":["responseCode","fun URL.responseCode(): Int","com.hexagontk.core.responseCode"]},{"name":"fun URL.responseFound(): Boolean","description":"com.hexagontk.core.responseFound","location":"core/com.hexagontk.core/response-found.html","searchKeys":["responseFound","fun URL.responseFound(): Boolean","com.hexagontk.core.responseFound"]},{"name":"fun URL.responseSuccessful(): Boolean","description":"com.hexagontk.core.responseSuccessful","location":"core/com.hexagontk.core/response-successful.html","searchKeys":["responseSuccessful","fun URL.responseSuccessful(): Boolean","com.hexagontk.core.responseSuccessful"]},{"name":"fun ZonedDateTime.toDate(): Date","description":"com.hexagontk.core.toDate","location":"core/com.hexagontk.core/to-date.html","searchKeys":["toDate","fun ZonedDateTime.toDate(): Date","com.hexagontk.core.toDate"]},{"name":"fun bg(r: Int = 0, g: Int = 0, b: Int = 0): String","description":"com.hexagontk.core.text.AnsiColor.bg","location":"core/com.hexagontk.core.text/-ansi-color/bg.html","searchKeys":["bg","fun bg(r: Int = 0, g: Int = 0, b: Int = 0): String","com.hexagontk.core.text.AnsiColor.bg"]},{"name":"fun chainHmac(algorithm: String, vararg fields: String): ByteArray","description":"com.hexagontk.core.security.chainHmac","location":"core/com.hexagontk.core.security/chain-hmac.html","searchKeys":["chainHmac","fun chainHmac(algorithm: String, vararg fields: String): ByteArray","com.hexagontk.core.security.chainHmac"]},{"name":"fun createKeyManagerFactory(resource: URL, password: String, algorithm: String = KeyManagerFactory.getDefaultAlgorithm()): KeyManagerFactory","description":"com.hexagontk.core.security.createKeyManagerFactory","location":"core/com.hexagontk.core.security/create-key-manager-factory.html","searchKeys":["createKeyManagerFactory","fun createKeyManagerFactory(resource: URL, password: String, algorithm: String = KeyManagerFactory.getDefaultAlgorithm()): KeyManagerFactory","com.hexagontk.core.security.createKeyManagerFactory"]},{"name":"fun createTrustManagerFactory(resource: URL, password: String, algorithm: String = TrustManagerFactory.getDefaultAlgorithm()): TrustManagerFactory","description":"com.hexagontk.core.security.createTrustManagerFactory","location":"core/com.hexagontk.core.security/create-trust-manager-factory.html","searchKeys":["createTrustManagerFactory","fun createTrustManagerFactory(resource: URL, password: String, algorithm: String = TrustManagerFactory.getDefaultAlgorithm()): TrustManagerFactory","com.hexagontk.core.security.createTrustManagerFactory"]},{"name":"fun createURLStreamHandler(protocol: String): URLStreamHandler?","description":"com.hexagontk.core.ClasspathHandler.createURLStreamHandler","location":"core/com.hexagontk.core/-classpath-handler/create-u-r-l-stream-handler.html","searchKeys":["createURLStreamHandler","fun createURLStreamHandler(protocol: String): URLStreamHandler?","com.hexagontk.core.ClasspathHandler.createURLStreamHandler"]},{"name":"fun extensionsOf(mediaType: MediaType): List<String>","description":"com.hexagontk.core.media.extensionsOf","location":"core/com.hexagontk.core.media/extensions-of.html","searchKeys":["extensionsOf","fun extensionsOf(mediaType: MediaType): List<String>","com.hexagontk.core.media.extensionsOf"]},{"name":"fun fg(r: Int = 0, g: Int = 0, b: Int = 0): String","description":"com.hexagontk.core.text.AnsiColor.fg","location":"core/com.hexagontk.core.text/-ansi-color/fg.html","searchKeys":["fg","fun fg(r: Int = 0, g: Int = 0, b: Int = 0): String","com.hexagontk.core.text.AnsiColor.fg"]},{"name":"fun freePort(): Int","description":"com.hexagontk.core.freePort","location":"core/com.hexagontk.core/free-port.html","searchKeys":["freePort","fun freePort(): Int","com.hexagontk.core.freePort"]},{"name":"fun hash(algorithm: String, data: ByteArray): ByteArray","description":"com.hexagontk.core.security.hash","location":"core/com.hexagontk.core.security/hash.html","searchKeys":["hash","fun hash(algorithm: String, data: ByteArray): ByteArray","com.hexagontk.core.security.hash"]},{"name":"fun hash(algorithm: String, data: String): ByteArray","description":"com.hexagontk.core.security.hash","location":"core/com.hexagontk.core.security/hash.html","searchKeys":["hash","fun hash(algorithm: String, data: String): ByteArray","com.hexagontk.core.security.hash"]},{"name":"fun hmac(algorithm: String, data: ByteArray, key: ByteArray): ByteArray","description":"com.hexagontk.core.security.hmac","location":"core/com.hexagontk.core.security/hmac.html","searchKeys":["hmac","fun hmac(algorithm: String, data: ByteArray, key: ByteArray): ByteArray","com.hexagontk.core.security.hmac"]},{"name":"fun inetAddress(vararg bytes: Byte): InetAddress","description":"com.hexagontk.core.inetAddress","location":"core/com.hexagontk.core/inet-address.html","searchKeys":["inetAddress","fun inetAddress(vararg bytes: Byte): InetAddress","com.hexagontk.core.inetAddress"]},{"name":"fun isPortOpened(port: Int): Boolean","description":"com.hexagontk.core.isPortOpened","location":"core/com.hexagontk.core/is-port-opened.html","searchKeys":["isPortOpened","fun isPortOpened(port: Int): Boolean","com.hexagontk.core.isPortOpened"]},{"name":"fun loadKeyStore(resource: URL, password: String): KeyStore","description":"com.hexagontk.core.security.loadKeyStore","location":"core/com.hexagontk.core.security/load-key-store.html","searchKeys":["loadKeyStore","fun loadKeyStore(resource: URL, password: String): KeyStore","com.hexagontk.core.security.loadKeyStore"]},{"name":"fun loadSystemSettings(settings: Map<String, String>)","description":"com.hexagontk.core.Platform.loadSystemSettings","location":"core/com.hexagontk.core/-platform/load-system-settings.html","searchKeys":["loadSystemSettings","fun loadSystemSettings(settings: Map<String, String>)","com.hexagontk.core.Platform.loadSystemSettings"]},{"name":"fun loggerOf(name: String): System.Logger","description":"com.hexagontk.core.loggerOf","location":"core/com.hexagontk.core/logger-of.html","searchKeys":["loggerOf","fun loggerOf(name: String): System.Logger","com.hexagontk.core.loggerOf"]},{"name":"fun loggerOf(type: KClass<*>): System.Logger","description":"com.hexagontk.core.loggerOf","location":"core/com.hexagontk.core/logger-of.html","searchKeys":["loggerOf","fun loggerOf(type: KClass<*>): System.Logger","com.hexagontk.core.loggerOf"]},{"name":"fun matches(text: String): Boolean","description":"com.hexagontk.core.text.Glob.matches","location":"core/com.hexagontk.core.text/-glob/matches.html","searchKeys":["matches","fun matches(text: String): Boolean","com.hexagontk.core.text.Glob.matches"]},{"name":"fun mediaTypeOf(extension: String): MediaType","description":"com.hexagontk.core.media.mediaTypeOf","location":"core/com.hexagontk.core.media/media-type-of.html","searchKeys":["mediaTypeOf","fun mediaTypeOf(extension: String): MediaType","com.hexagontk.core.media.mediaTypeOf"]},{"name":"fun mediaTypeOf(file: File): MediaType","description":"com.hexagontk.core.media.mediaTypeOf","location":"core/com.hexagontk.core.media/media-type-of.html","searchKeys":["mediaTypeOf","fun mediaTypeOf(file: File): MediaType","com.hexagontk.core.media.mediaTypeOf"]},{"name":"fun mediaTypeOf(path: Path): MediaType","description":"com.hexagontk.core.media.mediaTypeOf","location":"core/com.hexagontk.core.media/media-type-of.html","searchKeys":["mediaTypeOf","fun mediaTypeOf(path: Path): MediaType","com.hexagontk.core.media.mediaTypeOf"]},{"name":"fun mediaTypeOf(uri: URI): MediaType","description":"com.hexagontk.core.media.mediaTypeOf","location":"core/com.hexagontk.core.media/media-type-of.html","searchKeys":["mediaTypeOf","fun mediaTypeOf(uri: URI): MediaType","com.hexagontk.core.media.mediaTypeOf"]},{"name":"fun mediaTypeOf(url: URL): MediaType","description":"com.hexagontk.core.media.mediaTypeOf","location":"core/com.hexagontk.core.media/media-type-of.html","searchKeys":["mediaTypeOf","fun mediaTypeOf(url: URL): MediaType","com.hexagontk.core.media.mediaTypeOf"]},{"name":"fun mediaTypeOfOrNull(extension: String): MediaType?","description":"com.hexagontk.core.media.mediaTypeOfOrNull","location":"core/com.hexagontk.core.media/media-type-of-or-null.html","searchKeys":["mediaTypeOfOrNull","fun mediaTypeOfOrNull(extension: String): MediaType?","com.hexagontk.core.media.mediaTypeOfOrNull"]},{"name":"fun mediaTypeOfOrNull(file: File): MediaType?","description":"com.hexagontk.core.media.mediaTypeOfOrNull","location":"core/com.hexagontk.core.media/media-type-of-or-null.html","searchKeys":["mediaTypeOfOrNull","fun mediaTypeOfOrNull(file: File): MediaType?","com.hexagontk.core.media.mediaTypeOfOrNull"]},{"name":"fun mediaTypeOfOrNull(path: Path): MediaType?","description":"com.hexagontk.core.media.mediaTypeOfOrNull","location":"core/com.hexagontk.core.media/media-type-of-or-null.html","searchKeys":["mediaTypeOfOrNull","fun mediaTypeOfOrNull(path: Path): MediaType?","com.hexagontk.core.media.mediaTypeOfOrNull"]},{"name":"fun mediaTypeOfOrNull(uri: URI): MediaType?","description":"com.hexagontk.core.media.mediaTypeOfOrNull","location":"core/com.hexagontk.core.media/media-type-of-or-null.html","searchKeys":["mediaTypeOfOrNull","fun mediaTypeOfOrNull(uri: URI): MediaType?","com.hexagontk.core.media.mediaTypeOfOrNull"]},{"name":"fun mediaTypeOfOrNull(url: URL): MediaType?","description":"com.hexagontk.core.media.mediaTypeOfOrNull","location":"core/com.hexagontk.core.media/media-type-of-or-null.html","searchKeys":["mediaTypeOfOrNull","fun mediaTypeOfOrNull(url: URL): MediaType?","com.hexagontk.core.media.mediaTypeOfOrNull"]},{"name":"fun merge(mapA: Map<*, *>, mapB: Map<*, *>): Map<*, *>","description":"com.hexagontk.core.merge","location":"core/com.hexagontk.core/merge.html","searchKeys":["merge","fun merge(mapA: Map<*, *>, mapB: Map<*, *>): Map<*, *>","com.hexagontk.core.merge"]},{"name":"fun merge(maps: Collection<Map<*, *>>): Map<*, *>","description":"com.hexagontk.core.merge","location":"core/com.hexagontk.core/merge.html","searchKeys":["merge","fun merge(maps: Collection<Map<*, *>>): Map<*, *>","com.hexagontk.core.merge"]},{"name":"fun parseDuration(text: String): Duration","description":"com.hexagontk.core.parseDuration","location":"core/com.hexagontk.core/parse-duration.html","searchKeys":["parseDuration","fun parseDuration(text: String): Duration","com.hexagontk.core.parseDuration"]},{"name":"fun parseLocalDate(text: String): LocalDate","description":"com.hexagontk.core.parseLocalDate","location":"core/com.hexagontk.core/parse-local-date.html","searchKeys":["parseLocalDate","fun parseLocalDate(text: String): LocalDate","com.hexagontk.core.parseLocalDate"]},{"name":"fun parseMediaType(fullType: String): MediaType","description":"com.hexagontk.core.media.parseMediaType","location":"core/com.hexagontk.core.media/parse-media-type.html","searchKeys":["parseMediaType","fun parseMediaType(fullType: String): MediaType","com.hexagontk.core.media.parseMediaType"]},{"name":"fun parsePeriod(text: String): Period","description":"com.hexagontk.core.parsePeriod","location":"core/com.hexagontk.core/parse-period.html","searchKeys":["parsePeriod","fun parsePeriod(text: String): Period","com.hexagontk.core.parsePeriod"]},{"name":"fun pathExtension(path: String): String","description":"com.hexagontk.core.media.pathExtension","location":"core/com.hexagontk.core.media/path-extension.html","searchKeys":["pathExtension","fun pathExtension(path: String): String","com.hexagontk.core.media.pathExtension"]},{"name":"fun registerHandler()","description":"com.hexagontk.core.ClasspathHandler.registerHandler","location":"core/com.hexagontk.core/-classpath-handler/register-handler.html","searchKeys":["registerHandler","fun registerHandler()","com.hexagontk.core.ClasspathHandler.registerHandler"]},{"name":"fun sign(algorithm: String, data: String, key: ByteArray): ByteArray","description":"com.hexagontk.core.security.sign","location":"core/com.hexagontk.core.security/sign.html","searchKeys":["sign","fun sign(algorithm: String, data: String, key: ByteArray): ByteArray","com.hexagontk.core.security.sign"]},{"name":"fun systemFlag(name: String): Boolean","description":"com.hexagontk.core.Platform.systemFlag","location":"core/com.hexagontk.core/-platform/system-flag.html","searchKeys":["systemFlag","fun systemFlag(name: String): Boolean","com.hexagontk.core.Platform.systemFlag"]},{"name":"fun totalMemory(): String","description":"com.hexagontk.core.Platform.totalMemory","location":"core/com.hexagontk.core/-platform/total-memory.html","searchKeys":["totalMemory","fun totalMemory(): String","com.hexagontk.core.Platform.totalMemory"]},{"name":"fun uptime(): Long","description":"com.hexagontk.core.Platform.uptime","location":"core/com.hexagontk.core/-platform/uptime.html","searchKeys":["uptime","fun uptime(): Long","com.hexagontk.core.Platform.uptime"]},{"name":"fun urlOf(url: String): URL","description":"com.hexagontk.core.urlOf","location":"core/com.hexagontk.core/url-of.html","searchKeys":["urlOf","fun urlOf(url: String): URL","com.hexagontk.core.urlOf"]},{"name":"fun usedMemory(): String","description":"com.hexagontk.core.Platform.usedMemory","location":"core/com.hexagontk.core/-platform/used-memory.html","searchKeys":["usedMemory","fun usedMemory(): String","com.hexagontk.core.Platform.usedMemory"]},{"name":"fun utf8(vararg bytes: Int): String","description":"com.hexagontk.core.text.utf8","location":"core/com.hexagontk.core.text/utf8.html","searchKeys":["utf8","fun utf8(vararg bytes: Int): String","com.hexagontk.core.text.utf8"]},{"name":"fun valueOf(value: String): MediaTypeGroup","description":"com.hexagontk.core.media.MediaTypeGroup.valueOf","location":"core/com.hexagontk.core.media/-media-type-group/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): MediaTypeGroup","com.hexagontk.core.media.MediaTypeGroup.valueOf"]},{"name":"fun valueOf(value: String): OsKind","description":"com.hexagontk.core.OsKind.valueOf","location":"core/com.hexagontk.core/-os-kind/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OsKind","com.hexagontk.core.OsKind.valueOf"]},{"name":"fun values(): Array<MediaTypeGroup>","description":"com.hexagontk.core.media.MediaTypeGroup.values","location":"core/com.hexagontk.core.media/-media-type-group/values.html","searchKeys":["values","fun values(): Array<MediaTypeGroup>","com.hexagontk.core.media.MediaTypeGroup.values"]},{"name":"fun values(): Array<OsKind>","description":"com.hexagontk.core.OsKind.values","location":"core/com.hexagontk.core/-os-kind/values.html","searchKeys":["values","fun values(): Array<OsKind>","com.hexagontk.core.OsKind.values"]},{"name":"inline fun <T : Any> Map<*, *>.getOrDefault(key: KProperty1<*, *>, default: T): T","description":"com.hexagontk.core.getOrDefault","location":"core/com.hexagontk.core/get-or-default.html","searchKeys":["getOrDefault","inline fun <T : Any> Map<*, *>.getOrDefault(key: KProperty1<*, *>, default: T): T","com.hexagontk.core.getOrDefault"]},{"name":"inline fun <T : Any> Map<*, *>.getPath(vararg keys: Any): T?","description":"com.hexagontk.core.getPath","location":"core/com.hexagontk.core/get-path.html","searchKeys":["getPath","inline fun <T : Any> Map<*, *>.getPath(vararg keys: Any): T?","com.hexagontk.core.getPath"]},{"name":"inline fun <T : Any> Map<*, *>.requireKey(key: KProperty1<*, *>): T","description":"com.hexagontk.core.requireKey","location":"core/com.hexagontk.core/require-key.html","searchKeys":["requireKey","inline fun <T : Any> Map<*, *>.requireKey(key: KProperty1<*, *>): T","com.hexagontk.core.requireKey"]},{"name":"inline fun <T : Any> Map<*, *>.requirePath(vararg name: Any): T","description":"com.hexagontk.core.requirePath","location":"core/com.hexagontk.core/require-path.html","searchKeys":["requirePath","inline fun <T : Any> Map<*, *>.requirePath(vararg name: Any): T","com.hexagontk.core.requirePath"]},{"name":"inline fun <T : Any> systemSetting(name: String): T","description":"com.hexagontk.core.Platform.systemSetting","location":"core/com.hexagontk.core/-platform/system-setting.html","searchKeys":["systemSetting","inline fun <T : Any> systemSetting(name: String): T","com.hexagontk.core.Platform.systemSetting"]},{"name":"inline fun <T : Any> systemSetting(name: String, defaultValue: T): T","description":"com.hexagontk.core.Platform.systemSetting","location":"core/com.hexagontk.core/-platform/system-setting.html","searchKeys":["systemSetting","inline fun <T : Any> systemSetting(name: String, defaultValue: T): T","com.hexagontk.core.Platform.systemSetting"]},{"name":"inline fun <T : Any> systemSettingOrNull(name: String): T?","description":"com.hexagontk.core.Platform.systemSettingOrNull","location":"core/com.hexagontk.core/-platform/system-setting-or-null.html","searchKeys":["systemSettingOrNull","inline fun <T : Any> systemSettingOrNull(name: String): T?","com.hexagontk.core.Platform.systemSettingOrNull"]},{"name":"inline operator fun <T : Any> Map<*, *>.get(key: KProperty1<*, *>): T?","description":"com.hexagontk.core.get","location":"core/com.hexagontk.core/get.html","searchKeys":["get","inline operator fun <T : Any> Map<*, *>.get(key: KProperty1<*, *>): T?","com.hexagontk.core.get"]},{"name":"object Ansi","description":"com.hexagontk.core.text.Ansi","location":"core/com.hexagontk.core.text/-ansi/index.html","searchKeys":["Ansi","object Ansi","com.hexagontk.core.text.Ansi"]},{"name":"object AnsiColor","description":"com.hexagontk.core.text.AnsiColor","location":"core/com.hexagontk.core.text/-ansi-color/index.html","searchKeys":["AnsiColor","object AnsiColor","com.hexagontk.core.text.AnsiColor"]},{"name":"object AnsiEffect","description":"com.hexagontk.core.text.AnsiEffect","location":"core/com.hexagontk.core.text/-ansi-effect/index.html","searchKeys":["AnsiEffect","object AnsiEffect","com.hexagontk.core.text.AnsiEffect"]},{"name":"object ClasspathHandler : URLStreamHandler","description":"com.hexagontk.core.ClasspathHandler","location":"core/com.hexagontk.core/-classpath-handler/index.html","searchKeys":["ClasspathHandler","object ClasspathHandler : URLStreamHandler","com.hexagontk.core.ClasspathHandler"]},{"name":"object Companion","description":"com.hexagontk.core.media.MediaType.Companion","location":"core/com.hexagontk.core.media/-media-type/-companion/index.html","searchKeys":["Companion","object Companion","com.hexagontk.core.media.MediaType.Companion"]},{"name":"object Platform","description":"com.hexagontk.core.Platform","location":"core/com.hexagontk.core/-platform/index.html","searchKeys":["Platform","object Platform","com.hexagontk.core.Platform"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.hexagontk.core.media.MediaType.equals","location":"core/com.hexagontk.core.media/-media-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.hexagontk.core.media.MediaType.equals"]},{"name":"open override fun hashCode(): Int","description":"com.hexagontk.core.media.MediaType.hashCode","location":"core/com.hexagontk.core.media/-media-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.hexagontk.core.media.MediaType.hashCode"]},{"name":"operator fun get(extension: String): MediaType","description":"com.hexagontk.core.media.MediaType.Companion.get","location":"core/com.hexagontk.core.media/-media-type/-companion/get.html","searchKeys":["get","operator fun get(extension: String): MediaType","com.hexagontk.core.media.MediaType.Companion.get"]},{"name":"operator fun invoke(fullType: String): MediaType","description":"com.hexagontk.core.media.MediaType.Companion.invoke","location":"core/com.hexagontk.core.media/-media-type/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(fullType: String): MediaType","com.hexagontk.core.media.MediaType.Companion.invoke"]},{"name":"val ALL_INTERFACES: InetAddress","description":"com.hexagontk.core.ALL_INTERFACES","location":"core/com.hexagontk.core/-a-l-l_-i-n-t-e-r-f-a-c-e-s.html","searchKeys":["ALL_INTERFACES","val ALL_INTERFACES: InetAddress","com.hexagontk.core.ALL_INTERFACES"]},{"name":"val ANY_MEDIA: MediaType","description":"com.hexagontk.core.media.ANY_MEDIA","location":"core/com.hexagontk.core.media/-a-n-y_-m-e-d-i-a.html","searchKeys":["ANY_MEDIA","val ANY_MEDIA: MediaType","com.hexagontk.core.media.ANY_MEDIA"]},{"name":"val APPLICATION_7Z: MediaType","description":"com.hexagontk.core.media.APPLICATION_7Z","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_7-z.html","searchKeys":["APPLICATION_7Z","val APPLICATION_7Z: MediaType","com.hexagontk.core.media.APPLICATION_7Z"]},{"name":"val APPLICATION_AVRO: MediaType","description":"com.hexagontk.core.media.APPLICATION_AVRO","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-a-v-r-o.html","searchKeys":["APPLICATION_AVRO","val APPLICATION_AVRO: MediaType","com.hexagontk.core.media.APPLICATION_AVRO"]},{"name":"val APPLICATION_BZIP2: MediaType","description":"com.hexagontk.core.media.APPLICATION_BZIP2","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-b-z-i-p2.html","searchKeys":["APPLICATION_BZIP2","val APPLICATION_BZIP2: MediaType","com.hexagontk.core.media.APPLICATION_BZIP2"]},{"name":"val APPLICATION_BZIP: MediaType","description":"com.hexagontk.core.media.APPLICATION_BZIP","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-b-z-i-p.html","searchKeys":["APPLICATION_BZIP","val APPLICATION_BZIP: MediaType","com.hexagontk.core.media.APPLICATION_BZIP"]},{"name":"val APPLICATION_CBOR: MediaType","description":"com.hexagontk.core.media.APPLICATION_CBOR","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-c-b-o-r.html","searchKeys":["APPLICATION_CBOR","val APPLICATION_CBOR: MediaType","com.hexagontk.core.media.APPLICATION_CBOR"]},{"name":"val APPLICATION_COMPRESS: MediaType","description":"com.hexagontk.core.media.APPLICATION_COMPRESS","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-c-o-m-p-r-e-s-s.html","searchKeys":["APPLICATION_COMPRESS","val APPLICATION_COMPRESS: MediaType","com.hexagontk.core.media.APPLICATION_COMPRESS"]},{"name":"val APPLICATION_FORM_URLENCODED: MediaType","description":"com.hexagontk.core.media.APPLICATION_FORM_URLENCODED","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-f-o-r-m_-u-r-l-e-n-c-o-d-e-d.html","searchKeys":["APPLICATION_FORM_URLENCODED","val APPLICATION_FORM_URLENCODED: MediaType","com.hexagontk.core.media.APPLICATION_FORM_URLENCODED"]},{"name":"val APPLICATION_GZIP: MediaType","description":"com.hexagontk.core.media.APPLICATION_GZIP","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-g-z-i-p.html","searchKeys":["APPLICATION_GZIP","val APPLICATION_GZIP: MediaType","com.hexagontk.core.media.APPLICATION_GZIP"]},{"name":"val APPLICATION_JAVA_ARCHIVE: MediaType","description":"com.hexagontk.core.media.APPLICATION_JAVA_ARCHIVE","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-j-a-v-a_-a-r-c-h-i-v-e.html","searchKeys":["APPLICATION_JAVA_ARCHIVE","val APPLICATION_JAVA_ARCHIVE: MediaType","com.hexagontk.core.media.APPLICATION_JAVA_ARCHIVE"]},{"name":"val APPLICATION_JSON: MediaType","description":"com.hexagontk.core.media.APPLICATION_JSON","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n.html","searchKeys":["APPLICATION_JSON","val APPLICATION_JSON: MediaType","com.hexagontk.core.media.APPLICATION_JSON"]},{"name":"val APPLICATION_OCTET_STREAM: MediaType","description":"com.hexagontk.core.media.APPLICATION_OCTET_STREAM","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-o-c-t-e-t_-s-t-r-e-a-m.html","searchKeys":["APPLICATION_OCTET_STREAM","val APPLICATION_OCTET_STREAM: MediaType","com.hexagontk.core.media.APPLICATION_OCTET_STREAM"]},{"name":"val APPLICATION_OGG: MediaType","description":"com.hexagontk.core.media.APPLICATION_OGG","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-o-g-g.html","searchKeys":["APPLICATION_OGG","val APPLICATION_OGG: MediaType","com.hexagontk.core.media.APPLICATION_OGG"]},{"name":"val APPLICATION_PDF: MediaType","description":"com.hexagontk.core.media.APPLICATION_PDF","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-p-d-f.html","searchKeys":["APPLICATION_PDF","val APPLICATION_PDF: MediaType","com.hexagontk.core.media.APPLICATION_PDF"]},{"name":"val APPLICATION_PHP: MediaType","description":"com.hexagontk.core.media.APPLICATION_PHP","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-p-h-p.html","searchKeys":["APPLICATION_PHP","val APPLICATION_PHP: MediaType","com.hexagontk.core.media.APPLICATION_PHP"]},{"name":"val APPLICATION_RAR: MediaType","description":"com.hexagontk.core.media.APPLICATION_RAR","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-r-a-r.html","searchKeys":["APPLICATION_RAR","val APPLICATION_RAR: MediaType","com.hexagontk.core.media.APPLICATION_RAR"]},{"name":"val APPLICATION_RTF: MediaType","description":"com.hexagontk.core.media.APPLICATION_RTF","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-r-t-f.html","searchKeys":["APPLICATION_RTF","val APPLICATION_RTF: MediaType","com.hexagontk.core.media.APPLICATION_RTF"]},{"name":"val APPLICATION_TOML: MediaType","description":"com.hexagontk.core.media.APPLICATION_TOML","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-t-o-m-l.html","searchKeys":["APPLICATION_TOML","val APPLICATION_TOML: MediaType","com.hexagontk.core.media.APPLICATION_TOML"]},{"name":"val APPLICATION_WEB_MANIFEST: MediaType","description":"com.hexagontk.core.media.APPLICATION_WEB_MANIFEST","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-w-e-b_-m-a-n-i-f-e-s-t.html","searchKeys":["APPLICATION_WEB_MANIFEST","val APPLICATION_WEB_MANIFEST: MediaType","com.hexagontk.core.media.APPLICATION_WEB_MANIFEST"]},{"name":"val APPLICATION_XHTML: MediaType","description":"com.hexagontk.core.media.APPLICATION_XHTML","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-x-h-t-m-l.html","searchKeys":["APPLICATION_XHTML","val APPLICATION_XHTML: MediaType","com.hexagontk.core.media.APPLICATION_XHTML"]},{"name":"val APPLICATION_XML: MediaType","description":"com.hexagontk.core.media.APPLICATION_XML","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-x-m-l.html","searchKeys":["APPLICATION_XML","val APPLICATION_XML: MediaType","com.hexagontk.core.media.APPLICATION_XML"]},{"name":"val APPLICATION_X_TAR: MediaType","description":"com.hexagontk.core.media.APPLICATION_X_TAR","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-x_-t-a-r.html","searchKeys":["APPLICATION_X_TAR","val APPLICATION_X_TAR: MediaType","com.hexagontk.core.media.APPLICATION_X_TAR"]},{"name":"val APPLICATION_YAML: MediaType","description":"com.hexagontk.core.media.APPLICATION_YAML","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-y-a-m-l.html","searchKeys":["APPLICATION_YAML","val APPLICATION_YAML: MediaType","com.hexagontk.core.media.APPLICATION_YAML"]},{"name":"val APPLICATION_ZIP: MediaType","description":"com.hexagontk.core.media.APPLICATION_ZIP","location":"core/com.hexagontk.core.media/-a-p-p-l-i-c-a-t-i-o-n_-z-i-p.html","searchKeys":["APPLICATION_ZIP","val APPLICATION_ZIP: MediaType","com.hexagontk.core.media.APPLICATION_ZIP"]},{"name":"val DEFAULT_MEDIA_TYPE: MediaType","description":"com.hexagontk.core.media.DEFAULT_MEDIA_TYPE","location":"core/com.hexagontk.core.media/-d-e-f-a-u-l-t_-m-e-d-i-a_-t-y-p-e.html","searchKeys":["DEFAULT_MEDIA_TYPE","val DEFAULT_MEDIA_TYPE: MediaType","com.hexagontk.core.media.DEFAULT_MEDIA_TYPE"]},{"name":"val GMT_ZONE: ZoneId","description":"com.hexagontk.core.GMT_ZONE","location":"core/com.hexagontk.core/-g-m-t_-z-o-n-e.html","searchKeys":["GMT_ZONE","val GMT_ZONE: ZoneId","com.hexagontk.core.GMT_ZONE"]},{"name":"val LOOPBACK_INTERFACE: InetAddress","description":"com.hexagontk.core.LOOPBACK_INTERFACE","location":"core/com.hexagontk.core/-l-o-o-p-b-a-c-k_-i-n-t-e-r-f-a-c-e.html","searchKeys":["LOOPBACK_INTERFACE","val LOOPBACK_INTERFACE: InetAddress","com.hexagontk.core.LOOPBACK_INTERFACE"]},{"name":"val MEDIA_TYPE_FORMAT: Regex","description":"com.hexagontk.core.media.MEDIA_TYPE_FORMAT","location":"core/com.hexagontk.core.media/-m-e-d-i-a_-t-y-p-e_-f-o-r-m-a-t.html","searchKeys":["MEDIA_TYPE_FORMAT","val MEDIA_TYPE_FORMAT: Regex","com.hexagontk.core.media.MEDIA_TYPE_FORMAT"]},{"name":"val MULTIPART_ALTERNATIVE: MediaType","description":"com.hexagontk.core.media.MULTIPART_ALTERNATIVE","location":"core/com.hexagontk.core.media/-m-u-l-t-i-p-a-r-t_-a-l-t-e-r-n-a-t-i-v-e.html","searchKeys":["MULTIPART_ALTERNATIVE","val MULTIPART_ALTERNATIVE: MediaType","com.hexagontk.core.media.MULTIPART_ALTERNATIVE"]},{"name":"val MULTIPART_DIGEST: MediaType","description":"com.hexagontk.core.media.MULTIPART_DIGEST","location":"core/com.hexagontk.core.media/-m-u-l-t-i-p-a-r-t_-d-i-g-e-s-t.html","searchKeys":["MULTIPART_DIGEST","val MULTIPART_DIGEST: MediaType","com.hexagontk.core.media.MULTIPART_DIGEST"]},{"name":"val MULTIPART_FORM_DATA: MediaType","description":"com.hexagontk.core.media.MULTIPART_FORM_DATA","location":"core/com.hexagontk.core.media/-m-u-l-t-i-p-a-r-t_-f-o-r-m_-d-a-t-a.html","searchKeys":["MULTIPART_FORM_DATA","val MULTIPART_FORM_DATA: MediaType","com.hexagontk.core.media.MULTIPART_FORM_DATA"]},{"name":"val MULTIPART_MIXED: MediaType","description":"com.hexagontk.core.media.MULTIPART_MIXED","location":"core/com.hexagontk.core.media/-m-u-l-t-i-p-a-r-t_-m-i-x-e-d.html","searchKeys":["MULTIPART_MIXED","val MULTIPART_MIXED: MediaType","com.hexagontk.core.media.MULTIPART_MIXED"]},{"name":"val MULTIPART_PARALLEL: MediaType","description":"com.hexagontk.core.media.MULTIPART_PARALLEL","location":"core/com.hexagontk.core.media/-m-u-l-t-i-p-a-r-t_-p-a-r-a-l-l-e-l.html","searchKeys":["MULTIPART_PARALLEL","val MULTIPART_PARALLEL: MediaType","com.hexagontk.core.media.MULTIPART_PARALLEL"]},{"name":"val REGEX: Regex","description":"com.hexagontk.core.text.Ansi.REGEX","location":"core/com.hexagontk.core.text/-ansi/-r-e-g-e-x.html","searchKeys":["REGEX","val REGEX: Regex","com.hexagontk.core.text.Ansi.REGEX"]},{"name":"val TEXT_CALENDAR: MediaType","description":"com.hexagontk.core.media.TEXT_CALENDAR","location":"core/com.hexagontk.core.media/-t-e-x-t_-c-a-l-e-n-d-a-r.html","searchKeys":["TEXT_CALENDAR","val TEXT_CALENDAR: MediaType","com.hexagontk.core.media.TEXT_CALENDAR"]},{"name":"val TEXT_CSS: MediaType","description":"com.hexagontk.core.media.TEXT_CSS","location":"core/com.hexagontk.core.media/-t-e-x-t_-c-s-s.html","searchKeys":["TEXT_CSS","val TEXT_CSS: MediaType","com.hexagontk.core.media.TEXT_CSS"]},{"name":"val TEXT_CSV: MediaType","description":"com.hexagontk.core.media.TEXT_CSV","location":"core/com.hexagontk.core.media/-t-e-x-t_-c-s-v.html","searchKeys":["TEXT_CSV","val TEXT_CSV: MediaType","com.hexagontk.core.media.TEXT_CSV"]},{"name":"val TEXT_EVENT_STREAM: MediaType","description":"com.hexagontk.core.media.TEXT_EVENT_STREAM","location":"core/com.hexagontk.core.media/-t-e-x-t_-e-v-e-n-t_-s-t-r-e-a-m.html","searchKeys":["TEXT_EVENT_STREAM","val TEXT_EVENT_STREAM: MediaType","com.hexagontk.core.media.TEXT_EVENT_STREAM"]},{"name":"val TEXT_HTML: MediaType","description":"com.hexagontk.core.media.TEXT_HTML","location":"core/com.hexagontk.core.media/-t-e-x-t_-h-t-m-l.html","searchKeys":["TEXT_HTML","val TEXT_HTML: MediaType","com.hexagontk.core.media.TEXT_HTML"]},{"name":"val TEXT_JAVASCRIPT: MediaType","description":"com.hexagontk.core.media.TEXT_JAVASCRIPT","location":"core/com.hexagontk.core.media/-t-e-x-t_-j-a-v-a-s-c-r-i-p-t.html","searchKeys":["TEXT_JAVASCRIPT","val TEXT_JAVASCRIPT: MediaType","com.hexagontk.core.media.TEXT_JAVASCRIPT"]},{"name":"val TEXT_MARKDOWN: MediaType","description":"com.hexagontk.core.media.TEXT_MARKDOWN","location":"core/com.hexagontk.core.media/-t-e-x-t_-m-a-r-k-d-o-w-n.html","searchKeys":["TEXT_MARKDOWN","val TEXT_MARKDOWN: MediaType","com.hexagontk.core.media.TEXT_MARKDOWN"]},{"name":"val TEXT_PLAIN: MediaType","description":"com.hexagontk.core.media.TEXT_PLAIN","location":"core/com.hexagontk.core.media/-t-e-x-t_-p-l-a-i-n.html","searchKeys":["TEXT_PLAIN","val TEXT_PLAIN: MediaType","com.hexagontk.core.media.TEXT_PLAIN"]},{"name":"val TEXT_RICHTEXT: MediaType","description":"com.hexagontk.core.media.TEXT_RICHTEXT","location":"core/com.hexagontk.core.media/-t-e-x-t_-r-i-c-h-t-e-x-t.html","searchKeys":["TEXT_RICHTEXT","val TEXT_RICHTEXT: MediaType","com.hexagontk.core.media.TEXT_RICHTEXT"]},{"name":"val TEXT_TAB_SEPARATED_VALUES: MediaType","description":"com.hexagontk.core.media.TEXT_TAB_SEPARATED_VALUES","location":"core/com.hexagontk.core.media/-t-e-x-t_-t-a-b_-s-e-p-a-r-a-t-e-d_-v-a-l-u-e-s.html","searchKeys":["TEXT_TAB_SEPARATED_VALUES","val TEXT_TAB_SEPARATED_VALUES: MediaType","com.hexagontk.core.media.TEXT_TAB_SEPARATED_VALUES"]},{"name":"val TEXT_X_JAVA_PROPERTIES: MediaType","description":"com.hexagontk.core.media.TEXT_X_JAVA_PROPERTIES","location":"core/com.hexagontk.core.media/-t-e-x-t_-x_-j-a-v-a_-p-r-o-p-e-r-t-i-e-s.html","searchKeys":["TEXT_X_JAVA_PROPERTIES","val TEXT_X_JAVA_PROPERTIES: MediaType","com.hexagontk.core.media.TEXT_X_JAVA_PROPERTIES"]},{"name":"val assertEnabled: Boolean","description":"com.hexagontk.core.assertEnabled","location":"core/com.hexagontk.core/assert-enabled.html","searchKeys":["assertEnabled","val assertEnabled: Boolean","com.hexagontk.core.assertEnabled"]},{"name":"val causes: List<Throwable>","description":"com.hexagontk.core.MultipleException.causes","location":"core/com.hexagontk.core/-multiple-exception/causes.html","searchKeys":["causes","val causes: List<Throwable>","com.hexagontk.core.MultipleException.causes"]},{"name":"val charset: Charset","description":"com.hexagontk.core.Platform.charset","location":"core/com.hexagontk.core/-platform/charset.html","searchKeys":["charset","val charset: Charset","com.hexagontk.core.Platform.charset"]},{"name":"val code: Int","description":"com.hexagontk.core.CodedException.code","location":"core/com.hexagontk.core/-coded-exception/code.html","searchKeys":["code","val code: Int","com.hexagontk.core.CodedException.code"]},{"name":"val console: Console","description":"com.hexagontk.core.Platform.console","location":"core/com.hexagontk.core/-platform/console.html","searchKeys":["console","val console: Console","com.hexagontk.core.Platform.console"]},{"name":"val cpuCount: Int","description":"com.hexagontk.core.Platform.cpuCount","location":"core/com.hexagontk.core/-platform/cpu-count.html","searchKeys":["cpuCount","val cpuCount: Int","com.hexagontk.core.Platform.cpuCount"]},{"name":"val entries: EnumEntries<MediaTypeGroup>","description":"com.hexagontk.core.media.MediaTypeGroup.entries","location":"core/com.hexagontk.core.media/-media-type-group/entries.html","searchKeys":["entries","val entries: EnumEntries<MediaTypeGroup>","com.hexagontk.core.media.MediaTypeGroup.entries"]},{"name":"val entries: EnumEntries<OsKind>","description":"com.hexagontk.core.OsKind.entries","location":"core/com.hexagontk.core/-os-kind/entries.html","searchKeys":["entries","val entries: EnumEntries<OsKind>","com.hexagontk.core.OsKind.entries"]},{"name":"val eol: String","description":"com.hexagontk.core.text.eol","location":"core/com.hexagontk.core.text/eol.html","searchKeys":["eol","val eol: String","com.hexagontk.core.text.eol"]},{"name":"val fail: Nothing","description":"com.hexagontk.core.fail","location":"core/com.hexagontk.core/fail.html","searchKeys":["fail","val fail: Nothing","com.hexagontk.core.fail"]},{"name":"val fullType: String","description":"com.hexagontk.core.media.MediaType.fullType","location":"core/com.hexagontk.core.media/-media-type/full-type.html","searchKeys":["fullType","val fullType: String","com.hexagontk.core.media.MediaType.fullType"]},{"name":"val fullTypes: Map<String, MediaType>","description":"com.hexagontk.core.media.MediaType.Companion.fullTypes","location":"core/com.hexagontk.core.media/-media-type/-companion/full-types.html","searchKeys":["fullTypes","val fullTypes: Map<String, MediaType>","com.hexagontk.core.media.MediaType.Companion.fullTypes"]},{"name":"val group: MediaTypeGroup","description":"com.hexagontk.core.media.MediaType.group","location":"core/com.hexagontk.core.media/-media-type/group.html","searchKeys":["group","val group: MediaTypeGroup","com.hexagontk.core.media.MediaType.group"]},{"name":"val hostName: String","description":"com.hexagontk.core.Platform.hostName","location":"core/com.hexagontk.core/-platform/host-name.html","searchKeys":["hostName","val hostName: String","com.hexagontk.core.Platform.hostName"]},{"name":"val ip: String","description":"com.hexagontk.core.Platform.ip","location":"core/com.hexagontk.core/-platform/ip.html","searchKeys":["ip","val ip: String","com.hexagontk.core.Platform.ip"]},{"name":"val isConsole: Boolean","description":"com.hexagontk.core.Platform.isConsole","location":"core/com.hexagontk.core/-platform/is-console.html","searchKeys":["isConsole","val isConsole: Boolean","com.hexagontk.core.Platform.isConsole"]},{"name":"val locale: Locale","description":"com.hexagontk.core.Platform.locale","location":"core/com.hexagontk.core/-platform/locale.html","searchKeys":["locale","val locale: Locale","com.hexagontk.core.Platform.locale"]},{"name":"val localeCode: String","description":"com.hexagontk.core.Platform.localeCode","location":"core/com.hexagontk.core/-platform/locale-code.html","searchKeys":["localeCode","val localeCode: String","com.hexagontk.core.Platform.localeCode"]},{"name":"val logger: System.Logger","description":"com.hexagontk.core.logger","location":"core/com.hexagontk.core/logger.html","searchKeys":["logger","val logger: System.Logger","com.hexagontk.core.logger"]},{"name":"val name: String","description":"com.hexagontk.core.Platform.name","location":"core/com.hexagontk.core/-platform/name.html","searchKeys":["name","val name: String","com.hexagontk.core.Platform.name"]},{"name":"val os: String","description":"com.hexagontk.core.Platform.os","location":"core/com.hexagontk.core/-platform/os.html","searchKeys":["os","val os: String","com.hexagontk.core.Platform.os"]},{"name":"val osKind: OsKind","description":"com.hexagontk.core.Platform.osKind","location":"core/com.hexagontk.core/-platform/os-kind.html","searchKeys":["osKind","val osKind: OsKind","com.hexagontk.core.Platform.osKind"]},{"name":"val parsedClasses: Set<KClass<*>>","description":"com.hexagontk.core.text.parsedClasses","location":"core/com.hexagontk.core.text/parsed-classes.html","searchKeys":["parsedClasses","val parsedClasses: Set<KClass<*>>","com.hexagontk.core.text.parsedClasses"]},{"name":"val pattern: String","description":"com.hexagontk.core.text.Glob.pattern","location":"core/com.hexagontk.core.text/-glob/pattern.html","searchKeys":["pattern","val pattern: String","com.hexagontk.core.text.Glob.pattern"]},{"name":"val pid: Long","description":"com.hexagontk.core.Platform.pid","location":"core/com.hexagontk.core/-platform/pid.html","searchKeys":["pid","val pid: Long","com.hexagontk.core.Platform.pid"]},{"name":"val regex: Regex","description":"com.hexagontk.core.text.Glob.regex","location":"core/com.hexagontk.core.text/-glob/regex.html","searchKeys":["regex","val regex: Regex","com.hexagontk.core.text.Glob.regex"]},{"name":"val runtime: Runtime","description":"com.hexagontk.core.Platform.runtime","location":"core/com.hexagontk.core/-platform/runtime.html","searchKeys":["runtime","val runtime: Runtime","com.hexagontk.core.Platform.runtime"]},{"name":"val text: String","description":"com.hexagontk.core.media.MediaTypeGroup.text","location":"core/com.hexagontk.core.media/-media-type-group/text.html","searchKeys":["text","val text: String","com.hexagontk.core.media.MediaTypeGroup.text"]},{"name":"val timeZone: TimeZone","description":"com.hexagontk.core.Platform.timeZone","location":"core/com.hexagontk.core/-platform/time-zone.html","searchKeys":["timeZone","val timeZone: TimeZone","com.hexagontk.core.Platform.timeZone"]},{"name":"val type: String","description":"com.hexagontk.core.media.MediaType.type","location":"core/com.hexagontk.core.media/-media-type/type.html","searchKeys":["type","val type: String","com.hexagontk.core.media.MediaType.type"]},{"name":"val version: String","description":"com.hexagontk.core.Platform.version","location":"core/com.hexagontk.core/-platform/version.html","searchKeys":["version","val version: String","com.hexagontk.core.Platform.version"]},{"name":"val zoneId: ZoneId","description":"com.hexagontk.core.Platform.zoneId","location":"core/com.hexagontk.core/-platform/zone-id.html","searchKeys":["zoneId","val zoneId: ZoneId","com.hexagontk.core.Platform.zoneId"]},{"name":"class JettyServletHttpServer(maxThreads: Int = 200, minThreads: Int = 8, acceptors: Int = -1, selectors: Int = -1, sendDateHeader: Boolean = false, sendServerVersion: Boolean = false, sendXPoweredBy: Boolean = false, useVirtualThreads: Boolean = false) : HttpServerPort","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/index.html","searchKeys":["JettyServletHttpServer","class JettyServletHttpServer(maxThreads: Int = 200, minThreads: Int = 8, acceptors: Int = -1, selectors: Int = -1, sendDateHeader: Boolean = false, sendServerVersion: Boolean = false, sendXPoweredBy: Boolean = false, useVirtualThreads: Boolean = false) : HttpServerPort","com.hexagontk.http.server.jetty.JettyServletHttpServer"]},{"name":"constructor()","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.JettyServletHttpServer","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/-jetty-servlet-http-server.html","searchKeys":["JettyServletHttpServer","constructor()","com.hexagontk.http.server.jetty.JettyServletHttpServer.JettyServletHttpServer"]},{"name":"constructor(maxThreads: Int = 200, minThreads: Int = 8, acceptors: Int = -1, selectors: Int = -1, sendDateHeader: Boolean = false, sendServerVersion: Boolean = false, sendXPoweredBy: Boolean = false, useVirtualThreads: Boolean = false)","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.JettyServletHttpServer","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/-jetty-servlet-http-server.html","searchKeys":["JettyServletHttpServer","constructor(maxThreads: Int = 200, minThreads: Int = 8, acceptors: Int = -1, selectors: Int = -1, sendDateHeader: Boolean = false, sendServerVersion: Boolean = false, sendXPoweredBy: Boolean = false, useVirtualThreads: Boolean = false)","com.hexagontk.http.server.jetty.JettyServletHttpServer.JettyServletHttpServer"]},{"name":"open override fun options(): Map<String, *>","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.options","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/options.html","searchKeys":["options","open override fun options(): Map<String, *>","com.hexagontk.http.server.jetty.JettyServletHttpServer.options"]},{"name":"open override fun runtimePort(): Int","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.runtimePort","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/runtime-port.html","searchKeys":["runtimePort","open override fun runtimePort(): Int","com.hexagontk.http.server.jetty.JettyServletHttpServer.runtimePort"]},{"name":"open override fun shutDown()","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.shutDown","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/shut-down.html","searchKeys":["shutDown","open override fun shutDown()","com.hexagontk.http.server.jetty.JettyServletHttpServer.shutDown"]},{"name":"open override fun startUp(server: HttpServer)","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.startUp","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/start-up.html","searchKeys":["startUp","open override fun startUp(server: HttpServer)","com.hexagontk.http.server.jetty.JettyServletHttpServer.startUp"]},{"name":"open override fun started(): Boolean","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.started","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/started.html","searchKeys":["started","open override fun started(): Boolean","com.hexagontk.http.server.jetty.JettyServletHttpServer.started"]},{"name":"open override fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.supportedFeatures","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.server.jetty.JettyServletHttpServer.supportedFeatures"]},{"name":"open override fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.server.jetty.JettyServletHttpServer.supportedProtocols","location":"http/http_server_jetty/com.hexagontk.http.server.jetty/-jetty-servlet-http-server/supported-protocols.html","searchKeys":["supportedProtocols","open override fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.server.jetty.JettyServletHttpServer.supportedProtocols"]},{"name":"class JdkHttpClient(protocol: HttpProtocol = HTTP2, executor: Executor? = null) : HttpClientPort","description":"com.hexagontk.http.client.jdk.JdkHttpClient","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/index.html","searchKeys":["JdkHttpClient","class JdkHttpClient(protocol: HttpProtocol = HTTP2, executor: Executor? = null) : HttpClientPort","com.hexagontk.http.client.jdk.JdkHttpClient"]},{"name":"constructor()","description":"com.hexagontk.http.client.jdk.JdkHttpClient.JdkHttpClient","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/-jdk-http-client.html","searchKeys":["JdkHttpClient","constructor()","com.hexagontk.http.client.jdk.JdkHttpClient.JdkHttpClient"]},{"name":"constructor(protocol: HttpProtocol = HTTP2, executor: Executor? = null)","description":"com.hexagontk.http.client.jdk.JdkHttpClient.JdkHttpClient","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/-jdk-http-client.html","searchKeys":["JdkHttpClient","constructor(protocol: HttpProtocol = HTTP2, executor: Executor? = null)","com.hexagontk.http.client.jdk.JdkHttpClient.JdkHttpClient"]},{"name":"open override fun send(request: HttpRequestPort): HttpResponsePort","description":"com.hexagontk.http.client.jdk.JdkHttpClient.send","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/send.html","searchKeys":["send","open override fun send(request: HttpRequestPort): HttpResponsePort","com.hexagontk.http.client.jdk.JdkHttpClient.send"]},{"name":"open override fun shutDown()","description":"com.hexagontk.http.client.jdk.JdkHttpClient.shutDown","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/shut-down.html","searchKeys":["shutDown","open override fun shutDown()","com.hexagontk.http.client.jdk.JdkHttpClient.shutDown"]},{"name":"open override fun sse(request: HttpRequestPort): Flow.Publisher<ServerEvent>","description":"com.hexagontk.http.client.jdk.JdkHttpClient.sse","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/sse.html","searchKeys":["sse","open override fun sse(request: HttpRequestPort): Flow.Publisher<ServerEvent>","com.hexagontk.http.client.jdk.JdkHttpClient.sse"]},{"name":"open override fun startUp(client: HttpClient)","description":"com.hexagontk.http.client.jdk.JdkHttpClient.startUp","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/start-up.html","searchKeys":["startUp","open override fun startUp(client: HttpClient)","com.hexagontk.http.client.jdk.JdkHttpClient.startUp"]},{"name":"open override fun started(): Boolean","description":"com.hexagontk.http.client.jdk.JdkHttpClient.started","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/started.html","searchKeys":["started","open override fun started(): Boolean","com.hexagontk.http.client.jdk.JdkHttpClient.started"]},{"name":"open override fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.client.jdk.JdkHttpClient.supportedFeatures","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.client.jdk.JdkHttpClient.supportedFeatures"]},{"name":"open override fun supportedProtocols(): Set<HttpProtocol>","description":"com.hexagontk.http.client.jdk.JdkHttpClient.supportedProtocols","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/supported-protocols.html","searchKeys":["supportedProtocols","open override fun supportedProtocols(): Set<HttpProtocol>","com.hexagontk.http.client.jdk.JdkHttpClient.supportedProtocols"]},{"name":"open override fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","description":"com.hexagontk.http.client.jdk.JdkHttpClient.ws","location":"http/http_client_jdk/com.hexagontk.http.client.jdk/-jdk-http-client/ws.html","searchKeys":["ws","open override fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","com.hexagontk.http.client.jdk.JdkHttpClient.ws"]},{"name":"class JettyClientWsSession(val uri: URI, session: Session) : WsSession","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/index.html","searchKeys":["JettyClientWsSession","class JettyClientWsSession(val uri: URI, session: Session) : WsSession","com.hexagontk.http.client.jetty.ws.JettyClientWsSession"]},{"name":"class JettyWebSocketAdapter(uri: URI, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit)","description":"com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-web-socket-adapter/index.html","searchKeys":["JettyWebSocketAdapter","class JettyWebSocketAdapter(uri: URI, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit)","com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter"]},{"name":"class JettyWsHttpClient : JettyHttpClient","description":"com.hexagontk.http.client.jetty.ws.JettyWsHttpClient","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-ws-http-client/index.html","searchKeys":["JettyWsHttpClient","class JettyWsHttpClient : JettyHttpClient","com.hexagontk.http.client.jetty.ws.JettyWsHttpClient"]},{"name":"constructor()","description":"com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.JettyWsHttpClient","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-ws-http-client/-jetty-ws-http-client.html","searchKeys":["JettyWsHttpClient","constructor()","com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.JettyWsHttpClient"]},{"name":"constructor(uri: URI, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit)","description":"com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.JettyWebSocketAdapter","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-web-socket-adapter/-jetty-web-socket-adapter.html","searchKeys":["JettyWebSocketAdapter","constructor(uri: URI, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit)","com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.JettyWebSocketAdapter"]},{"name":"constructor(uri: URI, session: Session)","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.JettyClientWsSession","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/-jetty-client-ws-session.html","searchKeys":["JettyClientWsSession","constructor(uri: URI, session: Session)","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.JettyClientWsSession"]},{"name":"fun onWebSocketBinary(session: Session, payload: ByteBuffer, callback: Callback)","description":"com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketBinary","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-web-socket-adapter/on-web-socket-binary.html","searchKeys":["onWebSocketBinary","fun onWebSocketBinary(session: Session, payload: ByteBuffer, callback: Callback)","com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketBinary"]},{"name":"fun onWebSocketClose(session: Session, statusCode: Int, reason: String)","description":"com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketClose","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-web-socket-adapter/on-web-socket-close.html","searchKeys":["onWebSocketClose","fun onWebSocketClose(session: Session, statusCode: Int, reason: String)","com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketClose"]},{"name":"fun onWebSocketConnect(connectSession: Session)","description":"com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketConnect","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-web-socket-adapter/on-web-socket-connect.html","searchKeys":["onWebSocketConnect","fun onWebSocketConnect(connectSession: Session)","com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketConnect"]},{"name":"fun onWebSocketText(session: Session, message: String)","description":"com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketText","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-web-socket-adapter/on-web-socket-text.html","searchKeys":["onWebSocketText","fun onWebSocketText(session: Session, message: String)","com.hexagontk.http.client.jetty.ws.JettyWebSocketAdapter.onWebSocketText"]},{"name":"open override fun close(status: Int, reason: String)","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.close","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/close.html","searchKeys":["close","open override fun close(status: Int, reason: String)","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.close"]},{"name":"open override fun ping(data: ByteArray)","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.ping","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/ping.html","searchKeys":["ping","open override fun ping(data: ByteArray)","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.ping"]},{"name":"open override fun pong(data: ByteArray)","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.pong","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/pong.html","searchKeys":["pong","open override fun pong(data: ByteArray)","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.pong"]},{"name":"open override fun send(data: ByteArray)","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.send","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/send.html","searchKeys":["send","open override fun send(data: ByteArray)","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.send"]},{"name":"open override fun send(text: String)","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.send","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/send.html","searchKeys":["send","open override fun send(text: String)","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.send"]},{"name":"open override fun shutDown()","description":"com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.shutDown","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-ws-http-client/shut-down.html","searchKeys":["shutDown","open override fun shutDown()","com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.shutDown"]},{"name":"open override fun startUp(client: HttpClient)","description":"com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.startUp","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-ws-http-client/start-up.html","searchKeys":["startUp","open override fun startUp(client: HttpClient)","com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.startUp"]},{"name":"open override fun supportedFeatures(): Set<HttpFeature>","description":"com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.supportedFeatures","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-ws-http-client/supported-features.html","searchKeys":["supportedFeatures","open override fun supportedFeatures(): Set<HttpFeature>","com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.supportedFeatures"]},{"name":"open override fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","description":"com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.ws","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-ws-http-client/ws.html","searchKeys":["ws","open override fun ws(path: String, onConnect: WsSession.() -> Unit, onBinary: WsSession.(data: ByteArray) -> Unit, onText: WsSession.(text: String) -> Unit, onPing: WsSession.(data: ByteArray) -> Unit, onPong: WsSession.(data: ByteArray) -> Unit, onClose: WsSession.(status: Int, reason: String) -> Unit): WsSession","com.hexagontk.http.client.jetty.ws.JettyWsHttpClient.ws"]},{"name":"open override val attributes: Map<*, *>","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.attributes","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/attributes.html","searchKeys":["attributes","open override val attributes: Map<*, *>","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.attributes"]},{"name":"open override val exception: Exception","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.exception","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/exception.html","searchKeys":["exception","open override val exception: Exception","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.exception"]},{"name":"open override val pathParameters: Map<String, String>","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.pathParameters","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/path-parameters.html","searchKeys":["pathParameters","open override val pathParameters: Map<String, String>","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.pathParameters"]},{"name":"open override val request: HttpRequestPort","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.request","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/request.html","searchKeys":["request","open override val request: HttpRequestPort","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.request"]},{"name":"open override val uri: URI","description":"com.hexagontk.http.client.jetty.ws.JettyClientWsSession.uri","location":"http/http_client_jetty_ws/com.hexagontk.http.client.jetty.ws/-jetty-client-ws-session/uri.html","searchKeys":["uri","open override val uri: URI","com.hexagontk.http.client.jetty.ws.JettyClientWsSession.uri"]},{"name":"abstract fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.HttpHandler.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-http-handler/add-prefix.html","searchKeys":["addPrefix","abstract fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.HttpHandler.addPrefix"]},{"name":"abstract val handler: HttpHandler","description":"com.hexagontk.http.handlers.HttpController.handler","location":"http/http_handlers/com.hexagontk.http.handlers/-http-controller/handler.html","searchKeys":["handler","abstract val handler: HttpHandler","com.hexagontk.http.handlers.HttpController.handler"]},{"name":"abstract val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.HttpHandler.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-handler/handler-predicate.html","searchKeys":["handlerPredicate","abstract val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.HttpHandler.handlerPredicate"]},{"name":"class AfterHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","description":"com.hexagontk.http.handlers.AfterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/index.html","searchKeys":["AfterHandler","class AfterHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","com.hexagontk.http.handlers.AfterHandler"]},{"name":"class BeforeHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","description":"com.hexagontk.http.handlers.BeforeHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/index.html","searchKeys":["BeforeHandler","class BeforeHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","com.hexagontk.http.handlers.BeforeHandler"]},{"name":"class ExceptionHandler<E : Exception>(val exception: KClass<E>, val block: HttpExceptionCallbackType<E>) : HttpHandler, Handler<HttpCall> ","description":"com.hexagontk.http.handlers.ExceptionHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-exception-handler/index.html","searchKeys":["ExceptionHandler","class ExceptionHandler<E : Exception>(val exception: KClass<E>, val block: HttpExceptionCallbackType<E>) : HttpHandler, Handler<HttpCall> ","com.hexagontk.http.handlers.ExceptionHandler"]},{"name":"class FilterHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","description":"com.hexagontk.http.handlers.FilterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/index.html","searchKeys":["FilterHandler","class FilterHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","com.hexagontk.http.handlers.FilterHandler"]},{"name":"class HandlerBuilder(var handlers: List<HttpHandler> = emptyList())","description":"com.hexagontk.http.handlers.HandlerBuilder","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/index.html","searchKeys":["HandlerBuilder","class HandlerBuilder(var handlers: List<HttpHandler> = emptyList())","com.hexagontk.http.handlers.HandlerBuilder"]},{"name":"class HttpContext(var event: HttpCall, var predicate: (Context<HttpCall>) -> Boolean, var nextHandlers: Array<Handler<HttpCall>> = emptyArray(), var nextHandler: Int = 0, var exception: Exception? = null, var attributes: Map<*, *> = emptyMap<Any, Any>(), var handled: Boolean = false) : Context<HttpCall> ","description":"com.hexagontk.http.handlers.HttpContext","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/index.html","searchKeys":["HttpContext","class HttpContext(var event: HttpCall, var predicate: (Context<HttpCall>) -> Boolean, var nextHandlers: Array<Handler<HttpCall>> = emptyArray(), var nextHandler: Int = 0, var exception: Exception? = null, var attributes: Map<*, *> = emptyMap<Any, Any>(), var handled: Boolean = false) : Context<HttpCall> ","com.hexagontk.http.handlers.HttpContext"]},{"name":"class HttpPredicate(val methods: Set<HttpMethod> = emptySet(), val pathPattern: PathPattern = LiteralPathPattern(), val status: Int? = null) : Function1<Context<HttpCall>, Boolean> ","description":"com.hexagontk.http.handlers.HttpPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/index.html","searchKeys":["HttpPredicate","class HttpPredicate(val methods: Set<HttpMethod> = emptySet(), val pathPattern: PathPattern = LiteralPathPattern(), val status: Int? = null) : Function1<Context<HttpCall>, Boolean> ","com.hexagontk.http.handlers.HttpPredicate"]},{"name":"class OnHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","description":"com.hexagontk.http.handlers.OnHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/index.html","searchKeys":["OnHandler","class OnHandler(val handlerPredicate: HttpPredicate = HttpPredicate(), val block: HttpCallbackType) : HttpHandler, Handler<HttpCall> ","com.hexagontk.http.handlers.OnHandler"]},{"name":"class PathHandler(val handlerPredicate: HttpPredicate, val handlers: List<HttpHandler>) : HttpHandler, Handler<HttpCall> ","description":"com.hexagontk.http.handlers.PathHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/index.html","searchKeys":["PathHandler","class PathHandler(val handlerPredicate: HttpPredicate, val handlers: List<HttpHandler>) : HttpHandler, Handler<HttpCall> ","com.hexagontk.http.handlers.PathHandler"]},{"name":"constructor(context: Context<HttpCall>)","description":"com.hexagontk.http.handlers.HttpContext.HttpContext","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/-http-context.html","searchKeys":["HttpContext","constructor(context: Context<HttpCall>)","com.hexagontk.http.handlers.HttpContext.HttpContext"]},{"name":"constructor(event: HttpCall, predicate: (Context<HttpCall>) -> Boolean, nextHandlers: Array<Handler<HttpCall>> = emptyArray(), nextHandler: Int = 0, exception: Exception? = null, attributes: Map<*, *> = emptyMap<Any, Any>(), handled: Boolean = false)","description":"com.hexagontk.http.handlers.HttpContext.HttpContext","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/-http-context.html","searchKeys":["HttpContext","constructor(event: HttpCall, predicate: (Context<HttpCall>) -> Boolean, nextHandlers: Array<Handler<HttpCall>> = emptyArray(), nextHandler: Int = 0, exception: Exception? = null, attributes: Map<*, *> = emptyMap<Any, Any>(), handled: Boolean = false)","com.hexagontk.http.handlers.HttpContext.HttpContext"]},{"name":"constructor(event: HttpCall, predicate: (Context<HttpCall>) -> Boolean, nextHandlers: List<Handler<HttpCall>>, nextHandler: Int = 0, exception: Exception? = null, attributes: Map<*, *> = emptyMap<Any, Any>(), handled: Boolean = false)","description":"com.hexagontk.http.handlers.HttpContext.HttpContext","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/-http-context.html","searchKeys":["HttpContext","constructor(event: HttpCall, predicate: (Context<HttpCall>) -> Boolean, nextHandlers: List<Handler<HttpCall>>, nextHandler: Int = 0, exception: Exception? = null, attributes: Map<*, *> = emptyMap<Any, Any>(), handled: Boolean = false)","com.hexagontk.http.handlers.HttpContext.HttpContext"]},{"name":"constructor(exception: KClass<E>, block: HttpExceptionCallbackType<E>)","description":"com.hexagontk.http.handlers.ExceptionHandler.ExceptionHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-exception-handler/-exception-handler.html","searchKeys":["ExceptionHandler","constructor(exception: KClass<E>, block: HttpExceptionCallbackType<E>)","com.hexagontk.http.handlers.ExceptionHandler.ExceptionHandler"]},{"name":"constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","description":"com.hexagontk.http.handlers.AfterHandler.AfterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/-after-handler.html","searchKeys":["AfterHandler","constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","com.hexagontk.http.handlers.AfterHandler.AfterHandler"]},{"name":"constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","description":"com.hexagontk.http.handlers.BeforeHandler.BeforeHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/-before-handler.html","searchKeys":["BeforeHandler","constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","com.hexagontk.http.handlers.BeforeHandler.BeforeHandler"]},{"name":"constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","description":"com.hexagontk.http.handlers.FilterHandler.FilterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/-filter-handler.html","searchKeys":["FilterHandler","constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","com.hexagontk.http.handlers.FilterHandler.FilterHandler"]},{"name":"constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","description":"com.hexagontk.http.handlers.OnHandler.OnHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/-on-handler.html","searchKeys":["OnHandler","constructor(handlerPredicate: HttpPredicate = HttpPredicate(), block: HttpCallbackType)","com.hexagontk.http.handlers.OnHandler.OnHandler"]},{"name":"constructor(handlerPredicate: HttpPredicate, handlers: List<HttpHandler>)","description":"com.hexagontk.http.handlers.PathHandler.PathHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/-path-handler.html","searchKeys":["PathHandler","constructor(handlerPredicate: HttpPredicate, handlers: List<HttpHandler>)","com.hexagontk.http.handlers.PathHandler.PathHandler"]},{"name":"constructor(handlers: List<HttpHandler> = emptyList())","description":"com.hexagontk.http.handlers.HandlerBuilder.HandlerBuilder","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/-handler-builder.html","searchKeys":["HandlerBuilder","constructor(handlers: List<HttpHandler> = emptyList())","com.hexagontk.http.handlers.HandlerBuilder.HandlerBuilder"]},{"name":"constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","description":"com.hexagontk.http.handlers.AfterHandler.AfterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/-after-handler.html","searchKeys":["AfterHandler","constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","com.hexagontk.http.handlers.AfterHandler.AfterHandler"]},{"name":"constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","description":"com.hexagontk.http.handlers.BeforeHandler.BeforeHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/-before-handler.html","searchKeys":["BeforeHandler","constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","com.hexagontk.http.handlers.BeforeHandler.BeforeHandler"]},{"name":"constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","description":"com.hexagontk.http.handlers.FilterHandler.FilterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/-filter-handler.html","searchKeys":["FilterHandler","constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","com.hexagontk.http.handlers.FilterHandler.FilterHandler"]},{"name":"constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","description":"com.hexagontk.http.handlers.OnHandler.OnHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/-on-handler.html","searchKeys":["OnHandler","constructor(method: HttpMethod, pattern: String = \"\", block: HttpCallbackType)","com.hexagontk.http.handlers.OnHandler.OnHandler"]},{"name":"constructor(methods: Set<HttpMethod> = emptySet(), pathPattern: PathPattern = LiteralPathPattern(), status: Int? = null)","description":"com.hexagontk.http.handlers.HttpPredicate.HttpPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/-http-predicate.html","searchKeys":["HttpPredicate","constructor(methods: Set<HttpMethod> = emptySet(), pathPattern: PathPattern = LiteralPathPattern(), status: Int? = null)","com.hexagontk.http.handlers.HttpPredicate.HttpPredicate"]},{"name":"constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.AfterHandler.AfterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/-after-handler.html","searchKeys":["AfterHandler","constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","com.hexagontk.http.handlers.AfterHandler.AfterHandler"]},{"name":"constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.BeforeHandler.BeforeHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/-before-handler.html","searchKeys":["BeforeHandler","constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","com.hexagontk.http.handlers.BeforeHandler.BeforeHandler"]},{"name":"constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.FilterHandler.FilterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/-filter-handler.html","searchKeys":["FilterHandler","constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","com.hexagontk.http.handlers.FilterHandler.FilterHandler"]},{"name":"constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.OnHandler.OnHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/-on-handler.html","searchKeys":["OnHandler","constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, block: HttpCallbackType)","com.hexagontk.http.handlers.OnHandler.OnHandler"]},{"name":"constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, prefix: Boolean = false)","description":"com.hexagontk.http.handlers.HttpPredicate.HttpPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/-http-predicate.html","searchKeys":["HttpPredicate","constructor(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, prefix: Boolean = false)","com.hexagontk.http.handlers.HttpPredicate.HttpPredicate"]},{"name":"constructor(pattern: String, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.AfterHandler.AfterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/-after-handler.html","searchKeys":["AfterHandler","constructor(pattern: String, block: HttpCallbackType)","com.hexagontk.http.handlers.AfterHandler.AfterHandler"]},{"name":"constructor(pattern: String, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.BeforeHandler.BeforeHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/-before-handler.html","searchKeys":["BeforeHandler","constructor(pattern: String, block: HttpCallbackType)","com.hexagontk.http.handlers.BeforeHandler.BeforeHandler"]},{"name":"constructor(pattern: String, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.FilterHandler.FilterHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/-filter-handler.html","searchKeys":["FilterHandler","constructor(pattern: String, block: HttpCallbackType)","com.hexagontk.http.handlers.FilterHandler.FilterHandler"]},{"name":"constructor(pattern: String, block: HttpCallbackType)","description":"com.hexagontk.http.handlers.OnHandler.OnHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/-on-handler.html","searchKeys":["OnHandler","constructor(pattern: String, block: HttpCallbackType)","com.hexagontk.http.handlers.OnHandler.OnHandler"]},{"name":"constructor(pattern: String, handlers: List<HttpHandler>)","description":"com.hexagontk.http.handlers.PathHandler.PathHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/-path-handler.html","searchKeys":["PathHandler","constructor(pattern: String, handlers: List<HttpHandler>)","com.hexagontk.http.handlers.PathHandler.PathHandler"]},{"name":"constructor(pattern: String, vararg handlers: HttpHandler)","description":"com.hexagontk.http.handlers.PathHandler.PathHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/-path-handler.html","searchKeys":["PathHandler","constructor(pattern: String, vararg handlers: HttpHandler)","com.hexagontk.http.handlers.PathHandler.PathHandler"]},{"name":"constructor(request: HttpRequestPort = HttpRequest(), response: HttpResponsePort = HttpResponse(), predicate: HttpPredicate = HttpPredicate(), attributes: Map<*, *> = emptyMap<Any, Any>())","description":"com.hexagontk.http.handlers.HttpContext.HttpContext","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/-http-context.html","searchKeys":["HttpContext","constructor(request: HttpRequestPort = HttpRequest(), response: HttpResponsePort = HttpResponse(), predicate: HttpPredicate = HttpPredicate(), attributes: Map<*, *> = emptyMap<Any, Any>())","com.hexagontk.http.handlers.HttpContext.HttpContext"]},{"name":"constructor(vararg handlers: HttpHandler)","description":"com.hexagontk.http.handlers.PathHandler.PathHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/-path-handler.html","searchKeys":["PathHandler","constructor(vararg handlers: HttpHandler)","com.hexagontk.http.handlers.PathHandler.PathHandler"]},{"name":"fun <T : Exception> exception(exception: KClass<T>, callback: HttpExceptionCallbackType<T>)","description":"com.hexagontk.http.handlers.HandlerBuilder.exception","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/exception.html","searchKeys":["exception","fun <T : Exception> exception(exception: KClass<T>, callback: HttpExceptionCallbackType<T>)","com.hexagontk.http.handlers.HandlerBuilder.exception"]},{"name":"fun Delete(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Delete","location":"http/http_handlers/com.hexagontk.http.handlers/-delete.html","searchKeys":["Delete","fun Delete(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Delete"]},{"name":"fun Get(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Get","location":"http/http_handlers/com.hexagontk.http.handlers/-get.html","searchKeys":["Get","fun Get(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Get"]},{"name":"fun Head(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Head","location":"http/http_handlers/com.hexagontk.http.handlers/-head.html","searchKeys":["Head","fun Head(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Head"]},{"name":"fun HttpCallbackType.process(method: HttpMethod = GET, protocol: HttpProtocol = HTTP, host: String = \"localhost\", port: Int = 80, path: String = \"\", queryParameters: Parameters = Parameters(), headers: Headers = Headers(), body: Any = \"\", parts: List<HttpPart> = emptyList(), formParameters: Parameters = Parameters(), cookies: List<Cookie> = emptyList(), contentType: ContentType? = null, certificateChain: List<X509Certificate> = emptyList(), accept: List<ContentType> = emptyList(), contentLength: Long = -1L, attributes: Map<*, *> = emptyMap<Any, Any>(), authorization: Authorization? = null): HttpContext","description":"com.hexagontk.http.handlers.process","location":"http/http_handlers/com.hexagontk.http.handlers/process.html","searchKeys":["process","fun HttpCallbackType.process(method: HttpMethod = GET, protocol: HttpProtocol = HTTP, host: String = \"localhost\", port: Int = 80, path: String = \"\", queryParameters: Parameters = Parameters(), headers: Headers = Headers(), body: Any = \"\", parts: List<HttpPart> = emptyList(), formParameters: Parameters = Parameters(), cookies: List<Cookie> = emptyList(), contentType: ContentType? = null, certificateChain: List<X509Certificate> = emptyList(), accept: List<ContentType> = emptyList(), contentLength: Long = -1L, attributes: Map<*, *> = emptyMap<Any, Any>(), authorization: Authorization? = null): HttpContext","com.hexagontk.http.handlers.process"]},{"name":"fun HttpCallbackType.process(request: HttpRequest, attributes: Map<*, *> = emptyMap<Any, Any>()): HttpContext","description":"com.hexagontk.http.handlers.process","location":"http/http_handlers/com.hexagontk.http.handlers/process.html","searchKeys":["process","fun HttpCallbackType.process(request: HttpRequest, attributes: Map<*, *> = emptyMap<Any, Any>()): HttpContext","com.hexagontk.http.handlers.process"]},{"name":"fun Options(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Options","location":"http/http_handlers/com.hexagontk.http.handlers/-options.html","searchKeys":["Options","fun Options(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Options"]},{"name":"fun Patch(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Patch","location":"http/http_handlers/com.hexagontk.http.handlers/-patch.html","searchKeys":["Patch","fun Patch(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Patch"]},{"name":"fun Post(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Post","location":"http/http_handlers/com.hexagontk.http.handlers/-post.html","searchKeys":["Post","fun Post(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Post"]},{"name":"fun Put(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Put","location":"http/http_handlers/com.hexagontk.http.handlers/-put.html","searchKeys":["Put","fun Put(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Put"]},{"name":"fun Trace(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Trace","location":"http/http_handlers/com.hexagontk.http.handlers/-trace.html","searchKeys":["Trace","fun Trace(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Trace"]},{"name":"fun Ws(pattern: String = \"\", callback: HttpCallbackType): OnHandler","description":"com.hexagontk.http.handlers.Ws","location":"http/http_handlers/com.hexagontk.http.handlers/-ws.html","searchKeys":["Ws","fun Ws(pattern: String = \"\", callback: HttpCallbackType): OnHandler","com.hexagontk.http.handlers.Ws"]},{"name":"fun accepted(onConnect: WsSession.() -> Unit = {}, onBinary: WsSession.(data: ByteArray) -> Unit = {}, onText: WsSession.(text: String) -> Unit = {}, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> }): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.accepted","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/accepted.html","searchKeys":["accepted","fun accepted(onConnect: WsSession.() -> Unit = {}, onBinary: WsSession.(data: ByteArray) -> Unit = {}, onText: WsSession.(text: String) -> Unit = {}, onPing: WsSession.(data: ByteArray) -> Unit = {}, onPong: WsSession.(data: ByteArray) -> Unit = {}, onClose: WsSession.(status: Int, reason: String) -> Unit = { _, _ -> }): HttpContext","com.hexagontk.http.handlers.HttpContext.accepted"]},{"name":"fun addPrefix(prefix: String): HttpPredicate","description":"com.hexagontk.http.handlers.HttpPredicate.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/add-prefix.html","searchKeys":["addPrefix","fun addPrefix(prefix: String): HttpPredicate","com.hexagontk.http.handlers.HttpPredicate.addPrefix"]},{"name":"fun after(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.after","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/after.html","searchKeys":["after","fun after(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.after"]},{"name":"fun after(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.after","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/after.html","searchKeys":["after","fun after(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.after"]},{"name":"fun after(pattern: String, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.after","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/after.html","searchKeys":["after","fun after(pattern: String, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.after"]},{"name":"fun after(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.after","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/after.html","searchKeys":["after","fun after(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.after"]},{"name":"fun badRequest(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.badRequest","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/bad-request.html","searchKeys":["badRequest","fun badRequest(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.badRequest"]},{"name":"fun before(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.before","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/before.html","searchKeys":["before","fun before(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.before"]},{"name":"fun before(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.before","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/before.html","searchKeys":["before","fun before(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.before"]},{"name":"fun before(pattern: String, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.before","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/before.html","searchKeys":["before","fun before(pattern: String, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.before"]},{"name":"fun before(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.before","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/before.html","searchKeys":["before","fun before(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.before"]},{"name":"fun bodyToBytes(body: Any): ByteArray","description":"com.hexagontk.http.handlers.bodyToBytes","location":"http/http_handlers/com.hexagontk.http.handlers/body-to-bytes.html","searchKeys":["bodyToBytes","fun bodyToBytes(body: Any): ByteArray","com.hexagontk.http.handlers.bodyToBytes"]},{"name":"fun clearMethods(): HttpPredicate","description":"com.hexagontk.http.handlers.HttpPredicate.clearMethods","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/clear-methods.html","searchKeys":["clearMethods","fun clearMethods(): HttpPredicate","com.hexagontk.http.handlers.HttpPredicate.clearMethods"]},{"name":"fun created(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.created","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/created.html","searchKeys":["created","fun created(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.created"]},{"name":"fun delete(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.delete","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/delete.html","searchKeys":["delete","fun delete(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.delete"]},{"name":"fun describe(): String","description":"com.hexagontk.http.handlers.HttpPredicate.describe","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/describe.html","searchKeys":["describe","fun describe(): String","com.hexagontk.http.handlers.HttpPredicate.describe"]},{"name":"fun describe(): String","description":"com.hexagontk.http.handlers.PathHandler.describe","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/describe.html","searchKeys":["describe","fun describe(): String","com.hexagontk.http.handlers.PathHandler.describe"]},{"name":"fun filter(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.filter","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/filter.html","searchKeys":["filter","fun filter(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.filter"]},{"name":"fun filter(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.filter","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/filter.html","searchKeys":["filter","fun filter(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.filter"]},{"name":"fun filter(pattern: String, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.filter","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/filter.html","searchKeys":["filter","fun filter(pattern: String, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.filter"]},{"name":"fun filter(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.filter","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/filter.html","searchKeys":["filter","fun filter(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.filter"]},{"name":"fun forbidden(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.forbidden","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/forbidden.html","searchKeys":["forbidden","fun forbidden(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.forbidden"]},{"name":"fun found(location: String, headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.found","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/found.html","searchKeys":["found","fun found(location: String, headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.found"]},{"name":"fun get(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.get","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/get.html","searchKeys":["get","fun get(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.get"]},{"name":"fun handler(contextPath: String = \"\"): HttpHandler","description":"com.hexagontk.http.handlers.HandlerBuilder.handler","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/handler.html","searchKeys":["handler","fun handler(contextPath: String = \"\"): HttpHandler","com.hexagontk.http.handlers.HandlerBuilder.handler"]},{"name":"fun head(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.head","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/head.html","searchKeys":["head","fun head(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.head"]},{"name":"fun internalServerError(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.internalServerError","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/internal-server-error.html","searchKeys":["internalServerError","fun internalServerError(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.internalServerError"]},{"name":"fun internalServerError(exception: Exception, headers: Headers = response.headers, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.internalServerError","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/internal-server-error.html","searchKeys":["internalServerError","fun internalServerError(exception: Exception, headers: Headers = response.headers, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.internalServerError"]},{"name":"fun notFound(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.notFound","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/not-found.html","searchKeys":["notFound","fun notFound(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.notFound"]},{"name":"fun ok(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.ok","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/ok.html","searchKeys":["ok","fun ok(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.ok"]},{"name":"fun on(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.on","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/on.html","searchKeys":["on","fun on(method: HttpMethod, pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.on"]},{"name":"fun on(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.on","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/on.html","searchKeys":["on","fun on(methods: Set<HttpMethod> = emptySet(), pattern: String = \"\", status: Int? = null, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.on"]},{"name":"fun on(pattern: String, callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.on","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/on.html","searchKeys":["on","fun on(pattern: String, callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.on"]},{"name":"fun on(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.on","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/on.html","searchKeys":["on","fun on(predicate: HttpPredicate = HttpPredicate(), callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.on"]},{"name":"fun options(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.options","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/options.html","searchKeys":["options","fun options(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.options"]},{"name":"fun patch(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.patch","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/patch.html","searchKeys":["patch","fun patch(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.patch"]},{"name":"fun path(contextPath: String = \"\", handlers: List<HttpHandler>): PathHandler","description":"com.hexagontk.http.handlers.path","location":"http/http_handlers/com.hexagontk.http.handlers/path.html","searchKeys":["path","fun path(contextPath: String = \"\", handlers: List<HttpHandler>): PathHandler","com.hexagontk.http.handlers.path"]},{"name":"fun path(pattern: String = \"\", block: HandlerBuilder.() -> Unit): PathHandler","description":"com.hexagontk.http.handlers.path","location":"http/http_handlers/com.hexagontk.http.handlers/path.html","searchKeys":["path","fun path(pattern: String = \"\", block: HandlerBuilder.() -> Unit): PathHandler","com.hexagontk.http.handlers.path"]},{"name":"fun path(pattern: String, block: HandlerBuilder.() -> Unit)","description":"com.hexagontk.http.handlers.HandlerBuilder.path","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/path.html","searchKeys":["path","fun path(pattern: String, block: HandlerBuilder.() -> Unit)","com.hexagontk.http.handlers.HandlerBuilder.path"]},{"name":"fun path(pattern: String, pathHandler: PathHandler)","description":"com.hexagontk.http.handlers.HandlerBuilder.path","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/path.html","searchKeys":["path","fun path(pattern: String, pathHandler: PathHandler)","com.hexagontk.http.handlers.HandlerBuilder.path"]},{"name":"fun path(pattern: String, pathHandlers: List<HttpHandler>)","description":"com.hexagontk.http.handlers.HandlerBuilder.path","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/path.html","searchKeys":["path","fun path(pattern: String, pathHandlers: List<HttpHandler>)","com.hexagontk.http.handlers.HandlerBuilder.path"]},{"name":"fun path(pattern: String, vararg pathHandlers: HttpHandler)","description":"com.hexagontk.http.handlers.HandlerBuilder.path","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/path.html","searchKeys":["path","fun path(pattern: String, vararg pathHandlers: HttpHandler)","com.hexagontk.http.handlers.HandlerBuilder.path"]},{"name":"fun post(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.post","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/post.html","searchKeys":["post","fun post(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.post"]},{"name":"fun put(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.put","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/put.html","searchKeys":["put","fun put(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.put"]},{"name":"fun receive(body: Any = request.body, headers: Headers = request.headers, contentType: ContentType? = request.contentType, accept: List<ContentType> = request.accept, cookies: List<Cookie> = request.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.receive","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/receive.html","searchKeys":["receive","fun receive(body: Any = request.body, headers: Headers = request.headers, contentType: ContentType? = request.contentType, accept: List<ContentType> = request.accept, cookies: List<Cookie> = request.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.receive"]},{"name":"fun redirect(status: Int, location: String, headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.redirect","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/redirect.html","searchKeys":["redirect","fun redirect(status: Int, location: String, headers: Headers = response.headers, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.redirect"]},{"name":"fun send(request: HttpRequestPort, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.send","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/send.html","searchKeys":["send","fun send(request: HttpRequestPort, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.send"]},{"name":"fun send(response: HttpResponsePort, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.send","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/send.html","searchKeys":["send","fun send(response: HttpResponsePort, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.send"]},{"name":"fun send(status: Int = response.status, body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.send","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/send.html","searchKeys":["send","fun send(status: Int = response.status, body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.send"]},{"name":"fun serverError(status: Int, exception: Exception, headers: Headers = response.headers, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.serverError","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/server-error.html","searchKeys":["serverError","fun serverError(status: Int, exception: Exception, headers: Headers = response.headers, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.serverError"]},{"name":"fun sse(body: Flow.Publisher<ServerEvent>): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.sse","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/sse.html","searchKeys":["sse","fun sse(body: Flow.Publisher<ServerEvent>): HttpContext","com.hexagontk.http.handlers.HttpContext.sse"]},{"name":"fun trace(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.trace","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/trace.html","searchKeys":["trace","fun trace(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.trace"]},{"name":"fun unauthorized(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.unauthorized","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/unauthorized.html","searchKeys":["unauthorized","fun unauthorized(body: Any = response.body, headers: Headers = response.headers, contentType: ContentType? = response.contentType, cookies: List<Cookie> = response.cookies, attributes: Map<*, *> = this.attributes): HttpContext","com.hexagontk.http.handlers.HttpContext.unauthorized"]},{"name":"fun use(handler: HttpHandler)","description":"com.hexagontk.http.handlers.HandlerBuilder.use","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/use.html","searchKeys":["use","fun use(handler: HttpHandler)","com.hexagontk.http.handlers.HandlerBuilder.use"]},{"name":"fun ws(pattern: String = \"\", callback: HttpCallbackType)","description":"com.hexagontk.http.handlers.HandlerBuilder.ws","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/ws.html","searchKeys":["ws","fun ws(pattern: String = \"\", callback: HttpCallbackType)","com.hexagontk.http.handlers.HandlerBuilder.ws"]},{"name":"inline fun <T : Exception> exception(noinline callback: HttpExceptionCallbackType<T>)","description":"com.hexagontk.http.handlers.HandlerBuilder.exception","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/exception.html","searchKeys":["exception","inline fun <T : Exception> exception(noinline callback: HttpExceptionCallbackType<T>)","com.hexagontk.http.handlers.HandlerBuilder.exception"]},{"name":"interface HttpCallback : Function1<HttpContext, HttpContext> ","description":"com.hexagontk.http.handlers.HttpCallback","location":"http/http_handlers/com.hexagontk.http.handlers/-http-callback/index.html","searchKeys":["HttpCallback","interface HttpCallback : Function1<HttpContext, HttpContext> ","com.hexagontk.http.handlers.HttpCallback"]},{"name":"interface HttpController : HttpHandler","description":"com.hexagontk.http.handlers.HttpController","location":"http/http_handlers/com.hexagontk.http.handlers/-http-controller/index.html","searchKeys":["HttpController","interface HttpController : HttpHandler","com.hexagontk.http.handlers.HttpController"]},{"name":"interface HttpExceptionCallback<T> : Function2<HttpContext, T, HttpContext> ","description":"com.hexagontk.http.handlers.HttpExceptionCallback","location":"http/http_handlers/com.hexagontk.http.handlers/-http-exception-callback/index.html","searchKeys":["HttpExceptionCallback","interface HttpExceptionCallback<T> : Function2<HttpContext, T, HttpContext> ","com.hexagontk.http.handlers.HttpExceptionCallback"]},{"name":"interface HttpHandler : Handler<HttpCall> ","description":"com.hexagontk.http.handlers.HttpHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-http-handler/index.html","searchKeys":["HttpHandler","interface HttpHandler : Handler<HttpCall> ","com.hexagontk.http.handlers.HttpHandler"]},{"name":"open fun byMethod(): Map<HttpMethod, HttpHandler>","description":"com.hexagontk.http.handlers.HttpHandler.byMethod","location":"http/http_handlers/com.hexagontk.http.handlers/-http-handler/by-method.html","searchKeys":["byMethod","open fun byMethod(): Map<HttpMethod, HttpHandler>","com.hexagontk.http.handlers.HttpHandler.byMethod"]},{"name":"open fun filter(method: HttpMethod): HttpHandler","description":"com.hexagontk.http.handlers.HttpHandler.filter","location":"http/http_handlers/com.hexagontk.http.handlers/-http-handler/filter.html","searchKeys":["filter","open fun filter(method: HttpMethod): HttpHandler","com.hexagontk.http.handlers.HttpHandler.filter"]},{"name":"open fun process(request: HttpRequestPort): HttpContext","description":"com.hexagontk.http.handlers.HttpHandler.process","location":"http/http_handlers/com.hexagontk.http.handlers/-http-handler/process.html","searchKeys":["process","open fun process(request: HttpRequestPort): HttpContext","com.hexagontk.http.handlers.HttpHandler.process"]},{"name":"open fun processHttp(context: HttpContext): HttpContext","description":"com.hexagontk.http.handlers.HttpHandler.processHttp","location":"http/http_handlers/com.hexagontk.http.handlers/-http-handler/process-http.html","searchKeys":["processHttp","open fun processHttp(context: HttpContext): HttpContext","com.hexagontk.http.handlers.HttpHandler.processHttp"]},{"name":"open operator override fun invoke(context: Context<HttpCall>): Boolean","description":"com.hexagontk.http.handlers.HttpPredicate.invoke","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/invoke.html","searchKeys":["invoke","open operator override fun invoke(context: Context<HttpCall>): Boolean","com.hexagontk.http.handlers.HttpPredicate.invoke"]},{"name":"open override fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.AfterHandler.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.AfterHandler.addPrefix"]},{"name":"open override fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.BeforeHandler.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.BeforeHandler.addPrefix"]},{"name":"open override fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.ExceptionHandler.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-exception-handler/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.ExceptionHandler.addPrefix"]},{"name":"open override fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.FilterHandler.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.FilterHandler.addPrefix"]},{"name":"open override fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.HttpController.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-http-controller/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.HttpController.addPrefix"]},{"name":"open override fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.OnHandler.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.OnHandler.addPrefix"]},{"name":"open override fun addPrefix(prefix: String): HttpHandler","description":"com.hexagontk.http.handlers.PathHandler.addPrefix","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/add-prefix.html","searchKeys":["addPrefix","open override fun addPrefix(prefix: String): HttpHandler","com.hexagontk.http.handlers.PathHandler.addPrefix"]},{"name":"open override fun next(): HttpContext","description":"com.hexagontk.http.handlers.HttpContext.next","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/next.html","searchKeys":["next","open override fun next(): HttpContext","com.hexagontk.http.handlers.HttpContext.next"]},{"name":"open override fun process(context: Context<HttpCall>): Context<HttpCall>","description":"com.hexagontk.http.handlers.HttpController.process","location":"http/http_handlers/com.hexagontk.http.handlers/-http-controller/process.html","searchKeys":["process","open override fun process(context: Context<HttpCall>): Context<HttpCall>","com.hexagontk.http.handlers.HttpController.process"]},{"name":"open override fun process(request: HttpRequestPort): HttpContext","description":"com.hexagontk.http.handlers.PathHandler.process","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/process.html","searchKeys":["process","open override fun process(request: HttpRequestPort): HttpContext","com.hexagontk.http.handlers.PathHandler.process"]},{"name":"open override fun with(event: HttpCall, predicate: (Context<HttpCall>) -> Boolean, nextHandlers: Array<Handler<HttpCall>>, nextHandler: Int, exception: Exception?, attributes: Map<*, *>, handled: Boolean): Context<HttpCall>","description":"com.hexagontk.http.handlers.HttpContext.with","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/with.html","searchKeys":["with","open override fun with(event: HttpCall, predicate: (Context<HttpCall>) -> Boolean, nextHandlers: Array<Handler<HttpCall>>, nextHandler: Int, exception: Exception?, attributes: Map<*, *>, handled: Boolean): Context<HttpCall>","com.hexagontk.http.handlers.HttpContext.with"]},{"name":"open override val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.AfterHandler.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/handler-predicate.html","searchKeys":["handlerPredicate","open override val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.AfterHandler.handlerPredicate"]},{"name":"open override val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.BeforeHandler.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/handler-predicate.html","searchKeys":["handlerPredicate","open override val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.BeforeHandler.handlerPredicate"]},{"name":"open override val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.ExceptionHandler.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-exception-handler/handler-predicate.html","searchKeys":["handlerPredicate","open override val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.ExceptionHandler.handlerPredicate"]},{"name":"open override val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.FilterHandler.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/handler-predicate.html","searchKeys":["handlerPredicate","open override val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.FilterHandler.handlerPredicate"]},{"name":"open override val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.HttpController.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-controller/handler-predicate.html","searchKeys":["handlerPredicate","open override val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.HttpController.handlerPredicate"]},{"name":"open override val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.OnHandler.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/handler-predicate.html","searchKeys":["handlerPredicate","open override val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.OnHandler.handlerPredicate"]},{"name":"open override val handlerPredicate: HttpPredicate","description":"com.hexagontk.http.handlers.PathHandler.handlerPredicate","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/handler-predicate.html","searchKeys":["handlerPredicate","open override val handlerPredicate: HttpPredicate","com.hexagontk.http.handlers.PathHandler.handlerPredicate"]},{"name":"open override val predicate: (Context<HttpCall>) -> Boolean","description":"com.hexagontk.http.handlers.HttpController.predicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-controller/predicate.html","searchKeys":["predicate","open override val predicate: (Context<HttpCall>) -> Boolean","com.hexagontk.http.handlers.HttpController.predicate"]},{"name":"open override var attributes: Map<*, *>","description":"com.hexagontk.http.handlers.HttpContext.attributes","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/attributes.html","searchKeys":["attributes","open override var attributes: Map<*, *>","com.hexagontk.http.handlers.HttpContext.attributes"]},{"name":"open override var event: HttpCall","description":"com.hexagontk.http.handlers.HttpContext.event","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/event.html","searchKeys":["event","open override var event: HttpCall","com.hexagontk.http.handlers.HttpContext.event"]},{"name":"open override var exception: Exception?","description":"com.hexagontk.http.handlers.HttpContext.exception","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/exception.html","searchKeys":["exception","open override var exception: Exception?","com.hexagontk.http.handlers.HttpContext.exception"]},{"name":"open override var handled: Boolean","description":"com.hexagontk.http.handlers.HttpContext.handled","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/handled.html","searchKeys":["handled","open override var handled: Boolean","com.hexagontk.http.handlers.HttpContext.handled"]},{"name":"open override var nextHandler: Int","description":"com.hexagontk.http.handlers.HttpContext.nextHandler","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/next-handler.html","searchKeys":["nextHandler","open override var nextHandler: Int","com.hexagontk.http.handlers.HttpContext.nextHandler"]},{"name":"open override var nextHandlers: Array<Handler<HttpCall>>","description":"com.hexagontk.http.handlers.HttpContext.nextHandlers","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/next-handlers.html","searchKeys":["nextHandlers","open override var nextHandlers: Array<Handler<HttpCall>>","com.hexagontk.http.handlers.HttpContext.nextHandlers"]},{"name":"open override var predicate: (Context<HttpCall>) -> Boolean","description":"com.hexagontk.http.handlers.HttpContext.predicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/predicate.html","searchKeys":["predicate","open override var predicate: (Context<HttpCall>) -> Boolean","com.hexagontk.http.handlers.HttpContext.predicate"]},{"name":"typealias HttpCallbackType = HttpContext.() -> HttpContext","description":"com.hexagontk.http.handlers.HttpCallbackType","location":"http/http_handlers/com.hexagontk.http.handlers/-http-callback-type/index.html","searchKeys":["HttpCallbackType","typealias HttpCallbackType = HttpContext.() -> HttpContext","com.hexagontk.http.handlers.HttpCallbackType"]},{"name":"typealias HttpExceptionCallbackType<T> = HttpContext.(T) -> HttpContext","description":"com.hexagontk.http.handlers.HttpExceptionCallbackType","location":"http/http_handlers/com.hexagontk.http.handlers/-http-exception-callback-type/index.html","searchKeys":["HttpExceptionCallbackType","typealias HttpExceptionCallbackType<T> = HttpContext.(T) -> HttpContext","com.hexagontk.http.handlers.HttpExceptionCallbackType"]},{"name":"val accept: List<ContentType>","description":"com.hexagontk.http.handlers.HttpContext.accept","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/accept.html","searchKeys":["accept","val accept: List<ContentType>","com.hexagontk.http.handlers.HttpContext.accept"]},{"name":"val authorization: Authorization?","description":"com.hexagontk.http.handlers.HttpContext.authorization","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/authorization.html","searchKeys":["authorization","val authorization: Authorization?","com.hexagontk.http.handlers.HttpContext.authorization"]},{"name":"val block: HttpCallbackType","description":"com.hexagontk.http.handlers.AfterHandler.block","location":"http/http_handlers/com.hexagontk.http.handlers/-after-handler/block.html","searchKeys":["block","val block: HttpCallbackType","com.hexagontk.http.handlers.AfterHandler.block"]},{"name":"val block: HttpCallbackType","description":"com.hexagontk.http.handlers.BeforeHandler.block","location":"http/http_handlers/com.hexagontk.http.handlers/-before-handler/block.html","searchKeys":["block","val block: HttpCallbackType","com.hexagontk.http.handlers.BeforeHandler.block"]},{"name":"val block: HttpCallbackType","description":"com.hexagontk.http.handlers.FilterHandler.block","location":"http/http_handlers/com.hexagontk.http.handlers/-filter-handler/block.html","searchKeys":["block","val block: HttpCallbackType","com.hexagontk.http.handlers.FilterHandler.block"]},{"name":"val block: HttpCallbackType","description":"com.hexagontk.http.handlers.OnHandler.block","location":"http/http_handlers/com.hexagontk.http.handlers/-on-handler/block.html","searchKeys":["block","val block: HttpCallbackType","com.hexagontk.http.handlers.OnHandler.block"]},{"name":"val block: HttpExceptionCallbackType<E>","description":"com.hexagontk.http.handlers.ExceptionHandler.block","location":"http/http_handlers/com.hexagontk.http.handlers/-exception-handler/block.html","searchKeys":["block","val block: HttpExceptionCallbackType<E>","com.hexagontk.http.handlers.ExceptionHandler.block"]},{"name":"val certificate: X509Certificate?","description":"com.hexagontk.http.handlers.HttpContext.certificate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/certificate.html","searchKeys":["certificate","val certificate: X509Certificate?","com.hexagontk.http.handlers.HttpContext.certificate"]},{"name":"val certificateChain: List<X509Certificate>","description":"com.hexagontk.http.handlers.HttpContext.certificateChain","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/certificate-chain.html","searchKeys":["certificateChain","val certificateChain: List<X509Certificate>","com.hexagontk.http.handlers.HttpContext.certificateChain"]},{"name":"val exception: KClass<E>","description":"com.hexagontk.http.handlers.ExceptionHandler.exception","location":"http/http_handlers/com.hexagontk.http.handlers/-exception-handler/exception.html","searchKeys":["exception","val exception: KClass<E>","com.hexagontk.http.handlers.ExceptionHandler.exception"]},{"name":"val formParameters: Parameters","description":"com.hexagontk.http.handlers.HttpContext.formParameters","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/form-parameters.html","searchKeys":["formParameters","val formParameters: Parameters","com.hexagontk.http.handlers.HttpContext.formParameters"]},{"name":"val handlers: List<HttpHandler>","description":"com.hexagontk.http.handlers.PathHandler.handlers","location":"http/http_handlers/com.hexagontk.http.handlers/-path-handler/handlers.html","searchKeys":["handlers","val handlers: List<HttpHandler>","com.hexagontk.http.handlers.PathHandler.handlers"]},{"name":"val host: String","description":"com.hexagontk.http.handlers.HttpContext.host","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/host.html","searchKeys":["host","val host: String","com.hexagontk.http.handlers.HttpContext.host"]},{"name":"val method: HttpMethod","description":"com.hexagontk.http.handlers.HttpContext.method","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/method.html","searchKeys":["method","val method: HttpMethod","com.hexagontk.http.handlers.HttpContext.method"]},{"name":"val methods: Set<HttpMethod>","description":"com.hexagontk.http.handlers.HttpPredicate.methods","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/methods.html","searchKeys":["methods","val methods: Set<HttpMethod>","com.hexagontk.http.handlers.HttpPredicate.methods"]},{"name":"val origin: String?","description":"com.hexagontk.http.handlers.HttpContext.origin","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/origin.html","searchKeys":["origin","val origin: String?","com.hexagontk.http.handlers.HttpContext.origin"]},{"name":"val parts: List<HttpPart>","description":"com.hexagontk.http.handlers.HttpContext.parts","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/parts.html","searchKeys":["parts","val parts: List<HttpPart>","com.hexagontk.http.handlers.HttpContext.parts"]},{"name":"val partsMap: Map<String, HttpPart>","description":"com.hexagontk.http.handlers.HttpContext.partsMap","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/parts-map.html","searchKeys":["partsMap","val partsMap: Map<String, HttpPart>","com.hexagontk.http.handlers.HttpContext.partsMap"]},{"name":"val path: String","description":"com.hexagontk.http.handlers.HttpContext.path","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/path.html","searchKeys":["path","val path: String","com.hexagontk.http.handlers.HttpContext.path"]},{"name":"val pathParameters: Map<String, String>","description":"com.hexagontk.http.handlers.HttpContext.pathParameters","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/path-parameters.html","searchKeys":["pathParameters","val pathParameters: Map<String, String>","com.hexagontk.http.handlers.HttpContext.pathParameters"]},{"name":"val pathPattern: PathPattern","description":"com.hexagontk.http.handlers.HttpPredicate.pathPattern","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/path-pattern.html","searchKeys":["pathPattern","val pathPattern: PathPattern","com.hexagontk.http.handlers.HttpPredicate.pathPattern"]},{"name":"val port: Int","description":"com.hexagontk.http.handlers.HttpContext.port","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/port.html","searchKeys":["port","val port: Int","com.hexagontk.http.handlers.HttpContext.port"]},{"name":"val predicate: (Context<HttpCall>) -> Boolean","description":"com.hexagontk.http.handlers.HttpPredicate.predicate","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/predicate.html","searchKeys":["predicate","val predicate: (Context<HttpCall>) -> Boolean","com.hexagontk.http.handlers.HttpPredicate.predicate"]},{"name":"val protocol: HttpProtocol","description":"com.hexagontk.http.handlers.HttpContext.protocol","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/protocol.html","searchKeys":["protocol","val protocol: HttpProtocol","com.hexagontk.http.handlers.HttpContext.protocol"]},{"name":"val queryParameters: Parameters","description":"com.hexagontk.http.handlers.HttpContext.queryParameters","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/query-parameters.html","searchKeys":["queryParameters","val queryParameters: Parameters","com.hexagontk.http.handlers.HttpContext.queryParameters"]},{"name":"val referer: String?","description":"com.hexagontk.http.handlers.HttpContext.referer","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/referer.html","searchKeys":["referer","val referer: String?","com.hexagontk.http.handlers.HttpContext.referer"]},{"name":"val request: HttpRequestPort","description":"com.hexagontk.http.handlers.HttpContext.request","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/request.html","searchKeys":["request","val request: HttpRequestPort","com.hexagontk.http.handlers.HttpContext.request"]},{"name":"val response: HttpResponsePort","description":"com.hexagontk.http.handlers.HttpContext.response","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/response.html","searchKeys":["response","val response: HttpResponsePort","com.hexagontk.http.handlers.HttpContext.response"]},{"name":"val status: Int","description":"com.hexagontk.http.handlers.HttpContext.status","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/status.html","searchKeys":["status","val status: Int","com.hexagontk.http.handlers.HttpContext.status"]},{"name":"val status: Int? = null","description":"com.hexagontk.http.handlers.HttpPredicate.status","location":"http/http_handlers/com.hexagontk.http.handlers/-http-predicate/status.html","searchKeys":["status","val status: Int? = null","com.hexagontk.http.handlers.HttpPredicate.status"]},{"name":"val uri: URI","description":"com.hexagontk.http.handlers.HttpContext.uri","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/uri.html","searchKeys":["uri","val uri: URI","com.hexagontk.http.handlers.HttpContext.uri"]},{"name":"val userAgent: String?","description":"com.hexagontk.http.handlers.HttpContext.userAgent","location":"http/http_handlers/com.hexagontk.http.handlers/-http-context/user-agent.html","searchKeys":["userAgent","val userAgent: String?","com.hexagontk.http.handlers.HttpContext.userAgent"]},{"name":"var handlers: List<HttpHandler>","description":"com.hexagontk.http.handlers.HandlerBuilder.handlers","location":"http/http_handlers/com.hexagontk.http.handlers/-handler-builder/handlers.html","searchKeys":["handlers","var handlers: List<HttpHandler>","com.hexagontk.http.handlers.HandlerBuilder.handlers"]},{"name":"class GoogleHttpFunction(handler: HttpHandler) : HttpFunction","description":"com.hexagontk.serverless.http.google.GoogleHttpFunction","location":"serverless/serverless_http_google/com.hexagontk.serverless.http.google/-google-http-function/index.html","searchKeys":["GoogleHttpFunction","class GoogleHttpFunction(handler: HttpHandler) : HttpFunction","com.hexagontk.serverless.http.google.GoogleHttpFunction"]},{"name":"constructor(handler: HttpHandler)","description":"com.hexagontk.serverless.http.google.GoogleHttpFunction.GoogleHttpFunction","location":"serverless/serverless_http_google/com.hexagontk.serverless.http.google/-google-http-function/-google-http-function.html","searchKeys":["GoogleHttpFunction","constructor(handler: HttpHandler)","com.hexagontk.serverless.http.google.GoogleHttpFunction.GoogleHttpFunction"]},{"name":"open override fun service(request: HttpRequest, response: HttpResponse)","description":"com.hexagontk.serverless.http.google.GoogleHttpFunction.service","location":"serverless/serverless_http_google/com.hexagontk.serverless.http.google/-google-http-function/service.html","searchKeys":["service","open override fun service(request: HttpRequest, response: HttpResponse)","com.hexagontk.serverless.http.google.GoogleHttpFunction.service"]},{"name":"abstract fun process(context: Context<T>): Context<T>","description":"com.hexagontk.handlers.Handler.process","location":"handlers/com.hexagontk.handlers/-handler/process.html","searchKeys":["process","abstract fun process(context: Context<T>): Context<T>","com.hexagontk.handlers.Handler.process"]},{"name":"abstract fun with(event: T = this.event, predicate: (Context<T>) -> Boolean = this.predicate, nextHandlers: Array<Handler<T>> = this.nextHandlers, nextHandler: Int = this.nextHandler, exception: Exception? = this.exception, attributes: Map<*, *> = this.attributes, handled: Boolean = this.handled): Context<T>","description":"com.hexagontk.handlers.Context.with","location":"handlers/com.hexagontk.handlers/-context/with.html","searchKeys":["with","abstract fun with(event: T = this.event, predicate: (Context<T>) -> Boolean = this.predicate, nextHandlers: Array<Handler<T>> = this.nextHandlers, nextHandler: Int = this.nextHandler, exception: Exception? = this.exception, attributes: Map<*, *> = this.attributes, handled: Boolean = this.handled): Context<T>","com.hexagontk.handlers.Context.with"]},{"name":"abstract val predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.Handler.predicate","location":"handlers/com.hexagontk.handlers/-handler/predicate.html","searchKeys":["predicate","abstract val predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.Handler.predicate"]},{"name":"abstract var attributes: Map<*, *>","description":"com.hexagontk.handlers.Context.attributes","location":"handlers/com.hexagontk.handlers/-context/attributes.html","searchKeys":["attributes","abstract var attributes: Map<*, *>","com.hexagontk.handlers.Context.attributes"]},{"name":"abstract var event: T","description":"com.hexagontk.handlers.Context.event","location":"handlers/com.hexagontk.handlers/-context/event.html","searchKeys":["event","abstract var event: T","com.hexagontk.handlers.Context.event"]},{"name":"abstract var exception: Exception?","description":"com.hexagontk.handlers.Context.exception","location":"handlers/com.hexagontk.handlers/-context/exception.html","searchKeys":["exception","abstract var exception: Exception?","com.hexagontk.handlers.Context.exception"]},{"name":"abstract var handled: Boolean","description":"com.hexagontk.handlers.Context.handled","location":"handlers/com.hexagontk.handlers/-context/handled.html","searchKeys":["handled","abstract var handled: Boolean","com.hexagontk.handlers.Context.handled"]},{"name":"abstract var nextHandler: Int","description":"com.hexagontk.handlers.Context.nextHandler","location":"handlers/com.hexagontk.handlers/-context/next-handler.html","searchKeys":["nextHandler","abstract var nextHandler: Int","com.hexagontk.handlers.Context.nextHandler"]},{"name":"abstract var nextHandlers: Array<Handler<T>>","description":"com.hexagontk.handlers.Context.nextHandlers","location":"handlers/com.hexagontk.handlers/-context/next-handlers.html","searchKeys":["nextHandlers","abstract var nextHandlers: Array<Handler<T>>","com.hexagontk.handlers.Context.nextHandlers"]},{"name":"abstract var predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.Context.predicate","location":"handlers/com.hexagontk.handlers/-context/predicate.html","searchKeys":["predicate","abstract var predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.Context.predicate"]},{"name":"class AfterHandler<T : Any>(afterPredicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","description":"com.hexagontk.handlers.AfterHandler","location":"handlers/com.hexagontk.handlers/-after-handler/index.html","searchKeys":["AfterHandler","class AfterHandler<T : Any>(afterPredicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","com.hexagontk.handlers.AfterHandler"]},{"name":"class BeforeHandler<T : Any>(val predicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","description":"com.hexagontk.handlers.BeforeHandler","location":"handlers/com.hexagontk.handlers/-before-handler/index.html","searchKeys":["BeforeHandler","class BeforeHandler<T : Any>(val predicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","com.hexagontk.handlers.BeforeHandler"]},{"name":"class ChainHandler<T : Any>(val handlers: Array<Handler<T>>, val predicate: (Context<T>) -> Boolean = { true }) : Handler<T> ","description":"com.hexagontk.handlers.ChainHandler","location":"handlers/com.hexagontk.handlers/-chain-handler/index.html","searchKeys":["ChainHandler","class ChainHandler<T : Any>(val handlers: Array<Handler<T>>, val predicate: (Context<T>) -> Boolean = { true }) : Handler<T> ","com.hexagontk.handlers.ChainHandler"]},{"name":"class ExceptionHandler<T : Any, E : Exception>(val exception: KClass<E>, val exceptionCallback: (Context<T>, E) -> Context<T>) : Handler<T> ","description":"com.hexagontk.handlers.ExceptionHandler","location":"handlers/com.hexagontk.handlers/-exception-handler/index.html","searchKeys":["ExceptionHandler","class ExceptionHandler<T : Any, E : Exception>(val exception: KClass<E>, val exceptionCallback: (Context<T>, E) -> Context<T>) : Handler<T> ","com.hexagontk.handlers.ExceptionHandler"]},{"name":"class FilterHandler<T : Any>(val predicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","description":"com.hexagontk.handlers.FilterHandler","location":"handlers/com.hexagontk.handlers/-filter-handler/index.html","searchKeys":["FilterHandler","class FilterHandler<T : Any>(val predicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","com.hexagontk.handlers.FilterHandler"]},{"name":"class OnHandler<T : Any>(val predicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","description":"com.hexagontk.handlers.OnHandler","location":"handlers/com.hexagontk.handlers/-on-handler/index.html","searchKeys":["OnHandler","class OnHandler<T : Any>(val predicate: (Context<T>) -> Boolean = { true }, val callback: (Context<T>) -> Context<T>) : Handler<T> ","com.hexagontk.handlers.OnHandler"]},{"name":"constructor(afterPredicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","description":"com.hexagontk.handlers.AfterHandler.AfterHandler","location":"handlers/com.hexagontk.handlers/-after-handler/-after-handler.html","searchKeys":["AfterHandler","constructor(afterPredicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","com.hexagontk.handlers.AfterHandler.AfterHandler"]},{"name":"constructor(exception: KClass<E>, exceptionCallback: (Context<T>, E) -> Context<T>)","description":"com.hexagontk.handlers.ExceptionHandler.ExceptionHandler","location":"handlers/com.hexagontk.handlers/-exception-handler/-exception-handler.html","searchKeys":["ExceptionHandler","constructor(exception: KClass<E>, exceptionCallback: (Context<T>, E) -> Context<T>)","com.hexagontk.handlers.ExceptionHandler.ExceptionHandler"]},{"name":"constructor(filter: (Context<T>) -> Boolean, vararg handlers: Handler<T>)","description":"com.hexagontk.handlers.ChainHandler.ChainHandler","location":"handlers/com.hexagontk.handlers/-chain-handler/-chain-handler.html","searchKeys":["ChainHandler","constructor(filter: (Context<T>) -> Boolean, vararg handlers: Handler<T>)","com.hexagontk.handlers.ChainHandler.ChainHandler"]},{"name":"constructor(handlers: Array<Handler<T>>, predicate: (Context<T>) -> Boolean = { true })","description":"com.hexagontk.handlers.ChainHandler.ChainHandler","location":"handlers/com.hexagontk.handlers/-chain-handler/-chain-handler.html","searchKeys":["ChainHandler","constructor(handlers: Array<Handler<T>>, predicate: (Context<T>) -> Boolean = { true })","com.hexagontk.handlers.ChainHandler.ChainHandler"]},{"name":"constructor(handlers: List<Handler<T>>, filter: (Context<T>) -> Boolean = { true })","description":"com.hexagontk.handlers.ChainHandler.ChainHandler","location":"handlers/com.hexagontk.handlers/-chain-handler/-chain-handler.html","searchKeys":["ChainHandler","constructor(handlers: List<Handler<T>>, filter: (Context<T>) -> Boolean = { true })","com.hexagontk.handlers.ChainHandler.ChainHandler"]},{"name":"constructor(predicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","description":"com.hexagontk.handlers.BeforeHandler.BeforeHandler","location":"handlers/com.hexagontk.handlers/-before-handler/-before-handler.html","searchKeys":["BeforeHandler","constructor(predicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","com.hexagontk.handlers.BeforeHandler.BeforeHandler"]},{"name":"constructor(predicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","description":"com.hexagontk.handlers.FilterHandler.FilterHandler","location":"handlers/com.hexagontk.handlers/-filter-handler/-filter-handler.html","searchKeys":["FilterHandler","constructor(predicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","com.hexagontk.handlers.FilterHandler.FilterHandler"]},{"name":"constructor(predicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","description":"com.hexagontk.handlers.OnHandler.OnHandler","location":"handlers/com.hexagontk.handlers/-on-handler/-on-handler.html","searchKeys":["OnHandler","constructor(predicate: (Context<T>) -> Boolean = { true }, callback: (Context<T>) -> Context<T>)","com.hexagontk.handlers.OnHandler.OnHandler"]},{"name":"constructor(vararg handlers: Handler<T>)","description":"com.hexagontk.handlers.ChainHandler.ChainHandler","location":"handlers/com.hexagontk.handlers/-chain-handler/-chain-handler.html","searchKeys":["ChainHandler","constructor(vararg handlers: Handler<T>)","com.hexagontk.handlers.ChainHandler.ChainHandler"]},{"name":"interface Context<T : Any>","description":"com.hexagontk.handlers.Context","location":"handlers/com.hexagontk.handlers/-context/index.html","searchKeys":["Context","interface Context<T : Any>","com.hexagontk.handlers.Context"]},{"name":"interface Handler<T : Any>","description":"com.hexagontk.handlers.Handler","location":"handlers/com.hexagontk.handlers/-handler/index.html","searchKeys":["Handler","interface Handler<T : Any>","com.hexagontk.handlers.Handler"]},{"name":"open fun next(): Context<T>","description":"com.hexagontk.handlers.Context.next","location":"handlers/com.hexagontk.handlers/-context/next.html","searchKeys":["next","open fun next(): Context<T>","com.hexagontk.handlers.Context.next"]},{"name":"open override fun process(context: Context<T>): Context<T>","description":"com.hexagontk.handlers.AfterHandler.process","location":"handlers/com.hexagontk.handlers/-after-handler/process.html","searchKeys":["process","open override fun process(context: Context<T>): Context<T>","com.hexagontk.handlers.AfterHandler.process"]},{"name":"open override fun process(context: Context<T>): Context<T>","description":"com.hexagontk.handlers.BeforeHandler.process","location":"handlers/com.hexagontk.handlers/-before-handler/process.html","searchKeys":["process","open override fun process(context: Context<T>): Context<T>","com.hexagontk.handlers.BeforeHandler.process"]},{"name":"open override fun process(context: Context<T>): Context<T>","description":"com.hexagontk.handlers.ChainHandler.process","location":"handlers/com.hexagontk.handlers/-chain-handler/process.html","searchKeys":["process","open override fun process(context: Context<T>): Context<T>","com.hexagontk.handlers.ChainHandler.process"]},{"name":"open override fun process(context: Context<T>): Context<T>","description":"com.hexagontk.handlers.ExceptionHandler.process","location":"handlers/com.hexagontk.handlers/-exception-handler/process.html","searchKeys":["process","open override fun process(context: Context<T>): Context<T>","com.hexagontk.handlers.ExceptionHandler.process"]},{"name":"open override fun process(context: Context<T>): Context<T>","description":"com.hexagontk.handlers.FilterHandler.process","location":"handlers/com.hexagontk.handlers/-filter-handler/process.html","searchKeys":["process","open override fun process(context: Context<T>): Context<T>","com.hexagontk.handlers.FilterHandler.process"]},{"name":"open override fun process(context: Context<T>): Context<T>","description":"com.hexagontk.handlers.OnHandler.process","location":"handlers/com.hexagontk.handlers/-on-handler/process.html","searchKeys":["process","open override fun process(context: Context<T>): Context<T>","com.hexagontk.handlers.OnHandler.process"]},{"name":"open override val predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.AfterHandler.predicate","location":"handlers/com.hexagontk.handlers/-after-handler/predicate.html","searchKeys":["predicate","open override val predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.AfterHandler.predicate"]},{"name":"open override val predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.BeforeHandler.predicate","location":"handlers/com.hexagontk.handlers/-before-handler/predicate.html","searchKeys":["predicate","open override val predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.BeforeHandler.predicate"]},{"name":"open override val predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.ChainHandler.predicate","location":"handlers/com.hexagontk.handlers/-chain-handler/predicate.html","searchKeys":["predicate","open override val predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.ChainHandler.predicate"]},{"name":"open override val predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.ExceptionHandler.predicate","location":"handlers/com.hexagontk.handlers/-exception-handler/predicate.html","searchKeys":["predicate","open override val predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.ExceptionHandler.predicate"]},{"name":"open override val predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.FilterHandler.predicate","location":"handlers/com.hexagontk.handlers/-filter-handler/predicate.html","searchKeys":["predicate","open override val predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.FilterHandler.predicate"]},{"name":"open override val predicate: (Context<T>) -> Boolean","description":"com.hexagontk.handlers.OnHandler.predicate","location":"handlers/com.hexagontk.handlers/-on-handler/predicate.html","searchKeys":["predicate","open override val predicate: (Context<T>) -> Boolean","com.hexagontk.handlers.OnHandler.predicate"]},{"name":"val callback: (Context<T>) -> Context<T>","description":"com.hexagontk.handlers.AfterHandler.callback","location":"handlers/com.hexagontk.handlers/-after-handler/callback.html","searchKeys":["callback","val callback: (Context<T>) -> Context<T>","com.hexagontk.handlers.AfterHandler.callback"]},{"name":"val callback: (Context<T>) -> Context<T>","description":"com.hexagontk.handlers.BeforeHandler.callback","location":"handlers/com.hexagontk.handlers/-before-handler/callback.html","searchKeys":["callback","val callback: (Context<T>) -> Context<T>","com.hexagontk.handlers.BeforeHandler.callback"]},{"name":"val callback: (Context<T>) -> Context<T>","description":"com.hexagontk.handlers.ExceptionHandler.callback","location":"handlers/com.hexagontk.handlers/-exception-handler/callback.html","searchKeys":["callback","val callback: (Context<T>) -> Context<T>","com.hexagontk.handlers.ExceptionHandler.callback"]},{"name":"val callback: (Context<T>) -> Context<T>","description":"com.hexagontk.handlers.FilterHandler.callback","location":"handlers/com.hexagontk.handlers/-filter-handler/callback.html","searchKeys":["callback","val callback: (Context<T>) -> Context<T>","com.hexagontk.handlers.FilterHandler.callback"]},{"name":"val callback: (Context<T>) -> Context<T>","description":"com.hexagontk.handlers.OnHandler.callback","location":"handlers/com.hexagontk.handlers/-on-handler/callback.html","searchKeys":["callback","val callback: (Context<T>) -> Context<T>","com.hexagontk.handlers.OnHandler.callback"]},{"name":"val exception: KClass<E>","description":"com.hexagontk.handlers.ExceptionHandler.exception","location":"handlers/com.hexagontk.handlers/-exception-handler/exception.html","searchKeys":["exception","val exception: KClass<E>","com.hexagontk.handlers.ExceptionHandler.exception"]},{"name":"val exceptionCallback: (Context<T>, E) -> Context<T>","description":"com.hexagontk.handlers.ExceptionHandler.exceptionCallback","location":"handlers/com.hexagontk.handlers/-exception-handler/exception-callback.html","searchKeys":["exceptionCallback","val exceptionCallback: (Context<T>, E) -> Context<T>","com.hexagontk.handlers.ExceptionHandler.exceptionCallback"]},{"name":"val handlers: Array<Handler<T>>","description":"com.hexagontk.handlers.ChainHandler.handlers","location":"handlers/com.hexagontk.handlers/-chain-handler/handlers.html","searchKeys":["handlers","val handlers: Array<Handler<T>>","com.hexagontk.handlers.ChainHandler.handlers"]},{"name":"abstract class JacksonTextFormat(factoryGenerator: () -> JsonFactory = { JsonFactory() }, prettyPrint: Boolean = true, relaxed: Boolean = false) : SerializationFormat","description":"com.hexagontk.serialization.jackson.JacksonTextFormat","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-text-format/index.html","searchKeys":["JacksonTextFormat","abstract class JacksonTextFormat(factoryGenerator: () -> JsonFactory = { JsonFactory() }, prettyPrint: Boolean = true, relaxed: Boolean = false) : SerializationFormat","com.hexagontk.serialization.jackson.JacksonTextFormat"]},{"name":"constructor(factoryGenerator: () -> JsonFactory = { JsonFactory() }, prettyPrint: Boolean = true, relaxed: Boolean = false)","description":"com.hexagontk.serialization.jackson.JacksonTextFormat.JacksonTextFormat","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-text-format/-jackson-text-format.html","searchKeys":["JacksonTextFormat","constructor(factoryGenerator: () -> JsonFactory = { JsonFactory() }, prettyPrint: Boolean = true, relaxed: Boolean = false)","com.hexagontk.serialization.jackson.JacksonTextFormat.JacksonTextFormat"]},{"name":"fun mapNode(node: JsonNode): Any","description":"com.hexagontk.serialization.jackson.JacksonHelper.mapNode","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-helper/map-node.html","searchKeys":["mapNode","fun mapNode(node: JsonNode): Any","com.hexagontk.serialization.jackson.JacksonHelper.mapNode"]},{"name":"object JacksonHelper","description":"com.hexagontk.serialization.jackson.JacksonHelper","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-helper/index.html","searchKeys":["JacksonHelper","object JacksonHelper","com.hexagontk.serialization.jackson.JacksonHelper"]},{"name":"open override fun parse(input: InputStream): Any","description":"com.hexagontk.serialization.jackson.JacksonTextFormat.parse","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-text-format/parse.html","searchKeys":["parse","open override fun parse(input: InputStream): Any","com.hexagontk.serialization.jackson.JacksonTextFormat.parse"]},{"name":"open override fun serialize(instance: Any): String","description":"com.hexagontk.serialization.jackson.JacksonTextFormat.serialize","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-text-format/serialize.html","searchKeys":["serialize","open override fun serialize(instance: Any): String","com.hexagontk.serialization.jackson.JacksonTextFormat.serialize"]},{"name":"open override fun serialize(instance: Any, output: OutputStream)","description":"com.hexagontk.serialization.jackson.JacksonTextFormat.serialize","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-text-format/serialize.html","searchKeys":["serialize","open override fun serialize(instance: Any, output: OutputStream)","com.hexagontk.serialization.jackson.JacksonTextFormat.serialize"]},{"name":"open override val textFormat: Boolean = true","description":"com.hexagontk.serialization.jackson.JacksonTextFormat.textFormat","location":"serialization/serialization_jackson/com.hexagontk.serialization.jackson/-jackson-text-format/text-format.html","searchKeys":["textFormat","open override val textFormat: Boolean = true","com.hexagontk.serialization.jackson.JacksonTextFormat.textFormat"]}]